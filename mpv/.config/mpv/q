[4mMPV[24m(1)                                                 multimedia                                                 [4mMPV[24m(1)

[1mNAME[0m
       mpv - a media player

[1mSYNOPSIS[0m
       [1mmpv [22m[options] [file|URL|PLAYLIST|-]
       [1mmpv [22m[options] files

[1mDESCRIPTION[0m
       [1mmpv  [22mis a media player based on MPlayer and mplayer2. It supports a wide variety of video file formats, audio and
       video codecs, and subtitle types. Special input URL types are available to read input from a variety  of  sources
       other  than  disk  files.  Depending  on platform, a variety of different video and audio output methods are sup‚Äê
       ported.

       Usage examples to get you started quickly can be found at the end of this man page.

[1mINTERACTIVE CONTROL[0m
       mpv has a fully configurable, command-driven control layer which allows you to control mpv using keyboard, mouse,
       or remote control (there is no LIRC support - configure remotes as input devices instead).

       See the [1m--input- [22moptions for ways to customize it.

       The following listings are not necessarily complete. See [1metc/input.conf [22min the mpv source files for a list of de‚Äê
       fault bindings. User [1minput.conf [22mfiles and Lua scripts can define additional key bindings.

       See [4mCOMMAND[24m [4mINTERFACE[24m and [4mKey[24m [4mnames[24m sections for more details on configuring keybindings.

       See also [1m--input-test [22mfor interactive binding details by key, and the [4mstats[24m built-in script for key bindings list
       (including print to terminal).

   [1mKeyboard Control[0m
       [1mLEFT and RIGHT[0m
              Seek backward/forward 5 seconds. Shift+arrow does a 1 second exact seek (see [1m--hr-seek[22m).

       [1mUP and DOWN[0m
              Seek forward/backward 1 minute. Shift+arrow does a 5 second exact seek (see [1m--hr-seek[22m).

       [1mCtrl+LEFT and Ctrl+RIGHT[0m
              Seek to the previous/next subtitle. Subject to some restrictions and might not always work;  see  [1msub-seek[0m
              command.

       [1mCtrl+Shift+LEFT and Ctrl+Shift+RIGHT[0m
              Adjust subtitle delay so that the next or previous subtitle is displayed now. This is especially useful to
              sync subtitles to audio.

       [1m[ and ][0m
              Decrease/increase current playback speed by 10%.

       [1m{ and }[0m
              Halve/double current playback speed.

       [1mBACKSPACE[0m
              Reset playback speed to normal.

       [1mShift+BACKSPACE[0m
              Undo  the last seek. This works only if the playlist entry was not changed.  Hitting it a second time will
              go back to the original position.  See [1mrevert-seek [22mcommand for details.

       [1mShift+Ctrl+BACKSPACE[0m
              Mark the current position. This will then be used by [1mShift+BACKSPACE [22mas revert  position  (once  you  seek
              back,  the marker will be reset). You can use this to seek around in the file and then return to the exact
              position where you left off.

       [1m< and >[0m
              Go backward/forward in the playlist.

       [1mENTER  [22mGo forward in the playlist.

       [1mp and SPACE[0m
              Pause (pressing again unpauses).

       [1m.      [22mStep forward. Pressing once will pause, every consecutive press will play one frame and then go into pause
              mode again.

       [1m,      [22mStep backward. Pressing once will pause, every consecutive press will play one frame in reverse  and  then
              go into pause mode again.

       [1mq      [22mStop playing and quit.

       [1mQ      [22mLike  [1mq[22m, but store the current playback position. Playing the same file later will resume at the old play‚Äê
              back position if possible. See [4mRESUMING[24m [4mPLAYBACK[24m.

       [1m/ and *[0m
              Decrease/increase volume.

       [1m9 and 0[0m
              Decrease/increase volume.

       [1mm      [22mMute sound.

       [1m_      [22mCycle through the available video tracks.

       [1m#      [22mCycle through the available audio tracks.

       [1mE      [22mCycle through the available Editions.

       [1mf      [22mToggle fullscreen (see also [1m--fs[22m).

       [1mESC    [22mExit fullscreen mode.

       [1mT      [22mToggle stay-on-top (see also [1m--ontop[22m).

       [1mw and W[0m
              Decrease/increase pan-and-scan range. The [1me [22mkey does the same as [1mW [22mcurrently, but use is discouraged.

       [1mo and P[0m
              Show progression bar, elapsed time and total duration on the OSD.

       [1mO      [22mToggle OSD states between normal and playback time/duration.

       [1mv      [22mToggle subtitle visibility.

       [1mj and J[0m
              Cycle through the available subtitles.

       [1mz and Z[0m
              Adjust subtitle delay by +/- 0.1 seconds. The [1mx [22mkey does the same as [1mZ [22mcurrently, but use is discouraged.

       [1ml      [22mSet/clear A-B loop points. See [1mab-loop [22mcommand for details.

       [1mL      [22mToggle infinite looping.

       [1mCtrl++ and Ctrl+-[0m
              Adjust audio delay (A/V sync) by +/- 0.1 seconds.

       [1mShift+g and Shift+f[0m
              Adjust subtitle font size by +/- 10%.

       [1mu      [22mSwitch between applying only [1m--sub-ass-* [22moverrides (default) to SSA/ASS subtitles, and overriding them al‚Äê
              most completely with the normal subtitle style. See [1m--sub-ass-override [22mfor more info.

       [1mV      [22mToggle subtitle VSFilter aspect compatibility mode. See [1m--sub-ass-vsfilter-aspect-compat [22mfor more info.

       [1mr and R[0m
              Move subtitles up/down. The [1mt [22mkey does the same as [1mR [22mcurrently, but use is discouraged.

       [1ms      [22mTake a screenshot.

       [1mS      [22mTake a screenshot, without subtitles. (Whether this works depends on VO driver support.)

       [1mCtrl+s [22mTake a screenshot, as the window shows it (with subtitles, OSD, and scaled video).

       [1mPGUP and PGDWN[0m
              Seek to the beginning of the previous/next chapter. In most cases, "previous" will actually go to the  be‚Äê
              ginning of the current chapter; see [1m--chapter-seek-threshold[22m.

       [1mShift+PGUP and Shift+PGDWN[0m
              Seek backward or forward by 10 minutes. (This used to be mapped to PGUP/PGDWN without Shift.)

       [1md      [22mActivate/deactivate deinterlacer.

       [1mA      [22mCycle aspect ratio override.

       [1mCtrl+h [22mToggle hardware video decoding on/off.

       [1mAlt+LEFT, Alt+RIGHT, Alt+UP, Alt+DOWN[0m
              Move the video rectangle (panning).

       [1mAlt++ and Alt+-[0m
              Combining [1mAlt [22mwith the [1m+ [22mor [1m- [22mkeys changes video zoom.

       [1mAlt+BACKSPACE[0m
              Reset the pan/zoom settings.

       [1mF8     [22mShow the playlist and the current position in it (useful only if a UI window is used, broken on the termi‚Äê
              nal).

       [1mF9     [22mShow the list of audio and subtitle streams (useful only if a UI window  is used, broken on the terminal).

       [1mi and I[0m
              Show/toggle  an  overlay  displaying statistics about the currently playing file such as codec, framerate,
              number of dropped frames and so on. See [4mSTATS[24m for more information.

       [1mDEL    [22mCycle OSC visibility between never / auto (mouse-move) / always

       [1m`      [22mShow the console. (ESC closes it again. See [4mCONSOLE[24m.)

       (The following keys are valid only when using a video output that supports the corresponding adjustment.)

       [1m1 and 2[0m
              Adjust contrast.

       [1m3 and 4[0m
              Adjust brightness.

       [1m5 and 6[0m
              Adjust gamma.

       [1m7 and 8[0m
              Adjust saturation.

       [1mAlt+0 (and Command+0 on macOS)[0m
              Resize video window to half its original size.

       [1mAlt+1 (and Command+1 on macOS)[0m
              Resize video window to its original size.

       [1mAlt+2 (and Command+2 on macOS)[0m
              Resize video window to double its original size.

       [1mCommand + f (macOS only)[0m
              Toggle fullscreen (see also [1m--fs[22m).

       (The following keys are valid if you have a keyboard with multimedia keys.)

       [1mPAUSE  [22mPause.

       [1mSTOP   [22mStop playing and quit.

       [1mPREVIOUS and NEXT[0m
              Seek backward/forward 1 minute.

       [1mZOOMIN and ZOOMOUT[0m
              Changes video zoom.

       If you miss some older key bindings, look at [1metc/restore-old-bindings.conf [22min the mpv git repository.

   [1mMouse Control[0m
       [1mLeft double click[0m
              Toggle fullscreen on/off.

       [1mRight click[0m
              Toggle pause on/off.

       [1mForward/Back button[0m
              Skip to next/previous entry in playlist.

       [1mWheel up/down[0m
              Decrease/increase volume.

       [1mWheel left/right[0m
              Seek forward/backward 10 seconds.

[1mUSAGE[0m
       Command line arguments starting with [1m- [22mare interpreted as options, everything else as filenames or URLs. All  op‚Äê
       tions except [4mflag[24m options (or choice options which include [1myes[22m) require a parameter in the form [1m--option=value[22m.

       One  exception  is  the  lone [1m- [22m(without anything else), which means media data will be read from stdin. Also, [1m--[0m
       (without anything else) will make the player interpret all following arguments as filenames, even if  they  start
       with [1m-[22m. (To play a file named [1m-[22m, you need to use [1m./-[22m.)

       Every [4mflag[24m option has a [4mno-flag[24m counterpart, e.g. the opposite of the [1m--fs [22moption is [1m--no-fs[22m. [1m--fs=yes [22mis same as
       [1m--fs[22m, [1m--fs=no [22mis the same as [1m--no-fs[22m.

       If  an option is marked as [4m(XXX[24m [4monly)[24m, it will only work in combination with the [4mXXX[24m option or if [4mXXX[24m is compiled
       in.

   [1mLegacy option syntax[0m
       The [1m--option=value [22msyntax is not strictly enforced, and the alternative legacy  syntax  [1m-option  value  [22mand  [1m-op‚Äê[0m
       [1mtion=value  [22mwill  also work. This is mostly  for compatibility with MPlayer. Using these should be avoided. Their
       semantics can change any time in the future.

       For example, the alternative syntax will consider an argument following the option a filename. [1mmpv  -fs  no  [22mwill
       attempt  to  play a file named [1mno[22m, because [1m--fs [22mis a flag option that requires no parameter. If an option changes
       and its parameter becomes optional, then a command line using the alternative syntax will break.

       Until mpv 0.31.0, there was no difference whether an option started with [1m-- [22mor a single  [1m-[22m.  Newer  mpv  releases
       strictly  expect that you pass the option value after a [1m=[22m. For example, before [1mmpv --log-file f.txt [22mwould write a
       log to [1mf.txt[22m, but now this command line fails, as [1m--log-file [22mexpects an option value, and [1mf.txt [22mis simply consid‚Äê
       ered a normal file to be played (as in [1mmpv f.txt[22m).

       The future plan is that [1m-option value [22mwill not work anymore, and options with a single [1m- [22mbehave the  same  as  [1m--[0m
       options.

   [1mEscaping spaces and other special characters[0m
       Keep in mind that the shell will partially parse and mangle the arguments you pass to mpv. For example, you might
       need to quote or escape options and filenames:
          [1mmpv "filename with spaces.mkv" --title="window title"[0m

       It  gets  more  complicated if the suboption parser is involved. The suboption parser puts several options into a
       single string, and passes them to a component at once, instead of using multiple options on the level of the com‚Äê
       mand line.

       The suboption parser can quote strings with [1m" [22mand [1m[...][22m.  Additionally, there is a special form of  quoting  with
       [1m%n% [22mdescribed below.

       For example, assume the hypothetical [1mfoo [22mfilter can take multiple options:
          [1mmpv test.mkv --vf=foo:option1=value1:option2:option3=value3,bar[0m

       This  passes [1moption1 [22mand [1moption3 [22mto the [1mfoo [22mfilter, with [1moption2 [22mas flag (implicitly [1moption2=yes[22m), and adds a [1mbar[0m
       filter after that. If an option contains spaces or characters like [1m, [22mor [1m:[22m, you need to quote them:
          [1mmpv '--vf=foo:option1="option value with spaces",bar'[0m

       Shells may actually strip some quotes from the string passed to the commandline, so the example quotes the string
       twice, ensuring that mpv receives the [1m" [22mquotes.

       The [1m[...] [22mform of quotes wraps everything between [1m[ [22mand [1m][22m. It's useful with shells  that  don't  interpret  these
       characters  in  the  middle  of an argument (like bash). These quotes are balanced (since mpv 0.9.0): the [1m[ [22mand [1m][0m
       nest, and the quote terminates on the last [1m] [22mthat has no matching [1m[ [22mwithin the string. (For example, [1m[a[b]c]  [22mre‚Äê
       sults in [1ma[b]c[22m.)

       The fixed-length quoting syntax is intended for use with external scripts and programs.

       It is started with [1m% [22mand has the following format:

          %n%string_of_length_n

          Examples

                 [1mmpv '--vf=foo:option1=%11%quoted text' test.avi[0m

                 Or in a script:

                 [1mmpv --vf=foo:option1=%`expr length "$NAME"`%"$NAME" test.avi[0m

       Note: where applicable with JSON-IPC, [1m%n% [22mis the length in UTF-8 bytes, after decoding the JSON data.

       Suboptions  passed  to the client API are also subject to escaping. Using [1mmpv_set_option_string() [22mis exactly like
       passing [1m--name=data [22mto the command line (but without shell processing of the string). Some options support  pass‚Äê
       ing  values in a more structured way instead of flat strings, and can avoid the suboption parsing mess. For exam‚Äê
       ple, [1m--vf [22msupports [1mMPV_FORMAT_NODE[22m, which lets you pass suboptions as a nested data structure of maps and arrays.

   [1mPaths[0m
       Some care must be taken when passing arbitrary paths and filenames to mpv. For example,  paths  starting  with  [1m-[0m
       will  be  interpreted  as options. Likewise, if a path contains the sequence [1m://[22m, the string before that might be
       interpreted as protocol prefix, even though [1m:// [22mcan be part of a legal UNIX path. To avoid  problems  with  arbi‚Äê
       trary  paths,  you  should be sure that absolute paths passed to mpv start with [1m/[22m, and prefix relative paths with
       [1m./[22m.

       Using the [1mfile:// [22mpseudo-protocol is discouraged, because it involves strange URL unescaping rules.

       The name [1m- [22mitself is interpreted as stdin, and will cause mpv to disable console controls. (Which makes it  suit‚Äê
       able for playing data piped to stdin.)

       The special argument [1m-- [22mcan be used to stop mpv from interpreting the following arguments as options.

       When  using the client API, you should strictly avoid using [1mmpv_command_string [22mfor invoking the [1mloadfile [22mcommand,
       and instead prefer e.g. [1mmpv_command [22mto avoid the need for filename escaping.

       For paths passed to suboptions, the situation is further complicated by the need to escape special characters. To
       work this around, the path can be additionally wrapped in the  fixed-length  syntax,  e.g.  [1m%n%string_of_length_n[0m
       (see above).

       Some mpv options interpret paths starting with [1m~[22m.  Currently, the prefix [1m~~home/ [22mexpands to the mpv configuration
       directory  (usually  [1m~/.config/mpv/[22m).   [1m~/  [22mexpands  to  the user's home directory. (The trailing [1m/ [22mis always re‚Äê
       quired.) The following paths are currently recognized:
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   Name           Meaning
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~/            [22mIf the subpath  exists  in  any  of  the
                                                  mpv's config directories the path of the
                                                  existing file/dir is returned. Otherwise
                                                  this  is  equivalent  to  [1m~~home/[22m.  Note
                                                  that if --no-config  is  used  [1m~~/foobar[0m
                                                  will  resolve to [1mfoobar [22mwhich can be un‚Äê
                                                  expected.
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~/             [22muser home  directory  root  (similar  to
                                                  shell, [1m$HOME[22m)
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~home/        [22mmpv  config  dir  (for  example  [1m~/.con‚Äê[0m
                                                  [1mfig/mpv/[22m)
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~global/      [22mthe global  config  path,  if  available
                                                  (not on win32)
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~osxbundle/   [22mthe  macOS  bundle  resource path (macOS
                                                  only)
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~desktop/     [22mthe path to the desktop (win32, macOS)
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~exe_dir/     [22mwin32 only: the path  to  the  directory
                                                  containing the exe (for config file pur‚Äê
                                                  poses; [1m$MPV_HOME [22moverrides it)
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~cache/       [22mthe   path  to  application  cache  data
                                                  ([1m~/.cache/mpv/[22m) On some platforms,  this
                                                  will be the same as [1m~~home/[22m.
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~state/       [22mthe   path  to  application  state  data
                                                  ([1m~/.local/state/mpv/[22m) On some platforms,
                                                  this will be the same as [1m~~home/[22m.
                                 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                   [1m~~old_home/    [22mdo not use
                                 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
   [1mPer-File Options              [22m‚îÇ              ‚îÇ                                          ‚îÇ
       When playing multiple file‚îÇs, any option g‚îÇiven on the command line usually affects al‚îÇl files. Example:
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
          mpv --a file1.mkv --b f‚îÇile2.mkv --c   ‚îÇ                                          ‚îÇ
                                 ‚îÇ              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê             ‚îÇ
                                 ‚îÇ              ‚îÇ File      ‚îÇ Active options ‚îÇ             ‚îÇ
                                 ‚îÇ              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§             ‚îÇ
                                 ‚îÇ              ‚îÇ file1.mkv ‚îÇ [1m--a --b --c    [22m‚îÇ             ‚îÇ
                                 ‚îÇ              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§             ‚îÇ
                                 ‚îÇ              ‚îÇ file2.mkv ‚îÇ [1m--a --b --c    [22m‚îÇ             ‚îÇ
                                 ‚îÇ              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò             ‚îÇ
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
       (This is different from MP‚îÇlayer and mplay‚îÇer2.)                                      ‚îÇ
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
       Also, if any option is cha‚îÇnged at runtime‚îÇ(via input commands), they are not reset w‚îÇhen a new file is played.
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
       Sometimes, it is useful to‚îÇchange options‚îÇper-file. This can be achieved by adding t‚îÇhe special  per-file  markers
       [1m--{ [22mand [1m--}[22m. (Note that yo‚îÇu must escape t‚îÇhese on some shells.) Example:             ‚îÇ
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
          mpv --a file1.mkv --b -‚îÇ-\{ --c file2.m‚îÇkv --d file3.mkv --e --\} file4.mkv --f    ‚îÇ
                                 ‚îÇ         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê         ‚îÇ
                                 ‚îÇ         ‚îÇ Fil‚îÇe      ‚îÇ Active options          ‚îÇ         ‚îÇ
                                 ‚îÇ         ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§         ‚îÇ
                                 ‚îÇ         ‚îÇ fil‚îÇe1.mkv ‚îÇ [1m--a --b --f             [22m‚îÇ         ‚îÇ
                                 ‚îÇ         ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§         ‚îÇ
                                 ‚îÇ         ‚îÇ fil‚îÇe2.mkv ‚îÇ [1m--a --b --f --c --d --e [22m‚îÇ         ‚îÇ
                                 ‚îÇ         ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§         ‚îÇ
                                 ‚îÇ         ‚îÇ fil‚îÇe3.mkv ‚îÇ [1m--a --b --f --c --d --e [22m‚îÇ         ‚îÇ
                                 ‚îÇ         ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§         ‚îÇ
                                 ‚îÇ         ‚îÇ fil‚îÇe4.mkv ‚îÇ [1m--a --b --f             [22m‚îÇ         ‚îÇ
                                 ‚îÇ         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò         ‚îÇ
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
       Additionally,  any  file-l‚îÇocal  option ch‚îÇanged at runtime is reset when the current ‚îÇfile stops playing. If option
       [1m--c [22mis changed during play‚îÇback of [1mfile2.m[22m‚îÇ[1mkv[22m, it is reset when advancing to [1mfile3.mkv[22m‚îÇ. This only affects  file-lo‚Äê
       cal options. The option [1m--[22m‚îÇ[1ma [22mis never rese‚îÇt here.                                    ‚îÇ
                                 ‚îÇ              ‚îÇ                                          ‚îÇ
   [1mList Options                  [22m‚îÇ              ‚îÇ                                          ‚îÇ
       Some  options which store lists of option values can have action suffixes. For example, the [1m--display-tags [22moption
       takes a [1m,[22m-separated list of tags, but the option also allows you to append a single tag  with  [1m--display-tags-ap‚Äê[0m
       [1mpend[22m, and the tag name can for example contain a literal [1m, [22mwithout the need for escaping.

   [1mString list and path list options[0m
       String  lists are separated by [1m,[22m. The strings are not parsed or interpreted by the option system itself. However,
       most path or file list options use [1m: [22m(Unix) or [1m; [22m(Windows) as separator, instead of [1m,[22m.

       They support the following operations:
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      Suffix    Meaning
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -set      Set a list of items (using the list sep‚Äê
                                                arator, escaped with backslash)
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -append   Append single item (does  not  interpret
                                                escapes)
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -add      Append  1  or more items (same syntax as
                                                -set)
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -pre      Prepend 1 or more items (same syntax  as
                                                -set)
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -clr      Clear the option (remove all items)
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -remove   Delete  item if present (does not inter‚Äê
                                                pret escapes)
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      -toggle   Append an item, or remove if if  it  al‚Äê
                                                ready exists (no escapes)
                                    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
       [1m-append  [22mis  meant  as  a sim‚îÇple way to‚îÇappend a single item without having to esc‚îÇape the argument (you may still
       need to escape on the shell l‚îÇevel).    ‚îÇ                                          ‚îÇ
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
   [1mKey/value list options           [22m‚îÇ         ‚îÇ                                          ‚îÇ
       A key/value list is a list of‚îÇkey/value‚îÇstring pairs. In programming languages, th‚îÇis type of  data  structure  is
       often  called  a  map or a di‚îÇctionary. ‚îÇThe order normally does not matter, althoug‚îÇh in some cases the order might
       matter.                      ‚îÇ         ‚îÇ                                          ‚îÇ
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
       They support the following op‚îÇerations: ‚îÇ                                          ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ Suffix  ‚îÇ Meaning                                  ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -set    ‚îÇ Set a list of items (using [1m, [22mas  separa‚Äê ‚îÇ
                                    ‚îÇ         ‚îÇ tor)                                     ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -append ‚îÇ Append  a  single  item (escapes for the ‚îÇ
                                    ‚îÇ         ‚îÇ key, no escapes for the value)           ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -add    ‚îÇ Append 1 or more items (same  syntax  as ‚îÇ
                                    ‚îÇ         ‚îÇ -set)                                    ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -remove ‚îÇ Delete  item by key if present (does not ‚îÇ
                                    ‚îÇ         ‚îÇ interpret escapes)                       ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
       Keys are unique within the li‚îÇst. If an ‚îÇalready present key is set, the existing ke‚îÇy is  removed  before  the  new
       value is appended.           ‚îÇ         ‚îÇ                                          ‚îÇ
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
       If  you want to pass a value ‚îÇwithout in‚îÇterpreting it for escapes or [1m,[22m, it is recom‚îÇmended to use the [1m-append [22mvari‚Äê
       ant. When using libmpv, prefe‚îÇr using [1mMP[22m‚îÇ[1mV_FORMAT_NODE_MAP[22m; when using a scripting b‚îÇackend or the JSON IPC, use  an
       appropriate structured data t‚îÇype.      ‚îÇ                                          ‚îÇ
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
       Prior to mpv 0.33, [1m: [22mwas also‚îÇrecognize‚îÇd as separator by [1m-set[22m.                    ‚îÇ
                                    ‚îÇ         ‚îÇ                                          ‚îÇ
   [1mFilter options                   [22m‚îÇ         ‚îÇ                                          ‚îÇ
       This  is a very complex optio‚îÇn type for‚îÇthe [1m--af [22mand [1m--vf [22moptions only.  They ofte‚îÇn require complicated escaping.
       See [4mVIDEO[24m [4mFILTERS[24m for details‚îÇ. They sup‚îÇport the following operations:             ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ Suffix  ‚îÇ Meaning                                  ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -set    ‚îÇ Set a list of filters (using [1m, [22mas  sepa‚Äê ‚îÇ
                                    ‚îÇ         ‚îÇ rator)                                   ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -append ‚îÇ Append single filter                     ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -add    ‚îÇ Append 1 or more filters (same syntax as ‚îÇ
                                    ‚îÇ         ‚îÇ -set)                                    ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -pre    ‚îÇ Prepend  1  or more filters (same syntax ‚îÇ
                                    ‚îÇ         ‚îÇ as -set)                                 ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -clr    ‚îÇ Clear the option (remove all filters)    ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -remove ‚îÇ Delete filter if present                 ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -toggle ‚îÇ Append a filter, or remove if if it  al‚Äê ‚îÇ
                                    ‚îÇ         ‚îÇ ready exists                             ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ -help   ‚îÇ Pseudo operation that prints a help text ‚îÇ
                                    ‚îÇ         ‚îÇ to the terminal                          ‚îÇ
                                    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

   [1mGeneral[0m
       Without suffix, the operation used is normally [1m-set[22m.

       Although  some operations allow specifying multiple items, using this is strongly discouraged and deprecated, ex‚Äê
       cept for [1m-set[22m. There is a chance that operations like [1m-add [22mand [1m-pre [22mwill work like [1m-append [22mand accept  a  single,
       unescaped item only (so the [1m, [22mseparator will not be interpreted and is passed on as part of the value).

       Some  options  (like  [1m--sub-file[22m, [1m--audio-file[22m, [1m--glsl-shader[22m) are aliases for the proper option with [1m-append [22mac‚Äê
       tion. For example, [1m--sub-file [22mis an alias for [1m--sub-files-append[22m.

       Options of this type can be changed at runtime using the [1mchange-list [22mcommand, which takes the suffix (without the
       [1m-[22m) as separate operation parameter.

[1mCONFIGURATION FILES[0m
   [1mLocation and Syntax[0m
       You can put all of the options in configuration files which will be read every time mpv is run.  The  system-wide
       configuration  file  'mpv.conf'  is  in  your  configuration directory (e.g. [1m/etc/mpv [22mor [1m/usr/local/etc/mpv[22m), the
       user-specific one is [1m~/.config/mpv/mpv.conf[22m. For details and platform specifics (in particular Windows paths) see
       the [4mFILES[24m section.

       User-specific options override system-wide options and options given on the command line override both. The  syn‚Äê
       tax  of  the configuration files is [1moption=value[22m. Everything after a [4m#[24m is considered a comment. Options that work
       without values can be enabled by setting them to [4myes[24m and disabled by setting them to [4mno[24m,  and  if  the  value  is
       omitted, [4myes[24m is implied. Even suboptions can be specified in this way.

          Example configuration file

              # Don't allow new windows to be larger than the screen.
              autofit-larger=100%x100%
              # Enable hardware decoding if available, =yes is implied.
              hwdec
              # Spaces don't have to be escaped.
              osd-playing-msg=File: ${filename}

   [1mEscaping special characters[0m
       This  is  done  like  with  command  line  options.  A  config entry can be quoted with [1m"[22m, [1m'[22m, as well as with the
       fixed-length syntax ([1m%n%[22m) mentioned before. This is like passing the exact contents of the  quoted  string  as  a
       command line option. C-style escapes are currently _not_ interpreted on this level, although some options do this
       manually (this is a mess and should probably be changed at some point). The shell is not involved here, so option
       values  only need to be quoted to escape [1m# [22mand [1m\[22m, [1m"[22m, [1m' [22mor [1m% [22mat the beginning of the value, and leading and trail‚Äê
       ing whitespace.

   [1mPutting Command Line Options into the Configuration File[0m
       Almost all command line options can be put into the configuration file. Here is a small guide:
                                       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                       ‚îÇ Option            ‚îÇ Configuration file entry ‚îÇ
                                       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                       ‚îÇ [1m--flag            [22m‚îÇ [1mflag                     [22m‚îÇ
                                       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                       ‚îÇ [1m-opt val          [22m‚îÇ [1mopt=val                  [22m‚îÇ
                                       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                       ‚îÇ [1m--opt=val         [22m‚îÇ [1mopt=val                  [22m‚îÇ
                                       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                       ‚îÇ [1m-opt "has spaces" [22m‚îÇ [1mopt=has spaces           [22m‚îÇ
                                       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

   [1mFile-specific Configuration Files[0m
       You can also write file-specific configuration files. If you wish to have a configuration file for a file  called
       'video.avi',  create  a  file  named  'video.avi.conf' with the file-specific options in it and put it in [1m~/.con‚Äê[0m
       [1mfig/mpv/[22m. You can also put the configuration file in the same directory as the file to be  played.  Both  require
       you  to  set  the  [1m--use-filedir-conf  [22moption  (either  on  the command line or in your global config file). If a
       file-specific configuration file is found in the same directory, no file-specific configuration  is  loaded  from
       [1m~/.config/mpv[22m.  In  addition,  the [1m--use-filedir-conf [22moption enables directory-specific configuration files.  For
       this, mpv first tries to load a mpv.conf from the same directory as the file played and then tries  to  load  any
       file-specific configuration.

   [1mProfiles[0m
       To  ease  working  with  different  configurations, profiles can be defined in the configuration files. A profile
       starts with its name in square brackets, e.g. [1m[my-profile][22m. All following options will be part of the profile.  A
       description  (shown by [1m--profile=help[22m) can be defined with the [1mprofile-desc [22moption. To end the profile, start an‚Äê
       other one or use the profile name [1mdefault [22mto continue with normal options.

       You can list profiles with [1m--profile=help[22m, and show the contents of a profile with [1m--show-profile=<name> [22m(replace
       [1m<name> [22mwith the profile name). You can apply profiles on start with the [1m--profile=<name> [22moption,  or  at  runtime
       with the [1mapply-profile <name> [22mcommand.

          Example mpv config file with profiles

              # normal top-level option
              fullscreen=yes

              # a profile that can be enabled with --profile=big-cache
              [big-cache]
              cache=yes
              demuxer-max-bytes=123400KiB
              demuxer-readahead-secs=20

              [slow]
              profile-desc="some profile name"
              # reference a builtin profile
              profile=high-quality

              [fast]
              vo=vdpau

              # using a profile again extends it
              [slow]
              framedrop=no
              # you can also include other profiles
              profile=big-cache

   [1mRuntime profiles[0m
       Profiles can be set at runtime with [1mapply-profile [22mcommand. Since this operation is "destructive" (every item in a
       profile  is  simply set as an option, overwriting the previous value), you can't just enable and disable profiles
       again.

       As a partial remedy, there is a way to make profiles save old option values before overwriting them with the pro‚Äê
       file values, and then restoring the old values at a later point using [1mapply-profile <profile-name> restore[22m.

       This can be enabled with the [1mprofile-restore [22moption, which takes one of the following options:

          [1mdefault[0m
                 Does nothing, and nothing can be restored (default).

          [1mcopy   [22mWhen applying a profile, copy the old values of all profile options to a  backup  before  setting  them
                 from the profile. These options are reset to their old values using the backup when restoring.

                 Every profile has its own list of backed up values. If the backup already exists (e.g. if [1mapply-profile[0m
                 [1mname [22mwas called more than once in a row), the existing backup is no changed. The restore operation will
                 remove the backup.

                 It's  important to know that restoring does not "undo" setting an option, but simply copies the old op‚Äê
                 tion value. Consider for example [1mvf-add[22m, appends an entry to [1mvf[22m. This mechanism will  simply  copy  the
                 entire [1mvf [22mlist, and does _not_ execute the inverse of [1mvf-add [22m(that would be [1mvf-remove[22m) on restoring.

                 Note  that  if a profile contains recursive profiles (via the [1mprofile [22moption), the options in these re‚Äê
                 cursive profiles are treated as if they were part of this profile. The referenced profile's backup list
                 is not used when creating or using the backup. Restoring a profile does  not  restore  referenced  pro‚Äê
                 files, only the options of referenced profiles (as if they were part of the main profile).

          [1mcopy-equal[0m
                 Similar  to  [1mcopy[22m,  but restore an option only if it has the same value as the value effectively set by
                 the profile. This tries to deal with the situation when the user does not want the option to  be  reset
                 after interactively changing it.

          Example

              [something]
              profile-restore=copy-equal
              vf-add=rotate=PI/2  # rotate by 90 degrees

          Then running these commands will result in behavior as commented:

              set vf vflip
              apply-profile something
              vf add hflip
              apply-profile something
              # vf == vflip,rotate=PI/2,hflip,rotate=PI/2
              apply-profile something restore
              # vf == vflip

   [1mConditional auto profiles[0m
       Profiles  which  have  the  [1mprofile-cond [22moption set are applied automatically if the associated condition matches
       (unless auto profiles are disabled). The option takes a string, which is interpreted as Lua  expression.  If  the
       expression  evaluates as truthy, the profile is applied. If the expression errors or evaluates as falsy, the pro‚Äê
       file is not applied. This Lua code execution is not sandboxed.

       Any variables in condition expressions can reference properties. If an identifier is not already defined  by  Lua
       or mpv, it is interpreted as property.  For example, [1mpause [22mwould return the current pause status. You cannot ref‚Äê
       erence  properties with [1m- [22mthis way since that would denote a subtraction, but if the variable name contains any [1m_[0m
       characters, they are turned into [1m-[22m. For example, [1mplayback_time [22mwould return the property [1mplayback-time[22m.

       A more robust way to access properties is using [1mp.property_name [22mor [1mget("property-name", default_value)[22m. The auto‚Äê
       matic variable to property magic will break if a new identifier with the same name is introduced (for example, if
       a function named [1mpause() [22mwere added, [1mpause [22mwould return a function value instead of the value of the [1mpause  [22mprop‚Äê
       erty).

       Note  that  if  a  property  is not available, it will return [1mnil[22m, which can cause errors if used in expressions.
       These are logged in verbose mode, and the expression is considered to be false.

       Whenever a property referenced by a profile condition changes, the condition is re-evaluated. If the return value
       of the condition changes from falsy or error to truthy, the profile is applied.

       This mechanism tries to "unapply" profiles once the condition changes from truthy to falsy or error. If you  want
       to  use  this,  you need to set [1mprofile-restore [22mfor the profile. Another possibility it to create another profile
       with an inverse condition to undo the other profile.

       Recursive profiles can be used. But it is discouraged to reference other conditional profiles  in  a  conditional
       profile, since this can lead to tricky and unintuitive behavior.

          Example

                 Make only HD video look funny:

              [something]
              profile-desc=HD video sucks
              profile-cond=width >= 1280
              hue=-50

          Make only videos containing "youtube" or "youtu.be" in their path brighter:

              [youtube]
              profile-cond=path:find('youtu%.?be')
              gamma=20

          If you want the profile to be reverted if the condition goes to false again, you can set [1mprofile-restore[22m:

              [something]
              profile-desc=Mess up video when entering fullscreen
              profile-cond=fullscreen
              profile-restore=copy
              vf-add=rotate=PI/2  # rotate by 90 degrees

          This  appends  the  [1mrotate [22mfilter to the video filter chain when entering fullscreen. When leaving fullscreen,
          the [1mvf [22moption is set to the value it had before entering fullscreen. Note that  this  would  also  remove  any
          other filters that were added during fullscreen mode by the user. Avoiding this is trickier, and could for ex‚Äê
          ample be solved by adding a second profile with an inverse condition and operation:

              [something]
              profile-cond=fullscreen
              vf-add=@rot:rotate=PI/2

              [something-inv]
              profile-cond=not fullscreen
              vf-remove=@rot

       [1mWARNING:[0m
          Every  time  an  involved  property changes, the condition is evaluated again.  If your condition uses [1mp.play‚Äê[0m
          [1mback_time [22mfor example, the condition is re-evaluated approximately on every  video  frame.  This  is  probably
          slow.

       This  feature  is  managed by an internal Lua script. Conditions are executed as Lua code within this script. Its
       environment contains at least the following things:

       [1m(function environment table)[0m
              Every Lua function has an environment table. This is used for identifier access. There  is  no  named  Lua
              symbol for it; it is implicit.

              The environment does "magic" accesses to mpv properties. If an identifier is not already defined in [1m_G[22m, it
              retrieves  the  mpv property of the same name. Any occurrences of [1m_ [22min the name are replaced with [1m- [22mbefore
              reading the property. The returned value is as retrieved by  [1mmp.get_property_native(name)[22m.  Internally,  a
              cache  of  property  values, updated by observing the property is used instead, so properties that are not
              observable will be stuck at the initial value forever.

              If you want to access properties, that actually contain [1m_ [22min the name, use [1mget() [22m(which does  not  perform
              transliteration).

              Internally, the environment table has a [1m__index [22mmeta method set, which performs the access logic.

       [1mp      [22mA  "magic" table similar to the environment table. Unlike the latter, this does not prefer accessing vari‚Äê
              ables defined in [1m_G [22m- it always accesses properties.

       [1mget(name [, def])[0m
              Read a property and return its value. If the property value is [1mnil [22m(e.g.  if the property does not exist),
              [1mdef [22mis returned.

              This is superficially similar to [1mmp.get_property_native(name)[22m. An important difference is  that  this  ac‚Äê
              cesses  the property cache, and enables the change detection logic (which is essential to the dynamic run‚Äê
              time behavior of auto profiles). Also, it does not return an error value as second return value.

              The "magic" tables mentioned above use this function as backend. It does not perform  the  [1m_  [22mtranslitera‚Äê
              tion.

       In addition, the same environment as in a blank mpv Lua script is present. For example, [1mmath [22mis defined and gives
       access to the Lua standard math library.

       [1mWARNING:[0m
          This feature is subject to change indefinitely. You might be forced to adjust your profiles on mpv updates.

   [1mLegacy auto profiles[0m
       Some profiles are loaded automatically using a legacy mechanism. The following example demonstrates this:

          Auto profile loading

              [extension.mkv]
              profile-desc="profile for .mkv files"
              vf=vflip

       The  profile  name  follows the schema [1mtype.name[22m, where type can be [1mprotocol [22mfor the input/output protocol in use
       (see [1m--list-protocols[22m), and [1mextension [22mfor the extension of the path of the currently played file  ([4mnot[24m  the  file
       format).

       This feature is very limited, and is considered soft-deprecated. Use conditional auto profiles.

[1mUSING MPV FROM OTHER PROGRAMS OR SCRIPTS[0m
       There are three choices for using mpv from other programs or scripts:

          1. Calling  it as UNIX process. If you do this, [4mdo[24m [4mnot[24m [4mparse[24m [4mterminal[24m [4moutput[24m.  The terminal output is intended
             for humans, and may change any time. In addition, terminal behavior itself may change any time. Compatibil‚Äê
             ity cannot be guaranteed.

             Your code should work even if you pass [1m--no-terminal[22m. Do not attempt to simulate user input by sending ter‚Äê
             minal control codes to mpv's stdin.  If you need interactive control, using  [1m--input-ipc-server  [22mis  recom‚Äê
             mended. This gives you access to the [4mJSON[24m [4mIPC[24m  over unix domain sockets (or named pipes on Windows).

             Depending  on  what  you do, passing [1m--no-config [22mor [1m--config-dir [22mmay be a good idea to avoid conflicts with
             the normal mpv user configuration intended for CLI playback.

             Using [1m--input-ipc-server [22mis also suitable for purposes like remote control (however, the IPC  protocol  it‚Äê
             self is not "secure" and not intended to be so).

          2. Using libmpv. This is generally recommended when mpv is used as playback backend for a completely different
             application. The provided C API is very close to CLI mechanisms and the scripting API.

             Note  that  even  though  libmpv  has different defaults, it can be configured to work exactly like the CLI
             player (except command line parsing is unavailable).

             See [4mEMBEDDING[24m [4mINTO[24m [4mOTHER[24m [4mPROGRAMS[24m [4m(LIBMPV)[24m.

          3. As a user script ([4mLUA[24m [4mSCRIPTING[24m, [4mJAVASCRIPT[24m, [4mC[24m [4mPLUGINS[24m). This is recommended when the goal is to  "enhance"
             the CLI player. Scripts get access to the entire client API of mpv.

             This is the standard way to create third-party extensions for the player.

       All these access the client API, which is the sum of the various mechanisms provided by the player core, as docu‚Äê
       mented here: [4mOPTIONS[24m, [4mList[24m [4mof[24m [4mInput[24m [4mCommands[24m, [4mProperties[24m, [4mList[24m [4mof[24m [4mevents[24m (also see C API), [4mHooks[24m.

[1mTAKING SCREENSHOTS[0m
       Screenshots  of the currently played file can be taken using the 'screenshot' input mode command, which is by de‚Äê
       fault bound to the [1ms [22mkey. Files named [1mmpv-shotNNNN.jpg [22mwill be saved in the working directory,  using  the  first
       available number - no files will be overwritten. In pseudo-GUI mode, the screenshot will be saved somewhere else.
       See [4mPSEUDO[24m [4mGUI[24m [4mMODE[24m.

       A screenshot will usually contain the unscaled video contents at the end of the video filter chain and subtitles.
       By default, [1mS [22mtakes screenshots without subtitles, while [1ms [22mincludes subtitles.

       Unlike  with MPlayer, the [1mscreenshot [22mvideo filter is not required. This filter was never required in mpv, and has
       been removed.

[1mTERMINAL STATUS LINE[0m
       During playback, mpv shows the playback status on the terminal. It looks like something like this:
          [1mAV: 00:03:12 / 00:24:25 (13%) A-V: -0.000[0m

       The status line can be overridden with the [1m--term-status-msg [22moption.

       The following is a list of things that can show up in the status line. Input properties, that can be used to  get
       the same information manually, are also listed.

       ‚Ä¢ [1mAV: [22mor [1mV: [22m(video only) or [1mA: [22m(audio only)

       ‚Ä¢ The current time position in [1mHH:MM:SS [22mformat ([1mplayback-time [22mproperty)

       ‚Ä¢ The total file duration (absent if unknown) ([1mduration [22mproperty)

       ‚Ä¢ Playback  speed,  e.g. [1mx2.0[22m. Only visible if the speed is not normal. This is the user-requested speed, and not
         the actual speed  (usually they should be the same, unless playback is too slow). ([1mspeed [22mproperty.)

       ‚Ä¢ Playback percentage, e.g. [1m(13%)[22m. How much of the file has been played.  Normally calculated out of playback po‚Äê
         sition and duration, but can fallback to other methods (like byte position) if these are not available.   ([1mper‚Äê[0m
         [1mcent-pos [22mproperty.)

       ‚Ä¢ The audio/video sync as [1mA-V:  0.000[22m. This is the difference between audio and video time. Normally it should be
         0 or close to 0. If it's growing, it might indicate a playback problem. ([1mavsync [22mproperty.)

       ‚Ä¢ Total  A/V  sync  change,  e.g. [1mct: -0.417[22m. Normally invisible. Can show up if there is audio "missing", or not
         enough frames can be dropped. Usually this will indicate a problem. ([1mtotal-avsync-change [22mproperty.)

       ‚Ä¢ Encoding state in [1m{...}[22m, only shown in encoding mode.

       ‚Ä¢ Display sync state. If display sync is active ([1mdisplay-sync-active [22mproperty), this shows  [1mDS:  2.500/13[22m,  where
         the  first  number  is  average  number  of  vsyncs  per video frame (e.g. 2.5 when playing 24Hz videos on 60Hz
         screens), which might jitter if the ratio doesn't round off, or there are mistimed  frames  ([1mvsync-ratio[22m),  and
         the second number of estimated number of vsyncs which took too long ([1mvo-delayed-frame-count [22mproperty). The lat‚Äê
         ter is a heuristic, as it's generally not possible to determine this with certainty.

       ‚Ä¢ Dropped frames, e.g. [1mDropped: 4[22m. Shows up only if the count is not 0. Can grow if the video framerate is higher
         than  that of the display, or if video rendering is too slow. May also be incremented on "hiccups" and when the
         video frame couldn't be displayed on time. ([1mframe-drop-count [22mproperty.)  If the decoder drops frames, the  num‚Äê
         ber of decoder-dropped frames is appended to the display as well, e.g.: [1mDropped: 4/34[22m. This happens only if de‚Äê
         coder frame dropping is enabled with the [1m--framedrop [22moptions.  ([1mdecoder-frame-drop-count [22mproperty.)

       ‚Ä¢ Cache  state,  e.g. [1mCache:  2s/134KB[22m. Visible if the stream cache is enabled.  The first value shows the amount
         of video buffered in the demuxer in seconds, the second value shows the estimated size of the  buffered  amount
         in kilobytes.  ([1mdemuxer-cache-duration [22mand [1mdemuxer-cache-state [22mproperties.)

[1mLOW LATENCY PLAYBACK[0m
       mpv  is optimized for normal video playback, meaning it actually tries to buffer as much data as it seems to make
       sense. This will increase latency. Reducing latency is possible only by specifically disabling features which in‚Äê
       crease latency.

       The builtin [1mlow-latency [22mprofile tries to apply some of the options which can reduce latency. You can use   [1m--pro‚Äê[0m
       [1mfile=low-latency [22mto apply all of them. You can list the contents with [1m--show-profile=low-latency [22m(some of the op‚Äê
       tions are quite obscure, and may change every mpv release).

       Be aware that some of the options can reduce playback quality.

       Most latency is actually caused by inconvenient timing behavior. You can disable this with [1m--untimed[22m, but it will
       likely break, unless the stream has no audio, and the input feeds data to the player at a constant rate.

       Another  common  problem  is  with  MJPEG  streams. These do not signal the correct framerate. Using [1m--untimed [22mor
       [1m--no-correct-pts --container-fps-override=60 [22mmight help.

       For livestreams, data can build up due to pausing the stream, due to slightly lower playback rate, or "buffering"
       pauses. If the demuxer cache is enabled, these can be skipped manually. The experimental [1mdrop-buffers [22mcommand can
       be used to discard any buffered data, though it's very disruptive.

       In some cases, manually tuning TCP buffer sizes and such can help to reduce latency.

       Additional options that can be tried:

       ‚Ä¢ [1m--opengl-glfinish=yes[22m, can reduce buffering in the graphics driver

       ‚Ä¢ [1m--opengl-swapinterval=0[22m, same

       ‚Ä¢ [1m--vo=xv[22m, same

       ‚Ä¢ without audio [1m--framedrop=no --speed=1.01 [22mmay help for live sources (results can be mixed)

[1mRESUMING PLAYBACK[0m
       mpv is capable of storing the playback position of the currently playing file and resume from there the next time
       that file is played. This is  done  with  the  commands  [1mquit-watch-later  [22m(bound  to  Shift+Q  by  default)  and
       [1mwrite-watch-later-config[22m, and with the [1m--save-position-on-quit [22moption.

       The  difference between always quitting with a key bound to [1mquit-watch-later [22mand using [1m--save-position-on-quit [22mis
       that the latter will save the playback position even when mpv is closed with a method other  than  a  keybinding,
       for  example  if  you  shutdown  your  system  without closing mpv beforehand, unless of course mpv is terminated
       abruptly and doesn't have the time to save (e.g. with the KILL Unix signal).

       mpv also stores options other than the playback position when they have been modified after playback  began,  for
       example  the  volume  and  selected  audio/subtitles, and restores their values the next time the file is played.
       Which options are saved can be configured with the [1m--watch-later-options [22moption.

       When playing multiple playlist entries, mpv checks if one them has a resume config file  associated,  and  if  it
       finds  one  it  restarts playback from it. For example, if you use [1mquit-watch-later [22mon the 5th episode of a show,
       and later play all the episodes, mpv will automatically resume playback from episode 5.

       More options to configure this functionality are listed in [4mWatch[24m [4mLater[24m.

[1mPROTOCOLS[0m
       [1mhttp://...[22m, [1mhttps://[22m, ...
          Many network protocols are supported, but the protocol prefix must always be specified. mpv will never attempt
          to guess whether a filename is actually a network address. A protocol prefix is always required.

          Note that not all prefixes are documented here. Undocumented prefixes are either aliases to documented  proto‚Äê
          cols, or are just redirections to protocols implemented and documented in FFmpeg.

          [1mdata:  [22mis supported in FFmpeg (not in Libav), but needs to be in the format [1mdata://[22m. This is done to avoid am‚Äê
          biguity with filenames. You can also prefix it with [1mlavf:// [22mor [1mffmpeg://[22m.

       [1mytdl://...[0m
          By default, the youtube-dl hook script only looks at http(s) URLs. Prefixing an URL with [1mytdl:// [22mforces it  to
          be always processed by the script. This can also be used to invoke special youtube-dl functionality like play‚Äê
          ing a video by ID or invoking search.

          Keep  in  mind that you can't pass youtube-dl command line options by this, and you have to use [1m--ytdl-raw-op‚Äê[0m
          [1mtions [22minstead.

       [1m-[0m
          Play data from stdin.

       [1msmb://PATH[0m
          Play a path from  Samba share. (Requires FFmpeg support.)

       [1mbd://[title][/device] --bluray-device=PATH[0m
          Play a Blu-ray disc. Since libbluray 1.0.1, you can read from ISO files by passing them to [1m--bluray-device[22m.

          [1mtitle [22mcan be: [1mlongest [22mor [1mfirst [22m(selects the default playlist); [1mmpls/<number> [22m(selects <number>.mpls playlist);
          [1m<number> [22m(select playlist with the same index). mpv will list the available playlists on loading.

          [1mbluray:// [22mis an alias.

       [1mdvd://[title][/device] --dvd-device=PATH[0m
          Play a DVD. DVD menus are not supported. If no title is given, the longest  title  is  auto-selected.  Without
          [1m--dvd-device[22m, it will probably try to open an actual optical drive, if available and implemented for the OS.

          [1mdvdnav:// [22mis an old alias for [1mdvd:// [22mand does exactly the same thing.

       [1mdvb://[cardnumber@]channel --dvbin-...[0m
          Digital TV via DVB. (Linux only.)

       [1mmf://[filemask|@listfile] --mf-...[0m
          Play a series of images as video.

       [1mcdda://[device] --cdrom-device=PATH --cdda-...[0m
          Play CD.

       [1mlavf://...[0m
          Access  any  FFmpeg/Libav  libavformat  protocol.  Basically,  this passed the string after the [1m// [22mdirectly to
          libavformat.

       [1mav://type:options[0m
          This is intended for using libavdevice inputs. [1mtype [22mis the  libavdevice  demuxer  name,  and  [1moptions  [22mis  the
          (pseudo-)filename passed to the demuxer.

              Example

                 mpv av://v4l2:/dev/video0 --profile=low-latency --untimed

              This plays video from the first v4l input with nearly the lowest latency possible. It's a good replacement
              for the removed [1mtv:// [22minput.  Using [1m--untimed [22mis a hack to output a captured frame immediately, instead of
              respecting the input framerate. (There may be better ways to handle this in the future.)

          [1mavdevice:// [22mis an alias.

       [1mfile://PATH[0m
          A  local  path  as  URL.  Might be useful in some special use-cases. Note that [1mPATH [22mitself should start with a
          third [1m/ [22mto make the path an absolute path.

       [1mappending://PATH[0m
          Play a local file, but assume it's being appended to. This is useful for example for files that are  currently
          being downloaded to disk. This will block playback, and stop playback only if no new data was appended after a
          timeout of about 2 seconds.

          Using  this  is  still  a bit of a bad idea, because there is no way to detect if a file is actually being ap‚Äê
          pended, or if it's still written. If you're trying to play the  output of some program, consider using a  pipe
          ([1msomething  | mpv -[22m). If it really has to be a file on disk, use tail to make it wait forever, e.g. [1mtail -f -c[0m
          [1m+0 file.mkv | mpv -[22m.

       [1mfd://123[0m
          Read data from the given file descriptor (for example 123). This is similar to piping data to stdin via [1m-[22m, but
          can use an arbitrary file descriptor.  mpv may modify some file descriptor properties when  the  stream  layer
          "opens" it.

       [1mfdclose://123[0m
          Like  [1mfd://[22m,  but the file descriptor is closed after use. When using this you need to ensure that the same fd
          URL will only be used once.

       [1medl://[edl specification as in edl-mpv.rst][0m
          Stitch together parts of multiple files and play them.

       [1mslice://start[-end]@URL[0m
          Read a slice of a stream.

          [1mstart [22mand [1mend [22mrepresent a byte range and accept suffixes such as [1mKiB [22mand [1mMiB[22m. [1mend [22mis optional.

          if [1mend [22mstarts with [1m+[22m, it is considered as offset from [1mstart[22m.

          Only works with seekable streams.

          Examples:

              mpv slice://1g-2g@cap.ts

              This starts reading from cap.ts after seeking 1 GiB, then
              reads until reaching 2 GiB or end of file.

              mpv slice://1g-+2g@cap.ts

              This starts reading from cap.ts after seeking 1 GiB, then
              reads until reaching 3 GiB or end of file.

              mpv slice://100m@appending://cap.ts

              This starts reading from cap.ts after seeking 100MiB, then
              reads until end of file.

       [1mnull://[0m
          Simulate an empty file. If opened for writing, it will discard all data.  The [1mnull [22mdemuxer  will  specifically
          pass autoprobing if this protocol is used (while it's not automatically invoked for empty files).

       [1mmemory://data[0m
          Use the [1mdata [22mpart as source data.

       [1mhex://data[0m
          Like [1mmemory://[22m, but the string is interpreted as hexdump.

[1mPSEUDO GUI MODE[0m
       mpv  has  no official GUI, other than the OSC ([4mON[24m [4mSCREEN[24m [4mCONTROLLER[24m), which is not a full GUI and is not meant to
       be. However, to compensate for the lack of expected GUI behavior, mpv will in some cases start with some settings
       changed to behave slightly more like a GUI mode.

       Currently this happens only in the following cases:

       ‚Ä¢ if started using the [1mmpv.desktop [22mfile on Linux (e.g. started from menus or file associations provided by  desk‚Äê
         top environments)

       ‚Ä¢ if  started  from  explorer.exe  on  Windows  (technically,  if  it was started on Windows, and all of the std‚Äê
         out/stderr/stdin handles are unset)

       ‚Ä¢ started out of the bundle on macOS

       ‚Ä¢ if you manually use [1m--player-operation-mode=pseudo-gui [22mon the command line

       This mode applies options from the builtin profile [1mbuiltin-pseudo-gui[22m, but only if these haven't been set in  the
       user's config file or on the command line, which is the main difference to using [1m--profile=builtin-pseudo-gui[22m.

       The profile is currently defined as follows:

          [builtin-pseudo-gui]
          terminal=no
          force-window=yes
          idle=once
          screenshot-directory=~~desktop/

       The  [1mpseudo-gui  [22mprofile exists for compatibility. The options in the [1mpseudo-gui [22mprofile are applied uncondition‚Äê
       ally. In addition, the profile makes sure to enable the pseudo-GUI mode, so that [1m--profile=pseudo-gui [22mworks  like
       in older mpv releases:

          [pseudo-gui]
          player-operation-mode=pseudo-gui

       [1mWARNING:[0m
          Currently, you can extend the [1mpseudo-gui [22mprofile in the config file the normal way. This is deprecated. In fu‚Äê
          ture  mpv  releases, the behavior might change, and not apply your additional settings, and/or use a different
          profile name.

[1mLINUX DESKTOP ISSUES[0m
       This subsection describes common problems on the Linux desktop. None of these problems exist on systems like Win‚Äê
       dows or macOS.

   [1mDisabling Screensaver[0m
       By default, mpv tries to disable the OS screensaver during playback (only if a VO using the OS  GUI  API  is  ac‚Äê
       tive). [1m--stop-screensaver=no [22mdisables this.

       A  common problem is that Linux desktop environments ignore the standard screensaver APIs on which mpv relies. In
       particular, mpv uses the Screen Saver extension (XSS) on X11, and the idle-inhibit protocol on Wayland.

       Before mpv 0.33.0, the X11 backend ran [1mxdg-screensaver reset [22min 10 second intervals when not paused in  order  to
       support  screensaver inhibition in these environments. This functionality was removed in 0.33.0, but it is possi‚Äê
       ble to call the [1mxdg-screensaver [22mcommand line program from a user script instead.

[1mOPTIONS[0m
   [1mTrack Selection[0m
       [1m--alang=<languagecode[,languagecode,...]>[0m
              Specify a priority list of audio languages to use, as IETF language tags.  Equivalent ISO 639-1 two-letter
              and ISO 639-2 three-letter codes are treated the same.  The first tag in the list whose language matches a
              track in the file will be used.  A track that matches more subtags will be preferred over one that matches
              fewer, with preference given to earlier subtags over later ones. See also [1m--aid[22m.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Examples

                 ‚Ä¢ [1mmpv dvd://1 --alang=hu,en [22mchooses the Hungarian language track on a DVD and falls back on English  if
                   Hungarian is not available.

                 ‚Ä¢ [1mmpv --alang=jpn example.mkv [22mplays a Matroska file with Japanese audio.

       [1m--slang=<languagecode[,languagecode,...]>[0m
              Equivalent to [1m--alang[22m, for subtitle tracks.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Examples

                 ‚Ä¢ [1mmpv  dvd://1 --slang=hu,en [22mchooses the Hungarian subtitle track on a DVD and falls back on English if
                   Hungarian is not available.

                 ‚Ä¢ [1mmpv --slang=jpn example.mkv [22mplays a Matroska file with Japanese subtitles.

                 ‚Ä¢ [1mmpv --slang=pt-BR example.mkv [22mplays a Matroska file with Brazilian Portuguese subtitles if available,
                   and otherwise any Portuguese subtitles.

       [1m--vlang=<...>[0m
              Equivalent to [1m--alang [22mand [1m--slang[22m, for video tracks.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

       [1m--aid=<ID|auto|no>[0m
              Select audio track. [1mauto [22mselects the default, [1mno [22mdisables audio.  See also [1m--alang[22m.  mpv  normally  prints
              available audio tracks on the terminal when starting playback of a file.

              [1m--audio [22mis an alias for [1m--aid[22m.

              [1m--aid=no  [22mor [1m--audio=no [22mor [1m--no-audio [22mdisables audio playback.  (The latter variant does not work with the
              client API.)

              [1mNOTE:[0m
                 The track selection options ([1m--aid [22mbut also [1m--sid [22mand the others) sometimes expose  behavior  that  may
                 appear strange. Also, the behavior tends to change around with each mpv release.

                 The track selection properties will return the option value outside of playback (as expected), but dur‚Äê
                 ing playback, the affective track selection is returned. For example, with [1m--aid=auto[22m, the [1maid [22mproperty
                 will  suddenly  return  [1m2 [22mafter playback initialization (assuming the file has at least 2 audio tracks,
                 and the second is the default).

                 At mpv 0.32.0 (and some releases before), if you passed a track value for which a  corresponding  track
                 didn't  exist (e.g. [1m--aid=2 [22mand there was only 1 audio track), the [1maid [22mproperty returned [1mno[22m. However if
                 another audio track was added during playback, and you tried to set the [1maid [22mproperty to [1m2[22m, nothing hap‚Äê
                 pened, because the [1maid [22moption still had the value [1m2[22m, and writing the same value has no effect.

                 With mpv 0.33.0, the behavior was changed. Now track selection options are reset to  [1mauto  [22mat  playback
                 initialization,  if the option had tries to select a track that does not exist. The same is done if the
                 track exists, but fails to initialize. The consequence is that unlike before  mpv  0.33.0,  the  user's
                 track selection parameters are clobbered in certain situations.

                 Also  since mpv 0.33.0, trying to select a track by number will strictly select this track. Before this
                 change, trying to select a track which did not exist would fall back  to  track  default  selection  at
                 playback initialization. The new behavior is more consistent.

                 Setting a track selection property at runtime, and then playing a new file might reset the track selec‚Äê
                 tion to defaults, if the fingerprint of the track list of the new file is different.

                 Be  aware  of  tricky combinations of all of all of the above: for example, [1mmpv --aid=2 file_with_2_au‚Äê[0m
                 [1mdio_tracks.mkv file_with_1_audio_track.mkv [22mwould first play the correct  track,  and  the  second  file
                 without  audio.  If you then go back the first file, its first audio track will be played, and the sec‚Äê
                 ond file is played with audio. If you do the same thing again but instead of using [1m--aid=2 [22myou run  [1mset[0m
                 [1maid  2  [22mwhile the file is playing, then changing to the second file will play its audio track.  This is
                 because runtime selection enables the fingerprint heuristic.

                 Most likely this is not the end.

       [1m--sid=<ID|auto|no>[0m
              Display the subtitle stream specified by [1m<ID>[22m. [1mauto [22mselects the default, [1mno [22mdisables subtitles.

              [1m--sub [22mis an alias for [1m--sid[22m.

              [1m--sid=no [22mor [1m--sub=no [22mor [1m--no-sub [22mdisables subtitle decoding.  (The latter variant does not work  with  the
              client API.)

       [1m--vid=<ID|auto|no>[0m
              Select video channel. [1mauto [22mselects the default, [1mno [22mdisables video.

              [1m--video [22mis an alias for [1m--vid[22m.

              [1m--vid=no  [22mor [1m--video=no [22mor [1m--no-video [22mdisables video playback.  (The latter variant does not work with the
              client API.)

              If video is disabled, mpv will try to download the audio only if media is streamed  with  youtube-dl,  be‚Äê
              cause it saves bandwidth. This is done by setting the ytdl_format to "bestaudio/best" in the ytdl_hook.lua
              script.

       [1m--edition=<ID|auto>[0m
              (Matroska  files  only) Specify the edition (set of chapters) to use, where 0 is the first. If set to [1mauto[0m
              (the default), mpv will choose the first edition declared as a default, or if there  is  no  default,  the
              first edition defined.

       [1m--track-auto-selection=<yes|no>[0m
              Enable  the default track auto-selection (default: yes). Enabling this will make the player select streams
              according to [1m--aid[22m, [1m--alang[22m, and others. If it is disabled, no  tracks  are  selected.  In  addition,  the
              player  will  not  exit if no tracks are selected, and wait instead (this wait mode is similar to pausing,
              but the pause option is not set).

              This is useful with [1m--lavfi-complex[22m: you can start playback in this mode, and then set  select  tracks  at
              runtime  by setting the filter graph.  Note that if [1m--lavfi-complex [22mis set before playback is started, the
              referenced tracks are always selected.

       [1m--subs-with-matching-audio=<yes|no>[0m
              When autoselecting a subtitle track, select a full/non-forced  one  even  if  the  selected  audio  stream
              matches  your preferred subtitle language (default: yes). If this option is set to [1mno[22m, a non-forced subti‚Äê
              tle track that matches the audio language will never be autoselected by mpv regardless  of  the  value  of
              [1m--slang [22mor [1m--subs-fallback[22m.

       [1m--subs-match-os-language=<yes|no>[0m
              When  autoselecting  a  subtitle track, select the track that matches the language of your OS if the audio
              stream is in a different language if suitable (default track or a forced  track  under  the  right  condi‚Äê
              tions). Note that if [1m-slang [22mis set, this will be completely ignored (default: yes).

       [1m--subs-fallback=<yes|default|no>[0m
              When autoselecting a subtitle track, if no tracks match your preferred languages, select a full track even
              if  it  doesn't  match your preferred subtitle language (default: default).  Setting this to [4mdefault[24m means
              that only streams flagged as [4mdefault[24m will be selected.

       [1m--subs-fallback-forced=<yes|no|always>[0m
              When autoselecting a subtitle track, the default value of [4myes[24m will prefer using a forced subtitle track if
              the subtitle language matches the audio language and matches your list of preferred languages. The special
              value [4malways[24m will only select forced subtitle tracks and never fallback on a non-forced track. Conversely,
              [4mno[24m will never select a forced subtitle track.

   [1mPlayback Control[0m
       [1m--start=<relative time>[0m
              Seek to given time position.

              The general format for times is [1m[+|-][[hh:]mm:]ss[.ms][22m. If the time is prefixed with [1m-[22m, the time  is  con‚Äê
              sidered  relative  from  the end of the file (as signaled by the demuxer/the file). A [1m+ [22mis usually ignored
              (but see below).

              The following alternative time specifications are recognized:

              [1mpp% [22mseeks to percent position pp (0-100).

              [1m#c [22mseeks to chapter number c. (Chapters start from 1.)

              [1mnone [22mresets any previously set option (useful for libmpv).

              If [1m--rebase-start-time=no [22mis given, then prefixing times with [1m+ [22mmakes the time relative to  the  start  of
              the  file.  A  timestamp without prefix is considered an absolute time, i.e. should seek to a frame with a
              timestamp as the file contains it. As a bug, but also a hidden feature, putting 1 or  more  spaces  before
              the  [1m+ [22mor [1m- [22malways interprets the time as absolute, which can be used to seek to negative timestamps (use‚Äê
              ful for debugging at most).

                 Examples

                 [1m--start=+56, --start=00:56[0m
                        Seeks to the start time + 56 seconds.

                 [1m--start=-56, --start=-00:56[0m
                        Seeks to the end time - 56 seconds.

                 [1m--start=01:10:00[0m
                        Seeks to 1 hour 10 min.

                 [1m--start=50%[0m
                        Seeks to the middle of the file.

                 [1m--start=30 --end=40[0m
                        Seeks to 30 seconds, plays 10 seconds, and exits.

                 [1m--start=-3:20 --length=10[0m
                        Seeks to 3 minutes and 20 seconds before the end of the file, plays 10 seconds, and exits.

                 [1m--start='#2' --end='#4'[0m
                        Plays chapters 2 and 3, and exits.

       [1m--end=<relative time>[0m
              Stop at given time. Use [1m--length [22mif the time should be relative to [1m--start[22m. See [1m--start [22mfor  valid  option
              values and examples.

       [1m--length=<relative time>[0m
              Stop after a given time relative to the start time.  See [1m--start [22mfor valid option values and examples.

              If both [1m--end [22mand [1m--length [22mare provided, playback will stop when it reaches either of the two endpoints.

              Obscurity  note:  this does not work correctly if [1m--rebase-start-time=no[22m, and the specified time is not an
              "absolute" time, as defined in the [1m--start [22moption description.

       [1m--rebase-start-time=<yes|no>[0m
              Whether to move the file start time to [1m00:00:00 [22m(default: yes). This is less awkward for files which start
              at a random timestamp, such as transport streams. On the other hand, if there are  timestamp  resets,  the
              resulting  behavior  can  be rather weird. For this reason, and in case you are actually interested in the
              real timestamps, this behavior can be disabled with [1mno[22m.

       [1m--speed=<0.01-100>[0m
              Slow down or speed up playback by the factor given as parameter.

              If [1m--audio-pitch-correction [22m(on by default) is used, playing with a speed higher than normal automatically
              inserts the [1mscaletempo2 [22maudio filter.

       [1m--pause[0m
              Start the player in paused state.

       [1m--shuffle[0m
              Play files in random order.

       [1m--playlist-start=<auto|index>[0m
              Set which file on the internal playlist to start playback with. The index is an integer,  with  0  meaning
              the  first  file. The value [1mauto [22mmeans that the selection of the entry to play is left to the playback re‚Äê
              sume mechanism (default). If an entry with the given index doesn't exist, the behavior is unspecified  and
              might  change  in  future mpv versions. The same applies if the playlist contains further playlists (don't
              expect any reasonable behavior). Passing a playlist file to mpv should work with this option, though. E.g.
              [1mmpv playlist.m3u --playlist-start=123 [22mwill work as expected, as long as [1mplaylist.m3u [22mdoes not link to fur‚Äê
              ther playlists.

              The value [1mno [22mis a deprecated alias for [1mauto[22m.

       [1m--playlist=<filename>[0m
              Play files according to a playlist file. Supports some common formats. If no format is detected,  it  will
              be  treated  as list of files, separated by newline characters. You may need this option to load plaintext
              files as a playlist. Note that XML playlist formats are not supported.

              This option forces [1m--demuxer=playlist [22mto interpret the playlist file.  Some playlist formats, notably  CUE
              and  optical  disc  formats, need to use different demuxers and will not work with this option. They still
              can be played directly, without using this option.

              You can play playlists directly, without this option. Before mpv version 0.31.0, this option disabled  any
              security mechanisms that might be in place, but since 0.31.0 it uses the same security mechanisms as play‚Äê
              ing  a  playlist  file  directly. If you trust the playlist file, you can disable any security checks with
              [1m--load-unsafe-playlists[22m. Because playlists can load other playlist entries, consider applying this  option
              only to the playlist itself and not its entries, using something along these lines:
                 [1mmpv --{ --playlist=filename --load-unsafe-playlists --}[0m

              [1mWARNING:[0m
                 The  way  older  versions  of mpv played playlist files via [1m--playlist [22mwas not safe against maliciously
                 constructed files. Such files may trigger harmful actions. This has been the case for all  versions  of
                 mpv prior to 0.31.0, and all MPlayer versions, but unfortunately this fact was not well documented ear‚Äê
                 lier,  and  some people have even misguidedly recommended the use of [1m--playlist [22mwith untrusted sources.
                 Do NOT use [1m--playlist [22mwith random internet sources or files you do not trust if you are not  sure  your
                 mpv is at least 0.31.0.

                 In  particular,  playlists  can contain entries using protocols other than local files, such as special
                 protocols like [1mavdevice:// [22m(which are inherently unsafe).

       [1m--chapter-merge-threshold=<number>[0m
              Threshold for merging almost consecutive ordered chapter parts in milliseconds (default:  100).  Some  Ma‚Äê
              troska files with ordered chapters have inaccurate chapter end timestamps, causing a small gap between the
              end  of one chapter and the start of the next one when they should match.  If the end of one playback part
              is less than the given threshold away from the start of the next one then keep playing video normally over
              the chapter change instead of doing a seek.

       [1m--chapter-seek-threshold=<seconds>[0m
              Distance in seconds from the beginning of a chapter within which a backward chapter seek will  go  to  the
              previous  chapter (default: 5.0). Past this threshold, a backward chapter seek will go to the beginning of
              the current chapter instead. A negative value means always go back to the previous chapter.

       [1m--hr-seek=<no|absolute|yes|default>[0m
              Select when to use precise seeks that are not limited to keyframes. Such seeks require decoding video from
              the previous keyframe up to the target position and so can take some time depending  on  decoding  perfor‚Äê
              mance.  For  some video formats, precise seeks are disabled. This option selects the default choice to use
              for seeks; it is possible to explicitly override that default in the definition of key bindings and in in‚Äê
              put commands.

              [1mno     [22mNever use precise seeks.

              [1mabsolute[0m
                     Use precise seeks if the seek is to an absolute position in the file, such as a chapter  seek,  but
                     not for relative seeks like the default behavior of arrow keys.

              [1mdefault[0m
                     Like  [1mabsolute[22m,  but enable hr-seeks in audio-only cases. The exact behavior is implementation spe‚Äê
                     cific and may change with new releases (default).

              [1myes    [22mUse precise seeks whenever possible.

              [1malways [22mSame as [1myes [22m(for compatibility).

       [1m--hr-seek-demuxer-offset=<seconds>[0m
              This option exists to work around failures to do precise seeks (as in [1m--hr-seek[22m) caused by bugs or limita‚Äê
              tions in the demuxers for some file formats. Some demuxers fail to seek to a  keyframe  before  the  given
              target  position,  going to a later position instead. The value of this option is subtracted from the time
              stamp given to the demuxer. Thus, if you set this option to 1.5 and try to do a precise seek  to  60  sec‚Äê
              onds,  the  demuxer  is  told to seek to time 58.5, which hopefully reduces the chance that it erroneously
              goes to some time later than 60 seconds. The downside of setting this option is that precise seeks  become
              slower, as video between the earlier demuxer position and the real target may be unnecessarily decoded.

       [1m--hr-seek-framedrop=<yes|no>[0m
              Allow the video decoder to drop frames during seek, if these frames are before the seek target. If this is
              enabled,  precise  seeking can be faster, but if you're using video filters which modify timestamps or add
              new frames, it can lead to precise seeking skipping the target frame. This e.g. can break frame  backstep‚Äê
              ping when deinterlacing is enabled.

              Default: [1myes[0m

       [1m--index=<mode>[0m
              Controls  how to seek in files. Note that if the index is missing from a file, it will be built on the fly
              by default, so you don't need to change this. But it might help with some broken files.

              [1mdefault[0m
                     use an index if the file has one, or build it if missing

              [1mrecreate[0m
                     don't read or use the file's index

              [1mNOTE:[0m
                 This option only works if the underlying media supports seeking (i.e. not with stdin, pipe, etc).

       [1m--load-unsafe-playlists[0m
              Load URLs from playlists which are considered unsafe (default: no). This includes  special  protocols  and
              anything that doesn't refer to normal files.  Local files and HTTP links on the other hand are always con‚Äê
              sidered safe.

              In addition, if a playlist is loaded while this is set, the added playlist entries are not marked as orig‚Äê
              inating  from network or potentially unsafe location. (Instead, the behavior is as if the playlist entries
              were provided directly to mpv command line or [1mloadfile [22mcommand.)

       [1m--access-references=<yes|no>[0m
              Follow any references in the file being opened (default: yes). Disabling this is helpful if  the  file  is
              automatically  scanned  (e.g.  thumbnail  generation).  If  the thumbnail scanner for example encounters a
              playlist file, which contains network URLs, and the scanner should not open these,  enabling  this  option
              will prevent it. This option also disables ordered chapters, mov reference files, opening of archives, and
              a number of other features.

              On  older  FFmpeg  versions, this will not work in some cases. Some FFmpeg demuxers might not respect this
              option.

              This option does not prevent opening of paired subtitle files and such. Use [1m--autoload-files=no [22mto prevent
              this.

              This option does not always work if you open non-files (for example using  [1mdvd://directory  [22mwould  open  a
              whole  bunch of files in the given directory). Prefixing the filename with [1m./ [22mif it doesn't start with a [1m/[0m
              will avoid this.

       [1m--loop-playlist=<N|inf|force|no>, --loop-playlist[0m
              Loops playback [1mN [22mtimes. A value of [1m1 [22mplays it one time (default), [1m2 [22mtwo times, etc. [1minf [22mmeans forever.  [1mno[0m
              is the same as [1m1 [22mand disables looping. If several files are specified on command line, the entire playlist
              is looped. [1m--loop-playlist [22mis the same as [1m--loop-playlist=inf[22m.

              The  [1mforce  [22mmode  is  like [1minf[22m, but does not skip playlist entries which have been marked as failing. This
              means the player might waste CPU time trying to loop a file that doesn't exist. But it might be useful for
              playing webradios under very bad network conditions.

       [1m--loop-file=<N|inf|no>, --loop=<N|inf|no>[0m
              Loop a single file N times. [1minf [22mmeans forever, [1mno [22mmeans normal playback.  For  compatibility,  [1m--loop-file[0m
              and [1m--loop-file=yes [22mare also accepted, and are the same as [1m--loop-file=inf[22m.

              The  difference  to  [1m--loop-playlist  [22mis that this doesn't loop the playlist, just the file itself. If the
              playlist contains only a single file, the difference between the two option is that this option performs a
              seek on loop, instead of reloading the file.

              [1mNOTE:[0m
                 [1m--loop-file [22mcounts the number of times it causes the player to seek to the beginning of the  file,  not
                 the  number of full playthroughs. This means [1m--loop-file=1 [22mwill end up playing the file twice. Contrast
                 with [1m--loop-playlist[22m, which counts the number of full playthroughs.

              [1m--loop [22mis an alias for this option.

       [1m--ab-loop-a=<time>, --ab-loop-b=<time>[0m
              Set loop points. If playback passes the [1mb [22mtimestamp, it will seek to the [1ma [22mtimestamp. Seeking past  the  [1mb[0m
              point doesn't loop (this is intentional).

              If  [1ma [22mis after [1mb[22m, the behavior is as if the points were given in the right order, and the player will seek
              to [1mb [22mafter crossing through [1ma[22m. This is different from old behavior, where looping was disabled (and  as  a
              bug, looped back to [1ma [22mon the end of the file).

              If  either  options  are  set  to [1mno [22m(or unset), looping is disabled. This is different from old behavior,
              where an unset [1ma [22mimplied the start of the file, and an unset [1mb [22mthe end of the file.

              The loop-points can be adjusted at runtime with the corresponding properties. See also [1mab-loop [22mcommand.

       [1m--ab-loop-count=<N|inf>[0m
              Run A-B loops only N times, then ignore the A-B loop points (default: inf).  Every finished loop iteration
              will decrement this option by 1 (unless it is set to [1minf [22mor 0). [1minf [22mmeans that looping goes on forever. If
              this option is set to 0, A-B looping is ignored, and even the [1mab-loop  [22mcommand  will  not  enable  looping
              again  (the command will show [1m(disabled) [22mon the OSD message if both loop points are set, but [1mab-loop-count[0m
              is 0).

       [1m--ordered-chapters, --no-ordered-chapters[0m
              Enabled by default.  Disable support for Matroska ordered chapters. mpv will not load or search for  video
              segments from other files, and will also ignore any chapter order specified for the main file.

       [1m--ordered-chapters-files=<playlist-file>[0m
              Loads the given file as playlist, and tries to use the files contained in it as reference files when open‚Äê
              ing a Matroska file that uses ordered chapters. This overrides the normal mechanism for loading referenced
              files by scanning the same directory the main file is located in.

              Useful  for  loading  ordered chapter files that are not located on the local filesystem, or if the refer‚Äê
              enced files are in different directories.

              Note: a playlist can be as simple as a text file containing filenames separated by newlines.

       [1m--chapters-file=<filename>[0m
              Load chapters from this file, instead of using the chapter metadata found in the main file.

              This accepts a media file (like mkv) or even a pseudo-format like ffmetadata and uses its chapters to  re‚Äê
              place the current file's chapters. This doesn't work with OGM or XML chapters directly.

       [1m--sstep=<sec>[0m
              Skip <sec> seconds after every frame.

              [1mNOTE:[0m
                 Without [1m--hr-seek[22m, skipping will snap to keyframes.

       [1m--stop-playback-on-init-failure=<yes|no>[0m
              Stop playback if either audio or video fails to initialize (default: no).  With [1mno[22m, playback will continue
              in  video-only  or  audio-only  mode  if  one of them fails. This doesn't affect playback of audio-only or
              video-only files.

       [1m--play-direction=<forward|+|backward|->[0m
              Control the playback direction (default: forward). Setting [1mbackward [22mwill attempt to play the file  in  re‚Äê
              verse  direction,  with  decreasing  playback time. If this is set on playback starts, playback will start
              from the end of the file. If this is changed at during playback, a hr-seek will be issued  to  change  the
              direction.

              [1m+ [22mand [1m- [22mare aliases for [1mforward [22mand [1mbackward[22m.

              The rest of this option description pertains to the [1mbackward [22mmode.

              [1mNOTE:[0m
                 Backward  playback  is extremely fragile. It may not always work, is much slower than forward playback,
                 and breaks certain other features. How well it works depends mainly on the file  being  played.  Gener‚Äê
                 ally, it will show good results (or results at all) only if the stars align.

              mpv,  as  well as most media formats, were designed for forward playback only. Backward playback is bolted
              on top of mpv, and tries to make a medium effort  to  make  backward  playback  work.  Depending  on  your
              use-case, another tool may work much better.

              Backward playback is not exactly a 1st class feature. Implementation tradeoffs were made, that are bad for
              backward  playback, but in turn do not cause disadvantages for normal playback. Various possible optimiza‚Äê
              tions are not implemented in order to keep the  complexity  down.  Normally,  a  media  player  is  highly
              pipelined (future data is prepared in separate threads, so it is available in realtime when the next stage
              needs it), but backward playback will essentially stall the pipeline at various random points.

              For  example,  for intra-only codecs are trivially backward playable, and tools built around them may make
              efficient use of them (consider video editors or camera viewers). mpv won't be efficient in this case, be‚Äê
              cause it uses its generic backward playback algorithm, that on top of it is not very optimized.

              If you just want to quickly go backward through the video and just  show  "keyframes",  just  use  forward
              playback,  and  hold  down the left cursor key (which on CLI with default config sends many small relative
              seek commands).

              The implementation consists of mostly 3 parts:

              ‚Ä¢ Backward demuxing. This relies on the demuxer cache, so the demuxer cache should (or must,  didn't  test
                it)  be enabled, and its size will affect performance. If the cache is too small or too large, quadratic
                runtime behavior may result.

              ‚Ä¢ Backward decoding. The decoder library used (libavcodec) does not support this. It is emulated by  feed‚Äê
                ing  bits  of  data in forward, putting the result in a queue, returning the queue data to the VO in re‚Äê
                verse, and then starting over at an earlier position. This can require buffering an  extreme  amount  of
                decoded data, and also completely breaks pipelining.

              ‚Ä¢ Backward  output. This is relatively simple, because the decoder returns the frames in the needed order.
                However, this may cause various problems because filters see audio and video going backward.

              Known problems:

              ‚Ä¢ It's fragile. If anything doesn't work, random non-useful behavior  may  occur.  In  simple  cases,  the
                player  will  just  play nonsense and artifacts.  In other cases, it may get stuck or heat the CPU. (Ex‚Äê
                ceeding memory usage significantly beyond the user-set limits would be a bug, though.)

              ‚Ä¢ Performance and resource usage isn't good. In part this is inherent to backward playback of normal media
                formats, and in parts due to implementation choices and tradeoffs.

              ‚Ä¢ This is extremely reliant on good demuxer behavior. Although backward demuxing requires no  special  de‚Äê
                muxer  support, it is required that the demuxer performs seeks reliably, fulfills some specific require‚Äê
                ments about packet metadata, and has deterministic behavior.

              ‚Ä¢ Starting playback exactly from the end may or may not work, depending on seeking behavior and file dura‚Äê
                tion detection.

              ‚Ä¢ Some container formats, audio, and video codecs are not supported due to their  behavior.  There  is  no
                list,  and the player usually does not detect them. Certain live streams (including TV captures) may ex‚Äê
                hibit problems in particular, as well as some lossy audio codecs. h264 intra-refresh  is  known  not  to
                work due to problems with libavcodec. WAV and some other raw audio formats tend to have problems - there
                are hacks for dealing with them, which may or may not work.

              ‚Ä¢ Backward  demuxing  of  subtitles  is not supported. Subtitle display still works for some external text
                subtitle formats. (These are fully read into memory, and only backward display is needed.)  Text  subti‚Äê
                tles that are cached in the subtitle renderer also have a chance to be displayed correctly.

              ‚Ä¢ Some  features  dealing  with playback of broken or hard to deal with files will not work fully (such as
                timestamp correction).

              ‚Ä¢ If demuxer low level seeks (i.e. seeking the actual demuxer instead of just within  the  demuxer  cache)
                are  performed by backward playback, the created seek ranges may not join, because not enough overlap is
                achieved.

              ‚Ä¢ Trying to use this with hardware video decoding will probably exhaust all your GPU memory and then crash
                a thing or two. Or it will fail because [1m--hwdec-extra-frames [22mwill certainly be set too low.

              ‚Ä¢ Stream recording is broken. [1m--stream-record [22mmay keep working if you backward play within a cached region
                only.

              ‚Ä¢ Relative seeks may behave weird. Small seeks backward (towards smaller time, i.e. [1mseek -1[22m) may  not  re‚Äê
                ally  seek properly, and audio will remain muted for a while. Using hr-seek is recommended, which should
                have none of these problems.

              ‚Ä¢ Some things are just weird. For example, while seek commands manipulate playback time  in  the  expected
                way  (provided  they  work  correctly), the framestep commands are transposed. Backstepping will perform
                very expensive work to step forward by 1 frame.

              Tuning:

              ‚Ä¢ Remove all [1m--vf[22m/[1m--af [22mfilters you have set. Disable  hardware  decoding.  Disable  functions  like  SPDIF
                passthrough.

              ‚Ä¢ Increasing  [1m--video-reversal-buffer  [22mmight help if reversal queue overflow is reported, which may happen
                in high bitrate video, or video with large GOP. Hardware decoding mostly ignores this, and you  need  to
                increase [1m--hwdec-extra-frames [22minstead (until you get playback without logged errors).

              ‚Ä¢ The demuxer cache is essential for backward demuxing. Make sure to set [1m--cache=yes[22m. The cache size might
                matter. If it's too small, a queue overflow will be logged, and backward playback cannot continue, or it
                performs too many low level seeks. If it's too large, implementation tradeoffs may cause general perfor‚Äê
                mance  issues.  Use  [1m--demuxer-max-bytes [22mto potentially increase the amount of packets the demuxer layer
                can queue for reverse demuxing (basically it's the [1m--video-reversal-buffer [22mequivalent  for  the  demuxer
                layer).

              ‚Ä¢ Setting [1m--vd-queue-enable=yes [22mcan help a lot to make playback smooth (once it works).

              ‚Ä¢ [1m--demuxer-backward-playback-step [22malso factors into how many seeks may be performed, and whether backward
                demuxing could break due to queue overflow. If it's set too high, the backstep operation needs to search
                through more packets all the time, even if the cache is large enough.

              ‚Ä¢ Setting  [1m--demuxer-cache-wait  [22mmay  be useful to cache the entire file into the demuxer cache. Set [1m--de‚Äê[0m
                [1mmuxer-max-bytes [22mto a large size to make sure it can  read  the  entire  cache;  [1m--demuxer-max-back-bytes[0m
                should also be set to a large size to prevent that tries to trim the cache.

              ‚Ä¢ If  audio artifacts are audible, even though the AO does not underrun, increasing [1m--audio-backward-over‚Äê[0m
                [1mlap [22mmight help in some cases.

       [1m--video-reversal-buffer=<bytesize>, --audio-reversal-buffer=<bytesize>[0m
              For backward decoding. Backward decoding decodes forward in steps, and then reverses the  decoder  output.
              These  options  control the approximate maximum amount of bytes that can be buffered. The main use of this
              is to avoid unbounded resource usage; during normal backward playback, it's not supposed to hit the limit,
              and if it does, it will drop frames and complain about it.

              Use this option if you get reversal queue overflow errors during backward playback. Increase the size  un‚Äê
              til the warning disappears. Usually, the video buffer will overflow first, especially if it's high resolu‚Äê
              tion video.

              This does not work correctly if video hardware decoding is used. The video frame size will not include the
              referenced GPU and driver memory. Some hardware decoders may also be limited by [1m--hwdec-extra-frames[22m.

              How  large  the  queue size needs to be depends entirely on the way the media was encoded. Audio typically
              requires a very small buffer, while video can require excessively large buffers.

              (Technically, this allows the last frame to exceed the limit.  Also,  this  does  not  account  for  other
              buffered frames, such as inside the decoder or the video output.)

              This does not affect demuxer cache behavior at all.

              See [1m--list-options [22mfor defaults and value range. [1m<bytesize> [22moptions accept suffixes such as [1mKiB [22mand [1mMiB[22m.

       [1m--video-backward-overlap=<auto|number>, --audio-backward-overlap=<auto|number>[0m
              Number  of  overlapping keyframe ranges to use for backward decoding (default: auto) ("keyframe" to be un‚Äê
              derstood as in the mpv/ffmpeg specific meaning).  Backward decoding works by  forward  decoding  in  small
              steps.  Some codecs cannot restart decoding from any packet (even if it's marked as seek point), which be‚Äê
              comes noticeable with backward decoding (in theory this is a problem with seeking too,  but  [1m--hr-seek-de‚Äê[0m
              [1mmuxer-offset [22mcan fix it for seeking).  In particular, MDCT based audio codecs are affected.

              The  solution is to feed a previous packet to the decoder each time, and then discard the output. This op‚Äê
              tion controls how many packets to feed. The [1mauto [22mchoice is currently hardcoded to 0 for video, and uses  1
              for lossy audio, 0 for lossless audio. For some specific lossy audio codecs, this is set to 2.

              [1m--video-backward-overlap  [22mcan  potentially  handle intra-refresh video, depending on the exact conditions.
              You may have to use the [1m--vd-lavc-show-all [22moption as well.

       [1m--video-backward-batch=<number>, --audio-backward-batch=<number>[0m
              Number of keyframe ranges to decode at once when backward decoding (default: 1 for video, 10  for  audio).
              Another pointless tuning parameter nobody should use. This should affect performance only. In theory, set‚Äê
              ting  a  number  higher than 1 for audio will reduce overhead due to less frequent backstep operations and
              less redundant decoding work due to fewer decoded overlap frames (see  [1m--audio-backward-overlap[22m).  On  the
              other  hand,  it  requires  a  larger reversal buffer, and could make playback less smooth due to breaking
              pipelining (e.g. by decoding a lot, and then doing nothing for a while).

              It probably never makes sense to set [1m--video-backward-batch[22m. But in theory, it could help with  intra-only
              video codecs by reducing backstep operations.

       [1m--demuxer-backward-playback-step=<seconds>[0m
              Number  of seconds the demuxer should seek back to get new packets during backward playback (default: 60).
              This is useful for tuning backward playback, see [1m--play-direction [22mfor details.

              Setting this to a very low value or 0 may make the player think seeking is broken, or may make it  perform
              multiple seeks.

              Setting this to a high value may lead to quadratic runtime behavior.

   [1mProgram Behavior[0m
       [1m--help, --h[0m
              Show short summary of options.

              You  can also pass a string to this option, which will list all top-level options which contain the string
              in the name, e.g. [1m--h=scale [22mfor all options that contain the word [1mscale[22m. The special string  [1m*  [22mlists  all
              top-level options.

       [1m-v     [22mIncrement verbosity level, one level for each [1m-v [22mfound on the command line.

       [1m--version, -V[0m
              Print version string and exit.

       [1m--no-config[0m
              Do not load default configuration or any user files. This prevents loading of both the user-level and sys‚Äê
              tem-wide  [1mmpv.conf  [22mand  [1minput.conf  [22mfiles.  Other user files are blocked as well, such as resume playback
              files and cache files.  This option only takes effect when used as a command line flag.

              [1mNOTE:[0m
                 Files explicitly requested by command line options, like [1m--include [22mor [1m--use-filedir-conf[22m, will still be
                 loaded.

              See also: [1m--config-dir[22m.

       [1m--list-options[0m
              Prints all available options.

       [1m--list-properties[0m
              Print a list of the available properties.

       [1m--list-protocols[0m
              Print a list of the supported protocols.

       [1m--log-file=<path>[0m
              Opens the given path for writing, and print log messages to it. Existing files will be truncated. The  log
              level  is  at  least [1m-v -v[22m, but can be raised via [1m--msg-level [22m(the option cannot lower it below the forced
              minimum log level).

              A special case is the macOS bundle, it will create a log file at [1m~/Library/Logs/mpv.log [22mby default.

       [1m--config-dir=<path>[0m
              Force a different configuration directory. If this is set, the given directory is used to load  configura‚Äê
              tion  files,  and all other configuration directories are ignored. This means the global mpv configuration
              directory as well as per-user  directories  are  ignored,  and  overrides  through  environment  variables
              ([1mMPV_HOME[22m) are also ignored.

              Note that the cache and state paths ([1m~~/cache[22m, [1m~~/state[22m) are not considered "configuration" and keep their
              auto-detection logic.

              Note that the [1m--no-config [22moption takes precedence over this option.

       [1m--dump-stats=<filename>[0m
              Write  certain  statistics  to the given file. The file is truncated on opening. The file will contain raw
              samples, each with a timestamp. To make this file into a readable, the script [1mTOOLS/stats-conv.py  [22mcan  be
              used (which currently displays it as a graph).

              This option is useful for debugging only.

       [1m--idle=<no|yes|once>[0m
              Makes mpv wait idly instead of quitting when there is no file to play.  Mostly useful in input mode, where
              mpv can be controlled through input commands. (Default: [1mno[22m)

              [1monce [22mwill only idle at start and let the player close once the first playlist has finished playing back.

       [1m--include=<configuration-file>[0m
              Specify configuration file to be parsed after the default ones.

       [1m--load-scripts=<yes|no>[0m
              If  set  to  [1mno[22m,  don't  auto-load  scripts  from  the [1mscripts [22mconfiguration subdirectory (usually [1m~/.con‚Äê[0m
              [1mfig/mpv/scripts/[22m).  (Default: [1myes[22m)

       [1m--script=<filename>, --scripts=file1.lua:file2.lua:...[0m
              Load a Lua script. The second option allows you to load multiple scripts by separating them with the  path
              separator ([1m: [22mon Unix, [1m; [22mon Windows).

              [1m--scripts [22mis a path list option. See [4mList[24m [4mOptions[24m for details.

       [1m--script-opts=key1=value1,key2=value2,...[0m
              Set  options for scripts. A script can query an option by key. If an option is used and what semantics the
              option value has depends entirely on the loaded scripts. Values not claimed by any scripts are ignored.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

       [1m--merge-files[0m
              Pretend that all files passed to mpv are concatenated into a single, big file. This uses timeline/EDL sup‚Äê
              port internally.

       [1m--profile=<profile1,profile2,...>[0m
              Use the given profile(s), [1m--profile=help [22mdisplays a list of the defined profiles.

       [1m--reset-on-next-file=<all|option1,option2,...>[0m
              Normally, mpv will try to keep all settings when playing the next file on the playlist, even if they  were
              changed by the user during playback. (This behavior is the opposite of MPlayer's, which tries to reset all
              settings when starting next file.)

              Default: Do not reset anything.

              This  can be changed with this option. It accepts a list of options, and mpv will reset the value of these
              options on playback start to the initial value. The initial value is either the default value, or  as  set
              by the config file or command line.

              The special name [1mall [22mresets as many options as possible.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Examples

                 ‚Ä¢ [1m--reset-on-next-file=pause [22mReset pause mode when switching to the next file.

                 ‚Ä¢ [1m--reset-on-next-file=fullscreen,speed  [22mReset  fullscreen  and  playback  speed  settings if they were
                   changed during playback.

                 ‚Ä¢ [1m--reset-on-next-file=all [22mTry to reset all settings that were changed during playback.

       [1m--show-profile=<profile>[0m
              Show the description and content of a profile. Lists all profiles if no parameter is provided.

       [1m--use-filedir-conf[0m
              Look for a file-specific configuration file in the same directory as the file that is  being  played.  See
              [4mFile-specific[24m [4mConfiguration[24m [4mFiles[24m.

              [1mWARNING:[0m
                 May be dangerous if playing from untrusted media.

       [1m--ytdl, --no-ytdl[0m
              Enable  the  youtube-dl hook-script. It will look at the input URL, and will play the video located on the
              website. This works with many streaming sites, not just the one that the script is named after.  This  re‚Äê
              quires a recent version of youtube-dl to be installed on the system. (Enabled by default.)

              If the script can't do anything with an URL, it will do nothing.

              This  accepts  a set of options, which can be passed to it with the [1m--script-opts [22moption (using [1mytdl_hook-[0m
              as prefix):

              [1mtry_ytdl_first=<yes|no>[0m
                     If 'yes' will try parsing the URL with youtube-dl first, instead of the default where it's only af‚Äê
                     ter mpv failed to open it. This mostly depends on whether most of your URLs need  youtube-dl  pars‚Äê
                     ing.

              [1mexclude=<URL1|URL2|...[0m
                     A  [1m|[22m-separated  list  of  URL  patterns  which mpv should not use with youtube-dl. The patterns are
                     matched after the [1mhttp(s):// [22mpart of the URL.

                     [1m^ [22mmatches the beginning of the URL, [1m$ [22mmatches its end, and you should use [1m% [22mbefore any of the char‚Äê
                     acters [1m^$()%|,.[]*+-? [22mto match that character.

                        Examples

                        ‚Ä¢ [1m--script-opts=ytdl_hook-exclude='^youtube%.com'  [22mwill  exclude  any  URL  that   starts   with
                          [1mhttp://youtube.com [22mor [1mhttps://youtube.com[22m.

                        ‚Ä¢ [1m--script-opts=ytdl_hook-exclude='%.mkv$|%.mp4$'  [22mwill  exclude  any URL that ends with [1m.mkv [22mor
                          [1m.mp4[22m.

                     See more lua patterns here: [4mhttps://www.lua.org/manual/5.1/manual.html#5.4.1[0m

              [1mall_formats=<yes|no>[0m
                     If 'yes' will attempt to add all formats found reported by youtube-dl (default: no). Each format is
                     added as a separate track. In addition, they are delay-loaded, and  actually  opened  only  when  a
                     track is selected (this should keep load times as low as without this option).

                     It  adds  average  bitrate  metadata, if available, which means you can use [1m--hls-bitrate [22mto decide
                     which track to select. (HLS used to be the only format whose alternative quality streams  were  ex‚Äê
                     posed in a similar way, thus the option name.)

                     Tracks  which  represent  formats that were selected by youtube-dl as default will have the default
                     flag set. This means mpv should generally still select formats chosen  with  [1m--ytdl-format  [22mby  de‚Äê
                     fault.

                     Although  this mechanism makes it possible to switch streams at runtime, it's not suitable for this
                     purpose for various technical reasons. (It's slow, which can't be really fixed.) In  general,  this
                     option is not useful, and was only added to show that it's possible.

                     There are two cases that must be considered when doing quality/bandwidth selection:

                        1. Completely separate audio and video streams (DASH-like). Each of these streams contain either
                           only  audio  or video, so you can mix and combine audio/video bandwidths without restriction.
                           This intuitively matches best with the concept of selecting quality by track  (what  [1mall_for‚Äê[0m
                           [1mmats [22mis supposed to do).

                        2. Separate  sets  of  muxed audio and video streams. Each version of the media contains both an
                           audio and video stream, and they are interleaved. In order not to waste bandwidth, you should
                           only select one of these versions (if, for example, you select an audio  stream,  then  video
                           will be downloaded, even if you selected video from a different stream).

                           mpv  will  still  represent  them as separate tracks, but will set the title of each track to
                           [1mmuxed-N[22m, where [1mN [22mis replaced with the youtube-dl format ID of the originating stream.

                     Some sites will mix 1. and 2., but we assume that they do so for compatibility reasons,  and  there
                     is no reason to use them at all.

              [1mforce_all_formats=<yes|no>[0m
                     If  set  to  'yes', and [1mall_formats [22mis also set to 'yes', this will try to represent all youtube-dl
                     reported formats as tracks, even if mpv would normally use the direct URL reported by it  (default:
                     yes).

                     It appears this normally makes a difference if youtube-dl works on a master HLS playlist.

                     If  this  is  set to 'no', this specific kind of stream is treated like [1mall_formats [22mis set to 'no',
                     and the stream selection as done by youtube-dl (via [1m--ytdl-format[22m) is used.

              [1mthumbnails=<all|best|none>[0m
                     Add thumbnails as video tracks (default: none).

                     Thumbnails get downloaded when they are added as tracks, so 'all' can have a  noticable  impact  on
                     how long it takes to open the video when there are a lot of thumbnails.

              [1muse_manifests=<yes|no>[0m
                     Make  mpv  use  the  master  manifest URL for formats like HLS and DASH, if available, allowing for
                     video/audio selection in runtime (default: no). It's disabled ("no")  by  default  for  performance
                     reasons.

              [1mytdl_path=youtube-dl[0m
                     Configure paths to youtube-dl's executable or a compatible fork's. The paths should be separated by
                     : on Unix and ; on Windows. mpv looks in order for the configured paths in PATH and in mpv's config
                     directory.   The defaults are "yt-dlp", "yt-dlp_x86" and "youtube-dl". On Windows the suffix exten‚Äê
                     sion is not necessary, but only ".exe" is acceptable.

                 Why do the option names mix [1m_ [22mand [1m-[22m?

                        I have no idea.

       [1m--ytdl-format=<ytdl|best|worst|mp4|webm|...>[0m
              Video format/quality that is directly passed to youtube-dl. The possible values are specific to  the  web‚Äê
              site  and  the  video,  for  a  given  url  the available formats can be found with the command [1myoutube-dl[0m
              [1m--list-formats URL[22m. See youtube-dl's documentation for  available  aliases.   (Default:  [1mbestvideo+bestau‚Äê[0m
              [1mdio/best[22m)

              The  [1mytdl  [22mvalue  does not pass a [1m--format [22moption to youtube-dl at all, and thus does not override its de‚Äê
              fault. Note that sometimes youtube-dl returns a format that mpv cannot use, and in these cases the mpv de‚Äê
              fault may work better.

       [1m--ytdl-raw-options=<key>=<value>[,<key>=<value>[,...]][0m
              Pass arbitrary options to youtube-dl. Parameter and argument should be passed as a key-value pair. Options
              without argument must include [1m=[22m.

              There is no sanity checking so it's  possible  to  break  things  (i.e.   passing  invalid  parameters  to
              youtube-dl).

              A  proxy  URL  can  be passed for youtube-dl to use it in parsing the website.  This is useful for geo-re‚Äê
              stricted URLs. After youtube-dl parsing, some URLs also require a proxy for playback,  so  this  can  pass
              that  proxy  information  to mpv. Take note that SOCKS proxies aren't supported and https URLs also bypass
              the proxy. This is a limitation in FFmpeg.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                 ‚Ä¢ [1m--ytdl-raw-options=username=user,password=pass[0m

                 ‚Ä¢ [1m--ytdl-raw-options=force-ipv6=[0m

                 ‚Ä¢ [1m--ytdl-raw-options=proxy=[http://127.0.0.1:3128][0m

                 ‚Ä¢ [1m--ytdl-raw-options-append=proxy=http://127.0.0.1:3128[0m

       [1m--js-memory-report=<yes|no>[0m
              Enable memory reporting for javascript scripts in the stats overlay.  This is disabled by default  because
              it  has  an overhead and increases memory usage. This option will only work if it is enabled before mpv is
              started.

       [1m--load-stats-overlay=<yes|no>[0m
              Enable the builtin script that shows useful playback information on a key binding (default: yes).  By  de‚Äê
              fault, the [1mi [22mkey is used ([1mI [22mto make the overlay permanent).

       [1m--load-osd-console=<yes|no>[0m
              Enable  the  built-in  script  that shows a console on a key binding and lets you enter commands (default:
              yes). The [1m` [22mkey is used to show the console by default, and [1mESC [22mto hide it again.

       [1m--load-auto-profiles=<yes|no|auto>[0m
              Enable the builtin script that does auto profiles (default: auto). See [4mConditional[24m [4mauto[24m [4mprofiles[24m  for  de‚Äê
              tails. [1mauto [22mwill load the script, but immediately unload it if there are no conditional profiles.

       [1m--player-operation-mode=<cplayer|pseudo-gui>[0m
              For  enabling  "pseudo  GUI mode", which means that the defaults for some options are changed. This option
              should not normally be used directly, but only by mpv internally, or mpv-provided scripts,  config  files,
              or .desktop files. See [4mPSEUDO[24m [4mGUI[24m [4mMODE[24m for details.

   [1mWatch Later[0m
       [1m--save-position-on-quit[0m
              Always  save  the current playback position on quit. When this file is played again later, the player will
              seek to the old playback position on start. This does not happen if playback of a file is stopped  in  any
              other  way  than quitting. For example, going to the next file in the playlist will not save the position,
              and start playback at beginning the next time the file is played.

              This behavior is disabled by default, but is always available when quitting the player with Shift+Q.

              See [4mRESUMING[24m [4mPLAYBACK[24m.

       [1m--watch-later-dir=<path>[0m
              The directory in which to store the "watch later" temporary files.

              [1m--watch-later-directory [22mis an alias for [1m--watch-later-dir[22m.

              If this option is unset, the files will be stored in a subdirectory named "watch_later" underneath the lo‚Äê
              cal state directory (usually [1m~/.local/state/mpv/[22m).

       [1m--no-resume-playback[0m
              Do not restore  playback  position  from  the  [1mwatch_later  [22mconfiguration  subdirectory  (usually  [1m~/.con‚Äê[0m
              [1mfig/mpv/watch_later/[22m).

       [1m--resume-playback-check-mtime[0m
              Only  restore  the  playback  position  from  the  [1mwatch_later [22mconfiguration subdirectory (usually [1m~/.con‚Äê[0m
              [1mfig/mpv/watch_later/[22m) if the file's modification time is the same as at the time of saving. This may  pre‚Äê
              vent skipping forward in files with the same name which have different content.  (Default: [1mno[22m)

       [1m--watch-later-options=option1,option2,...[0m
              The  options that are saved in "watch later" files if they have been changed since when mpv started. These
              values will be restored the next time the files are played. Note that the playback position is  saved  via
              the [1mstart [22moption.

              When  removing  options,  existing watch later data won't be modified and will still be applied fully, but
              new watch later data won't contain these options.

              See [1m--help=watch-later-options [22mfor the list of the properties that are restored by default.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Examples

                 ‚Ä¢ [1m--watch-later-options-remove=sid [22mThe subtitle track selection will not be restored.

                 ‚Ä¢ [1m--watch-later-options-remove=volume --watch-later-options-remove=mute [22mThe volume and mute state won't
                   be saved to watch later files.

                 ‚Ä¢ [1m--watch-later-options=start [22mNo option will be saved to watch later files, except the  playback  posi‚Äê
                   tion.

       [1m--write-filename-in-watch-later-config[0m
              Prepend  the  watch  later config files with the name of the file they refer to. This is simply written as
              comment on the top of the file.

              [1mWARNING:[0m
                 This option may expose privacy-sensitive information and is thus disabled by default.

       [1m--ignore-path-in-watch-later-config[0m
              Ignore path (i.e. use filename only) when using watch later feature.  (Default: disabled)

   [1mVideo[0m
       [1m--vo=<driver>[0m
              Specify the video output backend to be used. See [4mVIDEO[24m [4mOUTPUT[24m [4mDRIVERS[24m  for  details  and  descriptions  of
              available drivers.

       [1m--vd=<...>[0m
              Specify  a  priority  list  of video decoders to be used, according to their family and name. See [1m--ad [22mfor
              further details. Both of these options use the same syntax and semantics; the only difference is that they
              operate on different codec lists.

              [1mNOTE:[0m
                 See [1m--vd=help [22mfor a full list of available decoders.

       [1m--vf=<filter1[=parameter1:parameter2:...],filter2,...>[0m
              Specify a list of video filters to apply to the video stream. See [4mVIDEO[24m [4mFILTERS[24m for details  and  descrip‚Äê
              tions  of  the  available filters.  The option variants [1m--vf-add[22m, [1m--vf-pre[22m, and [1m--vf-clr [22mexist to modify a
              previously specified list, but you should not need these for typical use.

       [1m--untimed[0m
              Do not sleep when outputting video frames. Useful for benchmarks when used with [1m--no-audio.[0m

       [1m--framedrop=<mode>[0m
              Skip displaying some frames to maintain A/V sync on slow systems, or playing high framerate video on video
              outputs that have an upper framerate limit.

              The argument selects the drop methods, and can be one of the following:

              [1m<no>   [22mDisable any frame dropping. Not recommended, for testing only.

              [1m<vo>   [22mDrop late frames on video output (default). This still decodes and filters all frames, but  doesn't
                     render them on the VO. Drops are indicated in the terminal status line as [1mDropped: [22mfield.

                     In  audio sync. mode, this drops frames that are outdated at the time of display. If the decoder is
                     too slow, in theory all frames would have to be dropped (because all frames  are  too  late)  -  to
                     avoid this, frame dropping stops  if the effective framerate is below 10 FPS.

                     In  display-sync.  modes  (see [1m--video-sync[22m), this affects only how A/V drops or repeats frames. If
                     this mode is disabled, A/V desync will in theory not affect video scheduling anymore (much like the
                     [1mdisplay-resample-desync [22mmode). However, even if  disabled,  frames  will  still  be  skipped  (i.e.
                     dropped) according to the ratio between video and display frequencies.

                     This is the recommended mode, and the default.

              [1m<decoder>[0m
                     Old,  decoder-based  framedrop mode. (This is the same as [1m--framedrop=yes [22min mpv 0.5.x and before.)
                     This tells the decoder to skip frames (unless they are needed to decode future  frames).  May  help
                     with  slow  systems,  but  can  produce  unwatchable choppy output, or even freeze the display com‚Äê
                     pletely.

                     This uses a heuristic which may not make sense, and in  general cannot achieve  good  results,  be‚Äê
                     cause the decoder's frame dropping cannot be controlled in a predictable manner. Not recommended.

                     Even if you want to use this, prefer [1mdecoder+vo [22mfor better results.

                     The [1m--vd-lavc-framedrop [22moption controls what frames to drop.

              [1m<decoder+vo>[0m
                     Enable both modes. Not recommended. Better than just [1mdecoder [22mmode.

              [1mNOTE:[0m
                 [1m--vo=vdpau [22mhas its own code for the [1mvo [22mframedrop mode. Slight differences to other VOs are possible.

       [1m--video-latency-hacks=<yes|no>[0m
              Enable  some  things which tend to reduce video latency by 1 or 2 frames (default: no). Note that this op‚Äê
              tion might be removed without notice once the player's timing code does not inherently need  to  do  these
              things anymore. Using this option is known to break other options such as interpolation, so it is not rec‚Äê
              ommended to enable this.

              This does:

              ‚Ä¢ Use the demuxer reported FPS for frame dropping. This avoids the player needing to decode 1 frame in ad‚Äê
                vance,  lowering  total latency in effect. This also means that if the demuxer reported FPS is wrong, or
                the video filter chain changes FPS (e.g. deinterlacing), then it could  drop  too  many  or  not  enough
                frames.

              ‚Ä¢ Disable  waiting  for  the  first video frame. Normally the player waits for the first video frame to be
                fully rendered before starting playback properly. Some VOs will lazily initialize stuff  when  rendering
                the first frame, so if this is not done, there is some likeliness that the VO has to drop some frames if
                rendering the first frame takes longer than needed.

       [1m--display-fps-override=<fps>[0m
              Set the display FPS used with the [1m--video-sync=display-* [22mmodes. By default, a detected value is used. Keep
              in  mind  that  setting  an  incorrect  value  (even  if  slightly  incorrect) can ruin video playback. On
              multi-monitor systems, there is a chance that the detected value is from the wrong monitor.

              Set this option only if you have reason to believe the automatically determined value is wrong.

       [1m--hwdec=<api1,api2,...|no|auto|auto-safe|auto-copy>[0m
              Specify the hardware video decoding API that should be used if possible.  Whether hardware decoding is ac‚Äê
              tually done depends on the video codec. If hardware decoding is not possible, mpv will fall back on  soft‚Äê
              ware decoding.

              Hardware  decoding is not enabled by default, to keep the out-of-the-box configuration as reliable as pos‚Äê
              sible. However, when using modern hardware, hardware video decoding should work  correctly,  offering  re‚Äê
              duced  CPU usage, and possibly lower power consumption. On older systems, it may be necessary to use hard‚Äê
              ware decoding due to insufficient CPU resources; and even on modern systems, sufficiently complex  content
              (eg: 4K60 AV1) may require it.

              [1mNOTE:[0m
                 Use  the  [1mCtrl+h  [22mshortcut  to  toggle  hardware  decoding  at  runtime. It toggles this option between
                 [1mauto-safe [22mand [1mno[22m.

                 If you decide you want to use hardware decoding by default, the general recommendation is  to  try  out
                 decoding  with  the command line option, and prove to yourself that it works as desired for the content
                 you care about. After that, you can add it to your config file.

                 When testing, you should start by using [1mhwdec=auto-safe [22mas it will limit itself to choosing from hwdecs
                 that are actively supported by the development team. If that doesn't result in working hardware  decod‚Äê
                 ing,  you  can  try [1mhwdec=auto [22mto have it attempt to load every possible hwdec, but if [1mauto-safe [22mdidn't
                 work, you will probably need to know exactly which hwdec matches your hardware and read up on that  en‚Äê
                 try below.

                 If  [1mauto-safe  [22mor [1mauto [22mproduced the desired results, we recommend just sticking with that and only set‚Äê
                 ting a specific hwdec in your config file if it is really necessary.

                 If you use the Ubuntu package, keep in mind that their [1m/etc/mpv/mpv.conf [22mcontains [1mhwdec=vaapi[22m, which is
                 less than ideal as it may not be the right choice for your system, and it may end up using  an  ineffi‚Äê
                 cient  wrapper  library  under  the  covers. We recommend removing this line or deleting the file alto‚Äê
                 gether.

              [1mNOTE:[0m
                 Even if enabled, hardware decoding is still only white-listed for some codecs.  See  [1m--hwdec-codecs  [22mto
                 enable hardware decoding in more cases.

                 Which method to choose?

                 ‚Ä¢ If  you  only  want  to enable hardware decoding at runtime, don't set the parameter, or put [1mhwdec=no[0m
                   into your [1mmpv.conf [22m(relevant on distros which force-enable it by default, such as on Ubuntu). Use the
                   [1mCtrl+h [22mdefault binding to enable it at runtime.

                 ‚Ä¢ If you're not sure, but want hardware decoding always enabled by default,  put  [1mhwdec=auto-safe  [22minto
                   your [1mmpv.conf[22m, and acknowledge that this may cause problems.

                 ‚Ä¢ If  you  want  to  test available hardware decoding methods, pass [1m--hwdec=auto --hwdec-codecs=all [22mand
                   look at the terminal output.

                 ‚Ä¢ If you're a developer, or want to perform elaborate tests, you may need any of the other possible op‚Äê
                   tion values.

              This option accepts a comma delimited list of [1mapi [22mtypes, along with certain special values:

              [1mno     [22malways use software decoding (default)

              [1mauto-safe[0m
                     enable any whitelisted hw decoder (see below)

              [1mauto   [22mforcibly enable any hw decoder found (see below)

              [1myes    [22mexactly the same as [1mauto-safe[0m

              [1mauto-copy[0m
                     enable best hw decoder with copy-back (see below)

              [1mNOTE:[0m
                 Special values can be mixed with api names. eg: [1mvaapi,auto [22mwill try and use the  [1mvaapi  [22mhwdec,  and  if
                 that fails, will run through the normal [1mauto [22mlogic.

              Actively supported hwdecs:

              [1md3d11va[0m
                     requires [1m--vo=gpu [22mwith [1m--gpu-context=d3d11 [22mor [1m--gpu-context=angle [22m(Windows 8+ only)

              [1md3d11va-copy[0m
                     copies video back to system RAM (Windows 8+ only)

              [1mvideotoolbox[0m
                     requires [1m--vo=gpu [22m(macOS 10.8 and up), or [1m--vo=libmpv [22m(iOS 9.0 and up)

              [1mvideotoolbox-copy[0m
                     copies video back into system RAM (macOS 10.8 or iOS 9.0 and up)

              [1mvaapi  [22mrequires [1m--vo=gpu[22m, [1m--vo=vaapi [22mor [1m--vo=dmabuf-wayland [22m(Linux only)

              [1mvaapi-copy[0m
                     copies video back into system RAM (Linux with some GPUs only)

              [1mnvdec  [22mrequires [1m--vo=gpu [22m(Any platform CUDA is available)

              [1mnvdec-copy[0m
                     copies video back to system RAM (Any platform CUDA is available)

              [1mdrm    [22mrequires [1m--vo=gpu [22m(Linux only)

              [1mdrm-copy[0m
                     copies video back to system RAM (Linux only)

              [1mvulkan [22mrequires [1m--vo=gpu-next [22m(Any platform with Vulkan Video Decoding)

              [1mvulkan-copy[0m
                     copies video back to system RAM (Any platform with Vulkan Video Decoding)

              Other hwdecs (only use if you know you have to):

              [1mdxva2  [22mrequires [1m--vo=gpu [22mwith [1m--gpu-context=d3d11[22m, [1m--gpu-context=angle [22mor [1m--gpu-context=dxinterop [22m(Windows
                     only)

              [1mdxva2-copy[0m
                     copies video back to system RAM (Windows only)

              [1mvdpau  [22mrequires [1m--vo=gpu [22mwith [1m--gpu-context=x11[22m, or [1m--vo=vdpau [22m(Linux only)

              [1mvdpau-copy[0m
                     copies video back into system RAM (Linux with some GPUs only)

              [1mmediacodec[0m
                     requires [1m--vo=gpu --gpu-context=android [22mor [1m--vo=mediacodec_embed [22m(Android only)

              [1mmediacodec-copy[0m
                     copies video back to system RAM (Android only)

              [1mmmal   [22mrequires [1m--vo=gpu [22m(Raspberry Pi only - default if available)

              [1mmmal-copy[0m
                     copies video back to system RAM (Raspberry Pi only)

              [1mcuda   [22mrequires [1m--vo=gpu [22m(Any platform CUDA is available)

              [1mcuda-copy[0m
                     copies video back to system RAM (Any platform CUDA is available)

              [1mcrystalhd[0m
                     copies video back to system RAM (Any platform supported by hardware)

              [1mrkmpp  [22mrequires [1m--vo=gpu [22m(some RockChip devices only)

              [1mauto  [22mtries to automatically enable hardware decoding using the first available method. This still depends
              what VO you are using. For example, if you are not using [1m--vo=gpu [22mor [1m--vo=vdpau[22m, vdpau decoding will never
              be enabled. Also note that if the first found method doesn't actually work, it will always  fall  back  to
              software decoding, instead of trying the next method (might matter on some Linux systems).

              [1mauto-safe [22mis similar to [1mauto[22m, but allows only whitelisted methods that are considered "safe". This is sup‚Äê
              posed  to  be  a  reasonable way to enable hardware decdoding by default in a config file (even though you
              shouldn't do that anyway; prefer runtime enabling with [1mCtrl+h[22m). Unlike [1mauto[22m, this will not try  to  enable
              unknown  or  known-to-be-bad  methods. In addition, this may disable hardware decoding in other situations
              when it's known to cause problems, but currently this mechanism is quite primitive.  (As  an  example  for
              something  that  still  causes  problems:  certain combinations of HEVC and Intel chips on Windows tend to
              cause mpv to crash, most likely due to driver bugs.)

              [1mauto-copy-safe [22mselects the union of methods selected with [1mauto-safe [22mand [1mauto-copy[22m.

              [1mauto-copy [22mselects only modes that copy the video data back to system memory after decoding.  This  selects
              modes  like  [1mvaapi-copy  [22m(and  so on).  If none of these work, hardware decoding is disabled. This mode is
              usually guaranteed to incur no additional quality loss compared  to  software  decoding  (assuming  modern
              codecs  and an error free video stream), and will allow CPU processing with video filters. This mode works
              with all video filters and VOs.

              Because these copy the decoded video back to system RAM, they're often  less  efficient  than  the  direct
              modes, and may not help too much over software decoding if you are short on CPU resources.

              [1mNOTE:[0m
                 Most non-copy methods only work with the OpenGL GPU backend. Currently, only the [1mvaapi[22m, [1mnvdec[22m, [1mcuda [22mand
                 [1mvulkan [22mmethods work with Vulkan.

              The  [1mvaapi  [22mmode,  if  used with [1m--vo=gpu[22m, requires Mesa 11, and most likely works with Intel and AMD GPUs
              only. It also requires the opengl EGL backend.

              [1mnvdec [22mand [1mnvdec-copy [22mare the newest, and recommended method to do hardware decoding on Nvidia GPUs.

              [1mcuda [22mand [1mcuda-copy [22mare an older implementation of hardware decoding on Nvidia GPUs that uses Nvidia's bit‚Äê
              stream parsers rather than FFmpeg's.  This can lead to feature deficiencies, such as incorrect playback of
              HDR content, and [1mnvdec[22m/[1mnvdec-copy [22mshould always be preferred unless you specifically need  Nvidia's  dein‚Äê
              terlacing algorithms. To use this deinterlacing you must pass the option: [1mvd-lavc-o=deint=[weave|bob|adap‚Äê[0m
              [1mtive][22m.  Pass [1mweave [22m(or leave the option unset) to not attempt any deinterlacing.

                 Quality reduction with hardware decoding

                        In  theory,  hardware  decoding  does not reduce video quality (at least for the codecs h264 and
                        HEVC). However, due to restrictions in video output APIs, as well as bugs in the actual hardware
                        decoders, there can be some loss, or even blatantly incorrect results. This has  largely  ceased
                        to  be  a problem with modern hardware, but there is a lot of hardware out there, so caveat emp‚Äê
                        tor. Known problems are discussed below, but the list cannot be considered exhaustive,  as  even
                        hwdecs that work well on certain hardware generations may be problematic on other ones.

                        In  some  cases,  RGB  conversion  is forced, which means the RGB conversion is performed by the
                        hardware decoding API, instead of the shaders used by [1m--vo=gpu[22m. This means  certain  colorspaces
                        may  not  display  correctly,  and certain filtering (such as debanding) cannot be applied in an
                        ideal way. This will also usually force the use of low quality chroma scalers instead of the one
                        specified by [1m--cscale[22m. In other cases, hardware decoding can also reduce the bit  depth  of  the
                        decoded image, which can introduce banding or precision loss for 10-bit files.

                        [1mvdpau  [22malways  does  RGB  conversion  in hardware, which does not support newer colorspaces like
                        BT.2020 correctly. However, [1mvdpau [22mdoesn't support 10 bit or HDR encodings, so these  limitations
                        are unlikely to be relevant.

                        [1mdxva2  [22mis not safe. It appears to always use BT.601 for forced RGB conversion, but actual behav‚Äê
                        ior depends on the GPU drivers. Some drivers appear to convert to limited range RGB, which gives
                        a faded appearance.  In addition to driver-specific behavior, global system settings  might  af‚Äê
                        fect  this  additionally.  This  can  give incorrect results even with completely ordinary video
                        sources.

                        [1mrpi [22malways uses the hardware overlay renderer, even with [1m--vo=gpu[22m.

                        [1mmediacodec [22mis not safe. It forces RGB conversion (not  with  [1m-copy[22m)  and  how  well  it  handles
                        non-standard  colorspaces  is  not  known.   In the rare cases where 10-bit is supported the bit
                        depth of the output will be reduced to 8.

                        [1mcuda [22mshould usually be safe, but depending on how a file/stream has been mixed, it has been  re‚Äê
                        ported  to corrupt the timestamps causing glitched, flashing frames. It can also sometimes cause
                        massive framedrops for unknown reasons. Caution is advised, and  [1mnvdec  [22mshould  always  be  pre‚Äê
                        ferred.

                        [1mcrystalhd  [22mis  not  safe.  It always converts to 4:2:2 YUV, which may be lossy, depending on how
                        chroma sub-sampling is done during conversion. It also discards the top left pixel of each frame
                        for some reason.

                        If you run into any weird decoding issues, frame glitches or discoloration, and you have [1m--hwdec[0m
                        turned on, the first thing you should try is disabling it.

       [1m--gpu-hwdec-interop=<auto|all|no|name>[0m
              This option is for troubleshooting hwdec interop issues. Since it's a debugging option, its semantics  may
              change at any time.

              This is useful for the [1mgpu [22mand [1mlibmpv [22mVOs for selecting which hwdec interop context to use exactly. Effec‚Äê
              tively it also can be used to block loading of certain backends.

              If  set  to [1mauto [22m(default), the behavior depends on the VO: for [1mgpu[22m, it does nothing, and the interop con‚Äê
              text is loaded on demand (when the decoder probes for [1m--hwdec [22msupport).  For  [1mlibmpv[22m,  which  has  has  no
              on-demand loading, this is equivalent to [1mall[22m.

              The empty string is equivalent to [1mauto[22m.

              If set to [1mall[22m, it attempts to load all interop contexts at GL context creation time.

              Other  than  that,  a  specific backend can be set, and the list of them can be queried with [1mhelp [22m(mpv CLI
              only).

              Runtime changes to this are ignored (the current option value is used whenever the renderer is created).

       [1m--hwdec-extra-frames=<N>[0m
              Number of GPU frames hardware decoding should preallocate (default: see [1m--list-options [22moutput). If this is
              too low, frame allocation may fail during decoding, and video frames might get dropped  and/or  corrupted.
              Setting it too high simply wastes GPU memory and has no advantages.

              This  value  is  used only for hardware decoding APIs which require preallocating surfaces (known examples
              include [1md3d11va [22mand [1mvaapi[22m).  For other APIs, frames are allocated as needed. The  details  depend  on  the
              libavcodec implementations of the hardware decoders.

              The  required  number of surfaces depends on dynamic runtime situations. The default is a fixed value that
              is thought to be sufficient for most uses. But in certain situations, it may not be enough.

       [1m--hwdec-image-format=<name>[0m
              Set the internal pixel format used by hardware decoding via [1m--hwdec [22m(default [1mno[22m). The special value [1mno [22mse‚Äê
              lects an implementation specific standard format. Most decoder implementations support  only  one  format,
              and will fail to initialize if the format is not supported.

              Some  implementations  might  support  multiple  formats.  In particular, videotoolbox is known to require
              [1muyvy422 [22mfor good performance on some older hardware. d3d11va can always use [1myuv420p[22m, which uses an  opaque
              format, with likely no advantages.

       [1m--cuda-decode-device=<auto|0..>[0m
              Choose  the  GPU device used for decoding when using the [1mcuda [22mor [1mnvdec [22mhwdecs with the OpenGL GPU backend,
              and with the [1mcuda-copy [22mor [1mnvdec-copy [22mhwdecs in all cases.

              For the OpenGL GPU backend, the default device used for decoding is the one being used to provide [1mgpu [22mout‚Äê
              put (and in the vast majority of cases, only one GPU will be present).

              For the [1mcopy [22mhwdecs, the default device will be the first device enumerated by the CUDA libraries  -  how‚Äê
              ever that is done.

              For  the Vulkan GPU backend, decoding must always happen on the display device, and this option has no ef‚Äê
              fect.

       [1m--vaapi-device=<device file>[0m
              Choose the DRM device  for  [1mvaapi-copy[22m.  This  should  be  the  path  to  a  DRM  device  file.  (Default:
              [1m/dev/dri/renderD128[22m)

       [1m--panscan=<0.0-1.0>[0m
              Enables  pan-and-scan  functionality (cropping the sides of e.g. a 16:9 video to make it fit a 4:3 display
              without black bands). The range controls how much of the image is cropped. May not  work  with  all  video
              output drivers.

              This option has no effect if [1m--video-unscaled [22moption is used.

       [1m--video-aspect-override=<ratio|no>[0m
              Override video aspect ratio, in case aspect information is incorrect or missing in the file being played.

              These values have special meaning:

              [1m0      [22mdisable aspect ratio handling, pretend the video has square pixels

              [1mno     [22msame as [1m0[0m

              [1m-1     [22muse the video stream or container aspect (default)

              But note that handling of these special values might change in the future.

                 Examples

                 ‚Ä¢ [1m--video-aspect-override=4:3  [22mor [1m--video-aspect-override=1.3333[0m

                 ‚Ä¢ [1m--video-aspect-override=16:9 [22mor [1m--video-aspect-override=1.7777[0m

                 ‚Ä¢ [1m--no-video-aspect-override [22mor [1m--video-aspect-override=no[0m

       [1m--video-aspect-method=<bitstream|container>[0m
              This  sets  the  default  video aspect determination method (if the aspect is _not_ overridden by the user
              with [1m--video-aspect-override [22mor others).

              [1mcontainer[0m
                     Strictly prefer the container aspect ratio. This is apparently the default behavior  with  VLC,  at
                     least  with  Matroska. Note that if the container has no aspect ratio set, the behavior is the same
                     as with bitstream.

              [1mbitstream[0m
                     Strictly prefer the bitstream aspect ratio, unless the bitstream aspect ratio is not set.  This  is
                     apparently the default behavior with XBMC/kodi, at least with Matroska.

              The current default for mpv is [1mcontainer[22m.

              Normally you should not set this. Try the various choices if you encounter video that has the wrong aspect
              ratio in mpv, but seems to be correct in other players.

       [1m--video-unscaled=<no|yes|downscale-big>[0m
              Disable scaling of the video. If the window is larger than the video, black bars are added. Otherwise, the
              video is cropped, unless the option is set to [1mdownscale-big[22m, in which case the video is fit to window. The
              video  still can be influenced by the other [1m--video-... [22moptions. This option disables the effect of [1m--pan‚Äê[0m
              [1mscan[22m.

              Note that the scaler algorithm may still be used, even if the video isn't scaled. For  example,  this  can
              influence  chroma  conversion.  The  video  will  also still be scaled in one dimension if the source uses
              non-square pixels (e.g. anamorphic widescreen DVDs).

              This option is disabled if the [1m--no-keepaspect [22moption is used.

       [1m--video-pan-x=<value>, --video-pan-y=<value>[0m
              Moves the displayed video rectangle by the given value in the X or Y direction. The unit is  in  fractions
              of  the size of the scaled video (the full size, even if parts of the video are not visible due to panscan
              or other options).

              For example, displaying a video fullscreen on a 1920x1080 screen with [1m--video-pan-x=-0.1  [22mwould  move  the
              video 192 pixels to the left and [1m--video-pan-y=-0.1 [22mwould move the video 108 pixels up.

              This option is disabled if the [1m--no-keepaspect [22moption is used.

       [1m--video-rotate=<0-359|no>[0m
              Rotate  the  video clockwise, in degrees. If [1mno [22mis given, the video is never rotated, even if the file has
              rotation metadata. (The rotation value is added to the rotation metadata, which means the  value  [1m0  [22mwould
              rotate the video according to the rotation metadata.)

              When  using hardware decoding without copy-back, only 90¬∞ steps work, while software decoding and hardware
              decoding methods that copy the video back to system memory support all values between 0 and 359.

       [1m--video-crop=<[W[xH]][+x+y]>, --video-crop=<x:y>[0m
              Crop the video by starting at the x, y offset for w, h pixels. The crop is applied  to  the  source  video
              rectangle  (before anamorphic stretch) by the VO.  A crop rectangle that is not within the video rectangle
              will be ignored.  This works with hwdec, unlike the equivalent 'lavfi-crop'. When offset is  omitted,  the
              central  area will be cropped. Setting the crop to empty one [1m--video-crop=0x0+0+0 [22moverrides container crop
              and disables cropping.  Setting the crop to [1m--video-crop="" [22mdisables manual cropping and restores the con‚Äê
              tainer crop if it's specified.

       [1m--video-zoom=<value>[0m
              Adjust the video display scale factor by the given value. The parameter  is  given  log  2.  For  example,
              [1m--video-zoom=0  [22mis  unscaled, [1m--video-zoom=1 [22mis twice the size, [1m--video-zoom=-2 [22mis one fourth of the size,
              and so on.

              This option is disabled if the [1m--no-keepaspect [22moption is used.

       [1m--video-scale-x=<value>, --video-scale-y=<value>[0m
              Multiply the video display size with the given value (default: 1.0). If a non-default value is used,  this
              will be different from the window size, so video will be either cut off, or black bars are added.

              This  value is multiplied with the value derived from [1m--video-zoom [22mand the normal video aspect ratio. This
              option is disabled if the [1m--no-keepaspect [22moption is used.

       [1m--video-align-x=<-1-1>, --video-align-y=<-1-1>[0m
              Moves the video rectangle within the black borders, which are usually added to pad the video to screen  if
              video  and  screen aspect ratios are different.  [1m--video-align-y=-1 [22mwould move the video to the top of the
              screen (leaving a border only on the bottom), a value of [1m0 [22mcenters it (default), and a value  of  [1m1  [22mwould
              put the video at the bottom of the screen.

              If video and screen aspect match perfectly, these options do nothing.

              This option is disabled if the [1m--no-keepaspect [22moption is used.

       [1m--video-margin-ratio-left=<val>, --video-margin-ratio-right=<val>, --video-margin-ratio-top=<val>, --video-mar‚Äê[0m
       [1mgin-ratio-bottom=<val>[0m
              Set  extra  video  margins  on each border (default: 0). Each value is a ratio of the window size, using a
              range 0.0-1.0. For example, setting the option [1m--video-margin-ratio-right=0.2 [22mat a  window  size  of  1000
              pixels will add a 200 pixels border on the right side of the window.

              The  video  is "boxed" by these margins. The window size is not changed. In particular it does not enlarge
              the window, and the margins will cause the video to be downscaled by default. This may or may  not  change
              in the future.

              The margins are applied after 90¬∞ video rotation, but before any other video transformations.

              This option is disabled if the [1m--no-keepaspect [22moption is used.

              Subtitles still may use the margins, depending on [1m--sub-use-margins [22mand similar options.

              These  options were created for the OSC. Some odd decisions, such as making the margin values a ratio (in‚Äê
              stead of pixels), were made for the sake of the OSC. It's possible that these options may be  replaced  by
              ones that are more generally useful. The behavior of these options may change to fit OSC requirements bet‚Äê
              ter, too.

       [1m--correct-pts, --no-correct-pts[0m
              [1m--no-correct-pts  [22mswitches  mpv  to  a mode where video timing is determined using a fixed framerate value
              (either using the [1m--container-fps-override [22moption, or using file information). Sometimes, files with  very
              broken  timestamps can be played somewhat well in this mode.  Note that video filters, subtitle rendering,
              seeking (including hr-seeks and backstepping), and audio synchronization can be completely broken in  this
              mode.

       [1m--container-fps-override=<float>[0m
              Override video framerate. Useful if the original value is wrong or missing.

              [1mNOTE:[0m
                 Works in [1m--no-correct-pts [22mmode only.

       [1m--deinterlace=<yes|no>[0m
              Enable  or  disable interlacing (default: no).  Interlaced video shows ugly comb-like artifacts, which are
              visible on fast movement. Enabling this typically inserts the yadif video filter in order  to  deinterlace
              the video, or lets the video output apply deinterlacing if supported.

              This behaves exactly like the [1mdeinterlace [22minput property (usually mapped to [1md[22m).

              Keep  in  mind that this [1mwill [22mconflict with manually inserted deinterlacing filters, unless you take care.
              (Since mpv 0.27.0, even the hardware deinterlace filters will conflict. Also since that  version,  [1m--dein‚Äê[0m
              [1mterlace=auto  [22mwas  removed,  which  used  to mean that the default interlacing option of possibly inserted
              video filters was used.)

              Note that this will make video look worse if it's not actually interlaced.

       [1m--frames=<number>[0m
              Play/convert only first [1m<number> [22mvideo frames, then quit.

              [1m--frames=0 [22mloads the file, but immediately quits  before  initializing  playback.  (Might  be  useful  for
              scripts which just want to determine some file properties.)

              For audio-only playback, any value greater than 0 will quit playback immediately after initialization. The
              value 0 works as with video.

       [1m--video-output-levels=<outputlevels>[0m
              RGB  color  levels  used with YUV to RGB conversion. Normally, output devices such as PC monitors use full
              range color levels. However, some TVs and video monitors expect studio RGB levels.  Providing  full  range
              output  to  a device expecting studio level input results in crushed blacks and whites, the reverse in dim
              gray blacks and dim whites.

              Not all VOs support this option. Some will silently ignore it.

              Available color ranges are:

              [1mauto   [22mautomatic selection (equals to full range) (default)

              [1mlimited[0m
                     limited range (16-235 per component), studio levels

              [1mfull   [22mfull range (0-255 per component), PC levels

              [1mNOTE:[0m
                 It is advisable to use your graphics driver's color range option instead, if available.

       [1m--hwdec-codecs=<codec1,codec2,...|all>[0m
              Allow hardware decoding for a given list of codecs only. The special value [1mall [22malways allows all codecs.

              You can get the list of allowed codecs with [1mmpv --vd=help[22m. Remove the prefix, e.g.  instead  of  [1mlavc:h264[0m
              use [1mh264[22m.

              By  default,  this is set to [1mh264,vc1,hevc,vp8,vp9,av1[22m. Note that the hardware acceleration special codecs
              like [1mh264_vdpau [22mare not relevant anymore, and in fact have been removed from Libav in this form.

              This is usually only needed with broken GPUs, where a codec is reported as supported, but decoding  causes
              more problems than it solves.

                 Example

                 [1mmpv --hwdec=vdpau --vo=vdpau --hwdec-codecs=h264,mpeg2video[0m
                        Enable vdpau decoding for h264 and mpeg2 only.

       [1m--vd-lavc-check-hw-profile=<yes|no>[0m
              Check  hardware  decoder profile (default: yes). If [1mno [22mis set, the highest profile of the hardware decoder
              is unconditionally selected, and decoding is forced even if the profile of the video is higher than  that.
              The  result  is  most  likely  broken decoding, but may also help if the detected or reported profiles are
              somehow incorrect.

       [1m--vd-lavc-software-fallback=<yes|no|N>[0m
              Fallback to software decoding if the hardware-accelerated decoder fails (default: 3). If this is a number,
              then fallback will be triggered if N frames fail to decode in a row. 1 is equivalent to [1myes[22m.

              Setting this to a higher number might break the playback start fallback: if a fallback happens,  parts  of
              the  file will be skipped, approximately by to the number of packets that could not be decoded. Values be‚Äê
              low an unspecified count will not have this problem, because mpv retains the packets.

       [1m--vd-lavc-film-grain=<auto|cpu|gpu>[0m
              Enables film grain application on the GPU. If video decoding is done on the CPU, doing film grain applica‚Äê
              tion on the GPU can speed up decoding.  This option can also help hardware decoding, as it can reduce  the
              number of frame copies done.

              By  default,  it's  set  to [1mauto[22m, so if the VO supports film grain application, then it will be treated as
              [1mgpu[22m. If the VO does not support this, then it will be treated as [1mcpu[22m, regardless  of  the  setting.   Cur‚Äê
              rently, only [1mgpu-next [22msupports film grain application.

       [1m--vd-lavc-dr=<auto|yes|no>[0m
              Enable  direct rendering (default: auto). If this is set to [1myes[22m, the video will be decoded directly to GPU
              video memory (or staging buffers).  This can speed up video upload, and may help with large resolutions or
              slow hardware. This works only with the following VOs:

                 ‚Ä¢ [1mgpu[22m: requires at least OpenGL 4.4 or Vulkan.

                 ‚Ä¢ [1mlibmpv[22m: The libmpv render API has optional support.

              The [1mauto [22moption will try to guess whether DR can improve performance on  your  particular  hardware.  Cur‚Äê
              rently this enables it on AMD or NVIDIA if using OpenGL or unconditionally if using Vulkan.

              Using  video  filters  of  any  kind  that write to the image data (or output newly allocated frames) will
              silently disable the DR code path.

       [1m--vd-lavc-bitexact[0m
              Only use bit-exact algorithms in all decoding steps (for codec testing).

       [1m--vd-lavc-fast (MPEG-1/2 and H.264 only)[0m
              Enable optimizations which do not comply with the format specification  and  potentially  cause  problems,
              like simpler dequantization, simpler motion compensation, assuming use of the default quantization matrix,
              assuming YUV 4:2:0 and skipping a few checks to detect damaged bitstreams.

       [1m--vd-lavc-o=<key>=<value>[,<key>=<value>[,...]][0m
              Pass  AVOptions  to libavcodec decoder. Note, a patch to make the [1mo= [22munneeded and pass all unknown options
              through the AVOption system is welcome. A full list of AVOptions can be found in the FFmpeg manual.

              Some options which used to be direct options can be set with this mechanism, like  [1mbug[22m,  [1mgray[22m,  [1midct[22m,  [1mec[22m,
              [1mvismv[22m, [1mskip_top [22m(was [1mst[22m), [1mskip_bottom [22m(was [1msb[22m), [1mdebug[22m.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                        [1m--vd-lavc-o=debug=pict[0m

       [1m--vd-lavc-show-all=<yes|no>[0m
              Show even broken/corrupt frames (default: no). If this option is set to no, libavcodec won't output frames
              that  were  either  decoded  before an initial keyframe was decoded, or frames that are recognized as cor‚Äê
              rupted.

       [1m--vd-lavc-skiploopfilter=<skipvalue> (H.264, HEVC only)[0m
              Skips the loop filter (AKA deblocking) during decoding. Since the filtered frame is supposed to be used as
              reference for decoding dependent frames, this has a worse effect on quality than not doing  deblocking  on
              e.g.  MPEG-2  video.  But  at least for high bitrate HDTV, this provides a big speedup with little visible
              quality loss.  Codecs other than H.264 or HEVC may have partial support for this option  (often  only  [1mall[0m
              and [1mnone[22m).

              [1m<skipvalue> [22mcan be one of the following:

              [1mnone   [22mNever skip.

              [1mdefault[0m
                     Skip useless processing steps (e.g. 0 size packets in AVI).

              [1mnonref [22mSkip  frames  that  are  not  referenced (i.e. not used for decoding other frames, the error cannot
                     "build up").

              [1mbidir  [22mSkip B-Frames.

              [1mnonkey [22mSkip all frames except keyframes.

              [1mall    [22mSkip all frames.

       [1m--vd-lavc-skipidct=<skipvalue> (MPEG-1/2/4 only)[0m
              Skips the IDCT step. This degrades quality a lot in almost all cases  (see  skiploopfilter  for  available
              skip values).

       [1m--vd-lavc-skipframe=<skipvalue>[0m
              Skips  decoding  of  frames  completely.  Big  speedup,  but jerky motion and sometimes bad artifacts (see
              skiploopfilter for available skip values).

       [1m--vd-lavc-framedrop=<skipvalue>[0m
              Set framedropping mode used with [1m--framedrop [22m(see skiploopfilter for available skip values).

       [1m--vd-lavc-threads=<N>[0m
              Number of threads to use for decoding. Whether threading is actually supported depends on codec  (default:
              0).  0  means autodetect number of cores on the machine and use that, up to the maximum of 16. You can set
              more than 16 threads manually.

       [1m--vd-lavc-assume-old-x264=<yes|no>[0m
              Assume the video was encoded by an old, buggy x264 version (default: no).  Normally, this is  autodetected
              by  libavcodec.  But  if  the bitstream contains no x264 version info (or it was somehow skipped), and the
              stream was in fact encoded by an old x264 version (build 150 or earlier), and if  the  stream  uses  4:4:4
              chroma,  then libavcodec will by default show corrupted video.  This option sets the libavcodec [1mx264_build[0m
              option to [1m150[22m, which means that if the stream contains no version info, or was not encoded by x264 at all,
              it assumes it was encoded by the old version. Enabling this option is pretty safe if you want your  broken
              files  to  work,  but in theory this can break on streams not encoded by x264, or if a stream encoded by a
              newer x264 version contains no version info.

       [1m--vd-apply-cropping[0m
              Certain video codecs support cropping, meaning that only a sub-rectangle of the decoded frame is  intended
              for display. This option controls how cropping is handled by libavcodec. Cropping during decoding has cer‚Äê
              tain  limitations with regards to alignment and hardware decoding. If this option is enabled, decoder will
              apply the crop, else VO will handle it. Enabled by default.

       [1m--swapchain-depth=<N>[0m
              Allow up to N in-flight frames. This essentially controls the  frame  latency.  Increasing  the  swapchain
              depth  can  improve  pipelining and prevent missed vsyncs, but increases visible latency. This option only
              mandates an upper limit, the implementation can use a lower latency than requested internally.  A  setting
              of  1  means  that  the  VO will wait for every frame to become visible before starting to render the next
              frame. (Default: 3)

   [1mAudio[0m
       [1m--audio-pitch-correction=<yes|no>[0m
              If this is enabled (default), playing with  a  speed  different  from  normal  automatically  inserts  the
              [1mscaletempo2  [22maudio filter. You can insert filters besides [1mscaletempo2 [22mand modify their params using [4mCondi‚Äê[0m
              [4mtional[24m [4mauto[24m [4mprofiles[24m:

                 [af_insert]
                 profile-cond=speed ~= 1
                 profile-restore=copy
                 af-add=scaletempo2=search-interval=50 # Insert filter and params here.

              Filters set this way replace the [1mscaletempo2 [22mdefault, instead of overlapping with it. If there are  multi‚Äê
              ple  audio  filters  inserted  that can do pitch correction, then only the last one in the filter chain is
              used.  For details on the specifics of each available filter, see the audio filter section.

       [1m--audio-device=<name>[0m
              Use the given audio device. This consists of the audio output name, e.g.  [1malsa[22m, followed by [1m/[22m, followed by
              the audio output specific device name. The default value for this option is [1mauto[22m, which tries every  audio
              output in preference order with the default device.

              You can list audio devices with [1m--audio-device=help[22m. This outputs the device name in quotes, followed by a
              description.  The device name is what you have to pass to the [1m--audio-device [22moption. The list of audio de‚Äê
              vices can be retrieved by API by using the [1maudio-device-list [22mproperty.

              While the option normally takes one of the strings as indicated by the methods above, you can  also  force
              the device for most AOs by building it manually. For example [1mname/foobar [22mforces the AO [1mname [22mto use the de‚Äê
              vice  [1mfoobar[22m.  However,  the  [1m--ao [22moption will strictly force a specific AO. To avoid confusion, don't use
              [1m--ao [22mand [1m--audio-device [22mtogether.

                 Example for ALSA

                        MPlayer and mplayer2 required you to replace any ',' with '.' and any ':' with '=' in  the  ALSA
                        device name. For example, to use the device named [1mdmix:default[22m, you had to do:
                     [1m-ao alsa:device=dmix=default[0m

                 In mpv you could instead use:
                     [1m--audio-device=alsa/dmix:default[0m

       [1m--audio-exclusive=<yes|no>[0m
              Enable exclusive output mode. In this mode, the system is usually locked out, and only mpv will be able to
              output audio.

              This  only  works  for  some  audio  outputs,  such as [1mwasapi[22m, [1mcoreaudio [22mand [1mpipewire[22m. Other audio outputs
              silently ignore this option.  They either have no concept of exclusive mode, or the mpv side of the imple‚Äê
              mentation is missing.

       [1m--audio-fallback-to-null=<yes|no>[0m
              If no audio device can be opened, behave as if [1m--ao=null [22mwas given. This is  useful  in  combination  with
              [1m--audio-device[22m: instead of causing an error if the selected device does not exist, the client API user (or
              a Lua script) could let playback continue normally, and check the [1mcurrent-ao [22mand [1maudio-device-list [22mproper‚Äê
              ties to make high-level decisions about how to continue.

       [1m--ao=<driver>[0m
              Specify  the  audio  output  drivers  to be used. See [4mAUDIO[24m [4mOUTPUT[24m [4mDRIVERS[24m for details and descriptions of
              available drivers.

       [1m--af=<filter1[=parameter1:parameter2:...],filter2,...>[0m
              Specify a list of audio filters to apply to the audio stream. See [4mAUDIO[24m [4mFILTERS[24m for details  and  descrip‚Äê
              tions  of  the  available filters.  The option variants [1m--af-add[22m, [1m--af-pre[22m, and [1m--af-clr [22mexist to modify a
              previously specified list, but you should not need these for typical use.

       [1m--audio-spdif=<codecs>[0m
              List of codecs for which compressed audio passthrough should be used. This works for both  classic  S/PDIF
              and HDMI.

              Possible  codecs  are [1mac3[22m, [1mdts[22m, [1mdts-hd[22m, [1meac3[22m, [1mtruehd[22m.  Multiple codecs can be specified by separating them
              with [1m,[22m. [1mdts [22mrefers to low bitrate DTS core, while [1mdts-hd  [22mrefers  to  DTS  MA  (receiver  and  OS  support
              varies). If both [1mdts [22mand [1mdts-hd [22mare specified, it behaves equivalent to specifying [1mdts-hd [22monly.

              In earlier mpv versions you could use [1m--ad [22mto force the spdif wrapper.  This does not work anymore.

                 Warning

                        There  is not much reason to use this. HDMI supports uncompressed multichannel PCM, and mpv sup‚Äê
                        ports lossless DTS-HD decoding via FFmpeg's new DCA decoder (based on libdcadec).

       [1m--ad=<decoder1,decoder2,...[-]>[0m
              Specify a priority list of audio decoders to be used, according to their decoder  name.  When  determining
              which decoder to use, the first decoder that matches the audio format is selected. If that is unavailable,
              the  next  decoder  is  used. Finally, it tries all other decoders that are not explicitly selected or re‚Äê
              jected by the option.

              [1m- [22mat the end of the list suppresses fallback on other available decoders not on the [1m--ad [22mlist. [1m+ [22min  front
              of  an  entry forces the decoder. Both of these should not normally be used, because they break normal de‚Äê
              coder auto-selection! Both of these methods are deprecated.

                 Examples

                 [1m--ad=mp3float[0m
                        Prefer the FFmpeg/Libav [1mmp3float [22mdecoder over all other MP3 decoders.

                 [1m--ad=help[0m
                        List all available decoders.

                 Warning

                        Enabling compressed audio passthrough (AC3 and DTS via SPDIF/HDMI) with this option is not  pos‚Äê
                        sible. Use [1m--audio-spdif [22minstead.

       [1m--volume=<value>[0m
              Set  the  startup volume. 0 means silence, 100 means no volume reduction or amplification. Negative values
              can be passed for compatibility, but are treated as 0.

              Since mpv 0.18.1, this always controls the internal mixer (aka "softvol").

       [1m--replaygain=<no|track|album>[0m
              Adjust volume gain according to replaygain values stored in the file metadata. With  [1m--replaygain=no  [22m(the
              default),  perform no adjustment.  With [1m--replaygain=track[22m, apply track gain. With [1m--replaygain=album[22m, ap‚Äê
              ply album gain if present and fall back to track gain otherwise.

       [1m--replaygain-preamp=<db>[0m
              Pre-amplification gain in dB to apply to the selected replaygain gain (default: 0).

       [1m--replaygain-clip=<yes|no>[0m
              Prevent clipping caused by  replaygain  by  automatically  lowering  the  gain  (default).  Use  [1m--replay‚Äê[0m
              [1mgain-clip=no [22mto disable this.

       [1m--replaygain-fallback=<db>[0m
              Gain  in  dB to apply if the file has no replay gain tags. This option is always applied if the replaygain
              logic is somehow inactive. If this is applied, no other replaygain options are applied.

       [1m--audio-delay=<sec>[0m
              Audio delay in seconds (positive or negative float value). Positive values delay the audio,  and  negative
              values delay the video.

       [1m--mute=<yes|no|auto>[0m
              Set startup audio mute status (default: no).

              [1mauto [22mis a deprecated possible value that is equivalent to [1mno[22m.

              See also: [1m--volume[22m.

       [1m--softvol=<no|yes|auto>[0m
              Deprecated/unfunctional. Before mpv 0.18.1, this used to control whether to use the volume controls of the
              audio output driver or the internal mpv volume filter.

              The  current  behavior  is that softvol is always enabled, i.e. as if this option is set to [1myes[22m. The other
              behaviors are not available anymore, although [1mauto [22malmost matches current behavior in most cases.

              The [1mno [22mbehavior is still partially available through the [1mao-volume [22mand [1mao-mute [22mproperties. But  there  are
              no options to reset these.

       [1m--audio-demuxer=<[+]name>[0m
              Use this audio demuxer type when using [1m--audio-file[22m. Use a '+' before the name to force it; this will skip
              some checks. Give the demuxer name as printed by [1m--audio-demuxer=help[22m.

       [1m--ad-lavc-ac3drc=<level>[0m
              Select  the Dynamic Range Compression level for AC-3 audio streams.  [1m<level> [22mis a float value ranging from
              0 to 1, where 0 means no compression (which is the default) and 1 means full compression (make  loud  pas‚Äê
              sages more silent and vice versa). Values up to 6 are also accepted, but are purely experimental. This op‚Äê
              tion only shows an effect if the AC-3 stream contains the required range compression information.

              The standard mandates that DRC is enabled by default, but mpv (and some other players) ignore this for the
              sake of better audio quality.

       [1m--ad-lavc-downmix=<yes|no>[0m
              Whether to request audio channel downmixing from the decoder (default: no).  Some decoders, like AC-3, AAC
              and  DTS,  can  remix  audio  on  decoding.  The requested number of output channels is set with the [1m--au‚Äê[0m
              [1mdio-channels [22moption.  Useful for playing surround audio on a stereo system.

       [1m--ad-lavc-threads=<0-16>[0m
              Number of threads to use for decoding. Whether threading is actually supported depends  on  codec.  As  of
              this  writing, it's supported for some lossless codecs only. 0 means autodetect number of cores on the ma‚Äê
              chine and use that, up to the maximum of 16 (default: 1).

       [1m--ad-lavc-o=<key>=<value>[,<key>=<value>[,...]][0m
              Pass AVOptions to libavcodec decoder. Note, a patch to make the o= unneeded and pass all  unknown  options
              through the AVOption system is welcome. A full list of AVOptions can be found in the FFmpeg manual.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

       [1m--ad-spdif-dtshd=<yes|no>, --dtshd, --no-dtshd[0m
              If DTS is passed through, use DTS-HD.

                 Warning

                        This and enabling passthrough via [1m--ad [22mare deprecated in favor of using [1m--audio-spdif=dts-hd[22m.

       [1m--audio-channels=<auto-safe|auto|layouts>[0m
              Control which audio channels are output (e.g. surround vs. stereo). There are the following possibilities:

              ‚Ä¢

                [1m--audio-channels=auto-safe[0m
                       Use  the  system's  preferred channel layout. If there is none (such as when accessing a hardware
                       device instead of the system mixer), force stereo. Some audio outputs  might  simply  accept  any
                       layout and do downmixing on their own.

                       This is the default.

              ‚Ä¢

                [1m--audio-channels=auto[0m
                       Send  the  audio  device whatever it accepts, preferring the audio's original channel layout. Can
                       cause issues with HDMI (see the warning below).

              ‚Ä¢

                [1m--audio-channels=layout1,layout2,...[0m
                       List of [1m,[22m-separated channel layouts which should be allowed.  Technically, this only adjusts  the
                       filter  chain  output to the best matching layout in the list, and passes the result to the audio
                       API.  It's possible that the audio API will select a different channel layout.

                       Using this mode is recommended for direct hardware output, especially over HDMI (see HDMI warning
                       below).

              ‚Ä¢

                [1m--audio-channels=<stereo|mono>[0m
                       Force a downmix to stereo or mono. These are special-cases of the previous item. (See  paragraphs
                       below for implications.)

              If  a  list  of layouts is given, each item can be either an explicit channel layout name (like [1m5.1[22m), or a
              channel number. Channel numbers refer to default layouts, e.g. 2 channels refer to  stereo,  6  refers  to
              5.1.

              See  [1m--audio-channels=help [22moutput for defined default layouts. This also lists speaker names, which can be
              used to express arbitrary channel layouts (e.g. [1mfl-fr-lfe [22mis 2.1).

              If the list of channel layouts has only 1 item, the decoder is asked to  produce  according  output.  This
              sometimes  triggers  decoder-downmix, which might be different from the normal mpv downmix. (Only some de‚Äê
              coders support remixing audio, like AC-3, AAC or DTS. You can use [1m--ad-lavc-downmix=no [22mto make the decoder
              always output its native layout.) One consequence is that [1m--audio-channels=stereo [22mtriggers  decoder  down‚Äê
              mix,  while  [1mauto  [22mor [1mauto-safe [22mnever will, even if they end up selecting stereo. This happens because the
              decision whether to use decoder downmix happens long before the audio device is opened.

              If the channel layout of the media file (i.e. the decoder) and the AO's channel layout  don't  match,  mpv
              will attempt to insert a conversion filter.  You may need to change the channel layout of the system mixer
              to  achieve your desired output as mpv does not have control over it. Another work-around for this on some
              AOs is to use [1m--audio-exclusive=yes [22mto circumvent the system mixer entirely.

                 Warning

                        Using [1mauto [22mcan cause issues when using audio over HDMI. The OS will typically report all channel
                        layouts that _can_ go over HDMI, even if the receiver does not support them. If a receiver  gets
                        an  unsupported  channel layout, random things can happen, such as dropping the additional chan‚Äê
                        nels, or adding noise.

                        You are recommended to set an explicit whitelist of the layouts you want. For example, most  A/V
                        receivers  connected  via  HDMI  and  that  can  do  7.1  would   be  served  by:  [1m--audio-chan‚Äê[0m
                        [1mnels=7.1,5.1,stereo[0m

       [1m--audio-display=<no|embedded-first|external-first>[0m
              Determines whether to display cover art when playing audio files and with what priority. It  will  display
              the first image found, and additional images are available as video tracks.

              [1mno     [22mDisable display of video entirely when playing audio files.

              [1membedded-first[0m
                     Display embedded images and external cover art, giving priority to embedded images (default).

              [1mexternal-first[0m
                     Display embedded images and external cover art, giving priority to external files.

              This option has no influence on files with normal video tracks.

       [1m--audio-files=<files>[0m
              Play audio from an external file while viewing a video.

              This is a path list option. See [4mList[24m [4mOptions[24m for details.

       [1m--audio-file=<file>[0m
              CLI/config  file  only alias for [1m--audio-files-append[22m. Each use of this option will add a new audio track.
              The details are similar to how [1m--sub-file [22mworks.

       [1m--audio-format=<format>[0m
              Select the sample format used for output from the audio filter layer to the sound card.  The  values  that
              [1m<format> [22mcan adopt are listed below in the description of the [1mformat [22maudio filter.

       [1m--audio-samplerate=<Hz>[0m
              Select  the  output sample rate to be used (of course sound cards have limits on this). If the sample fre‚Äê
              quency selected is different from that of the current media, the lavrresample audio  filter  will  be  in‚Äê
              serted into the audio filter layer to compensate for the difference.

       [1m--gapless-audio=<no|yes|weak>[0m
              Try  to  play  consecutive audio files with no silence or disruption at the point of file change. Default:
              [1mweak[22m.

              [1mno     [22mDisable gapless audio.

              [1myes    [22mThe audio device is opened using parameters chosen for the first file played and is then kept  open
                     for gapless playback. This means that if the first file for example has a low sample rate, then the
                     following  files may get resampled to the same low sample rate, resulting in reduced sound quality.
                     If you play files with different parameters, consider using options such as [1m--audio-samplerate  [22mand
                     [1m--audio-format [22mto explicitly select what the shared output format will be.

              [1mweak   [22mNormally,  the  audio  device is kept open (using the format it was first initialized with). If the
                     audio format the decoder output changes, the audio device is closed and reopened. This  means  that
                     you will normally get gapless audio with files that were encoded using the same settings, but might
                     not  be  gapless in other cases.  The exact conditions under which the audio device is kept open is
                     an implementation detail, and can change from version to version.  Currently, the  device  is  kept
                     even if the sample format changes, but the sample formats are convertible.  If video is still going
                     on when there is still audio, trying to use gapless is also explicitly given up.

              [1mNOTE:[0m
                 This  feature is implemented in a simple manner and relies on audio output device buffering to continue
                 playback while moving from one file to another. If playback of the new file starts slowly, for  example
                 because  it  is played from a remote network location or because you have specified cache settings that
                 require time for the initial cache fill, then the buffered audio may run out before playback of the new
                 file can start.

       [1m--initial-audio-sync, --no-initial-audio-sync[0m
              When starting a video file or after events such as seeking, mpv will by default modify the audio stream to
              make it start from the same timestamp as video, by either inserting silence at the start or  cutting  away
              the  first  samples.  Disabling this option makes the player behave like older mpv versions did: video and
              audio are both started immediately even if their start timestamps differ, and then video timing is  gradu‚Äê
              ally adjusted if necessary to reach correct synchronization later.

       [1m--volume-max=<100.0-1000.0>[0m
              Set the maximum amplification level in percent (default: 130). A value of 130 will allow you to adjust the
              volume up to about double the normal level.

       [1m--audio-file-auto=<no|exact|fuzzy|all>, --no-audio-file-auto[0m
              Load  additional audio files matching the video filename. The parameter specifies how external audio files
              are matched.

              [1mno     [22mDon't automatically load external audio files (default).

              [1mexact  [22mLoad the media filename with audio file extension.

              [1mfuzzy  [22mLoad all audio files containing the media filename.

              [1mall    [22mLoad all audio files in the current and [1m--audio-file-paths [22mdirectories.

       [1m--audio-file-auto-exts=ext1,ext2,...[0m
              Audio file extentions to try and match when using [1maudio-file-auto[22m.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

       [1m--audio-file-paths=<path1:path2:...>[0m
              Equivalent to [1m--sub-file-paths [22moption, but for auto-loaded audio files.

              This is a path list option. See [4mList[24m [4mOptions[24m for details.

       [1m--audio-client-name=<name>[0m
              The application name the player reports to the audio API. Can be useful if you want to force  a  different
              audio profile (e.g. with PulseAudio), or to set your own application name when using libmpv.

       [1m--audio-buffer=<seconds>[0m
              Set the audio output minimum buffer. The audio device might actually create a larger buffer if it pleases.
              If the device creates a smaller buffer, additional audio is buffered in an additional software buffer.

              Making  this  larger  will make soft-volume and other filters react slower, introduce additional issues on
              playback speed change, and block the player on audio format changes. A smaller buffer might lead to  audio
              dropouts.

              This  option should be used for testing only. If a non-default value helps significantly, the mpv develop‚Äê
              ers should be contacted.

              Default: 0.2 (200 ms).

       [1m--audio-stream-silence=<yes|no>[0m
              Cash-grab consumer audio hardware (such as A/V receivers) often ignore initial audio sent over HDMI.  This
              can happen every time audio over HDMI is stopped and resumed. In order to compensate for this, you can en‚Äê
              able this option to not to stop and restart audio on seeks, and fill the gaps with silence. Likewise, when
              pausing playback, audio is not stopped, and silence is played while paused. Note that if no audio track is
              selected, the audio device will still be closed immediately.

              Not all AOs support this.

                 Warning

                        This modifies certain subtle player behavior, like A/V-sync and underrun handling. Enabling this
                        option is strongly discouraged.

       [1m--audio-wait-open=<secs>[0m
              This  makes  sense  for use with [1m--audio-stream-silence=yes[22m. If this option is given, the player will wait
              for the given amount of seconds after opening the audio device before sending actual  audio  data  to  it.
              Useful  if  your  expensive  hardware discards the first 1 or 2 seconds of audio data sent to it. If [1m--au‚Äê[0m
              [1mdio-stream-silence=yes [22mis not set, this option will likely just waste time.

   [1mSubtitles[0m
       [1mNOTE:[0m
          Changing styling and position does not work with all subtitles. Image-based subtitles (DVD,  Bluray/PGS,  DVB)
          cannot  changed  for fundamental reasons.  Subtitles in ASS format are normally not changed intentionally, but
          overriding them can be controlled with [1m--sub-ass-override[22m.

       [1m--sub-demuxer=<[+]name>[0m
              Force subtitle demuxer type for [1m--sub-file[22m. Give the demuxer name as printed by [1m--sub-demuxer=help[22m.

       [1m--sub-delay=<sec>[0m
              Delays subtitles by [1m<sec> [22mseconds. Can be negative.

       [1m--sub-files=<file-list>, --sub-file=<filename>[0m
              Add a subtitle file to the list of external subtitles.

              If you use [1m--sub-file [22monly once, this subtitle file is displayed by default.

              If [1m--sub-file [22mis used multiple times, the subtitle to use can be switched at runtime by  cycling  subtitle
              tracks.  It's  possible  to  show two subtitles at once: use [1m--sid [22mto select the first subtitle index, and
              [1m--secondary-sid [22mto select the second index. (The index is printed on the terminal output after the  [1m--sid=[0m
              in the list of streams.)

              [1m--sub-files  [22mis a path list option (see [4mList[24m [4mOptions[24m  for details), and can take multiple file names sepa‚Äê
              rated by [1m: [22m(Unix) or [1m; [22m(Windows), while  [1m--sub-file [22mtakes a single filename,  but  can  be  used  multiple
              times  to add multiple files. Technically, [1m--sub-file [22mis a CLI/config file only alias for  [1m--sub-files-ap‚Äê[0m
              [1mpend[22m.

       [1m--secondary-sid=<ID|auto|no>[0m
              Select a secondary subtitle stream. This is similar to [1m--sid[22m. If a secondary subtitle is selected, it will
              be rendered as toptitle (i.e. on the top of the screen) alongside the normal subtitle, and provides a  way
              to render two subtitles at once.

              There are some caveats associated with this feature. For example, bitmap subtitles will always be rendered
              in  their  usual position, so selecting a bitmap subtitle as secondary subtitle will result in overlapping
              subtitles.  Secondary subtitles are never shown on the terminal if video is disabled.

              [1mNOTE:[0m
                 Styling and interpretation of any formatting tags is disabled for the secondary  subtitle.  Internally,
                 the same mechanism as [1m--no-sub-ass [22mis used to strip the styling.

              [1mNOTE:[0m
                 If  the  main  subtitle  stream  contains  formatting tags which display the subtitle at the top of the
                 screen, it will overlap with the secondary subtitle. To prevent this, you  could  use  [1m--no-sub-ass  [22mto
                 disable styling in the main subtitle stream.

       [1m--sub-scale=<0-100>[0m
              Factor for the text subtitle font size (default: 1).

              [1mNOTE:[0m
                 This affects ASS subtitles as well, and may lead to incorrect subtitle rendering. Use with care, or use
                 [1m--sub-font-size [22minstead.

       [1m--sub-scale-by-window=<yes|no>[0m
              Whether  to  scale subtitles with the window size (default: yes). If this is disabled, changing the window
              size won't change the subtitle font size.

              Like [1m--sub-scale[22m, this can break ASS subtitles.

       [1m--sub-scale-with-window=<yes|no>[0m
              Make the subtitle font size relative to the window, instead of the video.  This is useful  if  you  always
              want  the same font size, even if the video doesn't cover the window fully, e.g. because screen aspect and
              window aspect mismatch (and the player adds black bars).

              Default: yes.

              This option is misnamed. The difference to the confusingly similar sounding  option  [1m--sub-scale-by-window[0m
              is that [1m--sub-scale-with-window [22mstill scales with the approximate window size, while the other option dis‚Äê
              ables this scaling.

              Affects plain text subtitles only (or ASS if [1m--sub-ass-override [22mis set high enough).

       [1m--sub-ass-scale-with-window=<yes|no>[0m
              Like  [1m--sub-scale-with-window[22m, but affects subtitles in ASS format only.  Like [1m--sub-scale[22m, this can break
              ASS subtitles.

              Default: no.

       [1m--embeddedfonts=<yes|no>[0m
              Use fonts embedded in Matroska container files and ASS scripts (default: yes). These fonts can be used for
              SSA/ASS subtitle rendering.

       [1m--sub-pos=<0-150>[0m
              Specify the position of subtitles on the screen. The value is the vertical position of the subtitle  in  %
              of  the screen height. 100 is the original position, which is often not the absolute bottom of the screen,
              but with some margin between the bottom and the subtitle. Values above 100 move the subtitle further down.

                 Warning

                        Text subtitles (as opposed to image subtitles) may be cut off if the  value  of  the  option  is
                        above 100. This is a libass restriction.

                        This  affects ASS subtitles as well, and may lead to incorrect subtitle rendering in addition to
                        the problem above.

                        Using [1m--sub-margin-y [22mcan achieve this in a better way.

       [1m--sub-speed=<0.1-10.0>[0m
              Multiply the subtitle event timestamps with the given value. Can be used to fix  the  playback  speed  for
              frame-based subtitle formats. Affects text subtitles only.

                 Example

                        [1m--sub-speed=25/23.976 [22mplays frame based subtitles which have been loaded assuming a framerate of
                        23.976 at 25 FPS.

       [1m--sub-ass-style-overrides=<[Style.]Param=Value[,...]>[0m
              Override some style or script info parameters.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Examples

                 ‚Ä¢ [1m--sub-ass-style-overrides=FontName=Arial,Default.Bold=1[0m

                 ‚Ä¢ [1m--sub-ass-style-overrides=PlayResY=768[0m

              [1mNOTE:[0m
                 Using this option may lead to incorrect subtitle rendering.

       [1m--sub-ass-hinting=<none|light|normal|native>[0m
              Set font hinting type. <type> can be:

              [1mnone   [22mno hinting (default)

              [1mlight  [22mFreeType autohinter, light mode

              [1mnormal [22mFreeType autohinter, normal mode

              [1mnative [22mfont native hinter

                 Warning

                        Enabling  hinting  can lead to mispositioned text (in situations it's supposed to match up video
                        background), or reduce the smoothness of animations with some badly authored ASS scripts. It  is
                        recommended to not use this option, unless really needed.

       [1m--sub-ass-line-spacing=<value>[0m
              Set line spacing value for SSA/ASS renderer.

       [1m--sub-ass-shaper=<simple|complex>[0m
              Set the text layout engine used by libass.

              [1msimple [22muses Fribidi only, fast, doesn't render some languages correctly

              [1mcomplex[0m
                     uses HarfBuzz, slower, wider language support

              [1mcomplex  [22mis  the default. If libass hasn't been compiled against HarfBuzz, libass silently reverts to [1msim‚Äê[0m
              [1mple[22m.

       [1m--sub-ass-styles=<filename>[0m
              Load all SSA/ASS styles found in the specified file and use them for rendering text subtitles. The  syntax
              of the file is exactly like the [1m[V4 Styles] [22m/ [1m[V4+ Styles] [22msection of SSA/ASS.

              [1mNOTE:[0m
                 Using this option may lead to incorrect subtitle rendering.

       [1m--sub-ass-override=<yes|no|force|scale|strip>[0m
              Control  whether  user style overrides should be applied. Note that all of these overrides try to be some‚Äê
              what smart about figuring out whether or not a subtitle is considered a "sign".

              [1mno     [22mRender subtitles as specified by the subtitle scripts, without overrides.

              [1myes    [22mApply all the [1m--sub-ass-* [22mstyle override options. Changing the default for any of these options can
                     lead to incorrect subtitle rendering (default).

              [1mforce  [22mLike [1myes[22m, but also force all [1m--sub-* [22moptions. Can break rendering easily.

              [1mscale  [22mLike [1myes[22m, but also apply [1m--sub-scale[22m.

              [1mstrip  [22mRadically strip all ASS tags and styles from the subtitle. This is equivalent to the old [1m--no-ass [22m/
                     [1m--no-sub-ass [22moptions.

              This also controls some bitmap subtitle overrides, as well as HTML tags in formats like SRT,  despite  the
              name of the option.

       [1m--sub-ass-force-margins[0m
              Enables  placing toptitles and subtitles in black borders when they are available, if the subtitles are in
              the ASS format.

              Default: no.

       [1m--sub-use-margins[0m
              Enables placing toptitles and subtitles in black borders when they are available, if the subtitles are  in
              a plain text format  (or ASS if [1m--sub-ass-override [22mis set high enough).

              Default: yes.

       [1m--sub-ass-vsfilter-aspect-compat=<yes|no>[0m
              Stretch  SSA/ASS  subtitles when playing anamorphic videos for compatibility with traditional VSFilter be‚Äê
              havior. This switch has no effect when the video is stored with square pixels.

              The renderer historically most commonly used for the SSA/ASS subtitle formats, VSFilter, had  questionable
              behavior  that resulted in subtitles being stretched too if the video was stored in anamorphic format that
              required scaling for display.  This behavior is usually undesirable and newer VSFilter versions may behave
              differently. However, many existing scripts compensate for the stretching by modifying things in the oppo‚Äê
              site direction.  Thus, if such scripts are displayed "correctly", they will not appear as intended.   This
              switch enables emulation of the old VSFilter behavior (undesirable but expected by many existing scripts).

              Enabled by default.

       [1m--sub-ass-vsfilter-blur-compat=<yes|no>[0m
              Scale [1m\blur [22mtags by video resolution instead of script resolution (enabled by default). This is bug in VS‚Äê
              Filter, which according to some, can't be fixed anymore in the name of compatibility.

              Note  that  this  uses  the  actual video resolution for calculating the offset scale factor, not what the
              video filter chain or the video output use.

       [1m--sub-ass-vsfilter-color-compat=<basic|full|force-601|no>[0m
              Mangle colors like (xy-)vsfilter do (default: basic). Historically, VSFilter was not  color  space  aware.
              This  was  no  problem as long as the color space used for SD video (BT.601) was used. But when everything
              switched to HD (BT.709), VSFilter was still converting RGB colors to BT.601, rendered them into the  video
              frame, and handled the frame to the video output, which would use BT.709 for conversion to RGB. The result
              were  mangled subtitle colors. Later on, bad hacks were added on top of the ASS format to control how col‚Äê
              ors are to be mangled.

              [1mbasic  [22mHandle only BT.601->BT.709 mangling, if the subtitles seem to indicate that this is  required  (de‚Äê
                     fault).

              [1mfull   [22mHandle  the  full [1mYCbCr Matrix [22mheader with all video color spaces supported by libass and mpv. This
                     might lead to bad breakages in corner cases and is not strictly  needed  for  compatibility  (hope‚Äê
                     fully), which is why this is not default.

              [1mforce-601[0m
                     Force BT.601->BT.709 mangling, regardless of subtitle headers or video color space.

              [1mno     [22mDisable color mangling completely. All colors are RGB.

              Choosing anything other than [1mno [22mwill make the subtitle color depend on the video color space, and it's for
              example  in theory not possible to reuse a subtitle script with another video file. The [1m--sub-ass-override[0m
              option doesn't affect how this option is interpreted.

       [1m--stretch-dvd-subs=<yes|no>[0m
              Stretch DVD subtitles when playing anamorphic videos for better looking fonts on badly mastered DVDs. This
              switch has no effect when the video is stored with square pixels - which for DVD input cannot be the  case
              though.

              Many studios tend to use bitmap fonts designed for square pixels when authoring DVDs, causing the fonts to
              look  stretched  on playback on DVD players. This option fixes them, however at the price of possibly mis‚Äê
              aligning some subtitles (e.g. sign translations).

              Disabled by default.

       [1m--stretch-image-subs-to-screen=<yes|no>[0m
              Stretch DVD and other image subtitles to the screen, ignoring the video margins. This has a similar effect
              as [1m--sub-use-margins [22mfor text subtitles, except that the text itself will  be  stretched,  not  only  just
              repositioned. (At least in general it is unavoidable, as an image bitmap can in theory consist of a single
              bitmap covering the whole screen, and the player won't know where exactly the text parts are located.)

              This option does not display subtitles correctly. Use with care.

              Disabled by default.

       [1m--image-subs-video-resolution=<yes|no>[0m
              Override  the  image  subtitle  resolution with the video resolution (default: no). Normally, the subtitle
              canvas is fit into the video canvas (e.g. letterboxed). Setting this option uses the video size as  subti‚Äê
              tle  canvas size. Can be useful to test broken subtitles, which often happen when the video was trancoded,
              while attempting to keep the old subtitles.

       [1m--sub-ass, --no-sub-ass[0m
              Render ASS subtitles natively (enabled by default).

              [1mNOTE:[0m
                 This has been deprecated by [1m--sub-ass-override=strip[22m. You also may need [1m--embeddedfonts=no [22mto  get  the
                 same  behavior. Also, using [1m--sub-ass-override=style [22mshould give better results without breaking subti‚Äê
                 tles too much.

              If [1m--no-sub-ass [22mis specified, all tags and style declarations are stripped and  ignored  on  display.  The
              subtitle renderer uses the font style as specified by the [1m--sub- [22moptions instead.

              [1mNOTE:[0m
                 Using  [1m--no-sub-ass  [22mmay  lead to incorrect or completely broken rendering of ASS/SSA subtitles. It can
                 sometimes be useful to forcibly override the styling of ASS subtitles, but should be  avoided  in  gen‚Äê
                 eral.

       [1m--sub-auto=<no|exact|fuzzy|all>, --no-sub-auto[0m
              Load  additional subtitle files matching the video filename. The parameter specifies how external subtitle
              files are matched. [1mexact [22mis enabled by default.

              [1mno     [22mDon't automatically load external subtitle files.

              [1mexact  [22mLoad the media filename with subtitle file extension and possibly language suffixes (default).

              [1mfuzzy  [22mLoad all subs containing the media filename.

              [1mall    [22mLoad all subs in the current and [1m--sub-file-paths [22mdirectories.

       [1m--sub-auto-exts=ext1,ext2,...[0m
              Subtitle extentions to try and match when using [1m--sub-auto[22m. Note that modifying this list will also affect
              what mpv recognizes as subtitles when using drag and drop.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

       [1m--sub-codepage=<codepage>[0m
              You can use this option to specify the subtitle codepage. uchardet will be used to guess the charset.  (If
              mpv was not compiled with uchardet, then [1mutf-8 [22mis the effective default.)

              The default value for this option is [1mauto[22m, which enables autodetection.

              The following steps are taken to determine the final codepage, in order:

              ‚Ä¢ if the specific codepage has a [1m+[22m, use that codepage

              ‚Ä¢ if the data looks like UTF-8, assume it is UTF-8

              ‚Ä¢ if [1m--sub-codepage [22mis set to a specific codepage, use that

              ‚Ä¢ run uchardet, and if successful, use that

              ‚Ä¢ otherwise, use [1mUTF-8-BROKEN[0m

                 Examples

                 ‚Ä¢ [1m--sub-codepage=latin2 [22mUse Latin 2 if input is not UTF-8.

                 ‚Ä¢ [1m--sub-codepage=+cp1250 [22mAlways force recoding to cp1250.

              The  pseudo codepage [1mUTF-8-BROKEN [22mis used internally. If it's set, subtitles are interpreted as UTF-8 with
              "Latin 1" as fallback for bytes which are not valid UTF-8 sequences. iconv is never involved in this mode.

              [1mNOTE:[0m
                 This works for text subtitle files only. Other types of  subtitles  (in  particular  subtitles  in  mkv
                 files) are always assumed to be UTF-8.

       [1m--sub-stretch-durations=<yes|no>[0m
              Stretch  a  subtitle duration so it ends when the next one starts.  Should help with subtitles which erro‚Äê
              neously have zero durations.

              [1mNOTE:[0m
                 Only applies to text subtitles.

       [1m--sub-fix-timing=<yes|no>[0m
              Adjust subtitle timing is to remove minor gaps or overlaps between subtitles (if the difference is smaller
              than 210 ms, the gap or overlap is removed).

       [1m--sub-forced-events-only=<yes|no>[0m
              Enabling this displays only forced events within subtitle streams. Only some bitmap subtitle formats (such
              as DVD or PGS) are capable of having a mixture of forced and unforced events within the  stream.  Enabling
              this on text subtitles will cause no subtitles to be displayed (default: [1mno[22m).

       [1m--sub-fps=<rate>[0m
              Specify the framerate of the subtitle file (default: video fps). Affects text subtitles only.

              [1mNOTE:[0m
                 [1m<rate>  [22m>  video  fps  speeds  the  subtitles up for frame-based subtitle files and slows them down for
                 time-based ones.

              See also: [1m--sub-speed[22m.

       [1m--sub-gauss=<0.0-3.0>[0m
              Apply Gaussian blur to image subtitles (default: 0). This can help  to  make  pixelated  DVD/Vobsubs  look
              nicer. A value other than 0 also switches to software subtitle scaling. Might be slow.

              [1mNOTE:[0m
                 Never applied to text subtitles.

       [1m--sub-gray[0m
              Convert image subtitles to grayscale. Can help to make yellow DVD/Vobsubs look nicer.

              [1mNOTE:[0m
                 Never applied to text subtitles.

       [1m--sub-file-paths=<path-list>[0m
              Specify  extra  directories to search for subtitles matching the video.  Multiple directories can be sepa‚Äê
              rated by ":" (";" on Windows).  Paths can be relative or absolute. Relative paths are interpreted relative
              to video file directory.  If the file is a URL, only absolute paths  and  [1msub  [22mconfiguration  subdirectory
              will be scanned.

                 Example

                        Assuming  that  [1m/path/to/video/video.avi  [22mis played and [1m--sub-file-paths=sub:subtitles [22mis speci‚Äê
                        fied, mpv searches for subtitle files in these directories:

                 ‚Ä¢ [1m/path/to/video/[0m

                 ‚Ä¢ [1m/path/to/video/sub/[0m

                 ‚Ä¢ [1m/path/to/video/subtitles/[0m

                 ‚Ä¢ the [1msub [22mconfiguration subdirectory (usually [1m~/.config/mpv/sub/[22m)

              This is a path list option. See [4mList[24m [4mOptions[24m for details.

       [1m--sub-visibility, --no-sub-visibility[0m
              Can be used to disable display of subtitles, but still select and decode them.

       [1m--secondary-sub-visibility, --no-secondary-sub-visibility[0m
              Can be used to disable display of secondary subtitles, but still select and decode them.

       [1m--sub-clear-on-seek[0m
              (Obscure, rarely useful.) Can be used to play broken mkv files with duplicate ReadOrder fields.  ReadOrder
              is  the  first field in a Matroska-style ASS subtitle packets. It should be unique, and libass uses it for
              fast elimination of duplicates. This option disables caching of subtitles across seeks, so  after  a  seek
              libass can't eliminate subtitle packets with the same ReadOrder as earlier packets.

       [1m--teletext-page=<1-999>[0m
              This works for [1mdvb_teletext [22msubtitle streams, and if FFmpeg has been compiled with support for it.

       [1m--sub-past-video-end[0m
              After the last frame of video, if this option is enabled, subtitles will continue to update based on audio
              timestamps. Otherwise, the subtitles for the last video frame will stay onscreen.

              Default: disabled

       [1m--sub-font=<name>[0m
              Specify  font  to  use  for  subtitles  that  do  not themselves specify a particular font. The default is
              [1msans-serif[22m.

                 Examples

                 ‚Ä¢ [1m--sub-font='Bitstream Vera Sans'[0m

                 ‚Ä¢ [1m--sub-font='Comic Sans MS'[0m

              [1mNOTE:[0m
                 The [1m--sub-font [22moption (and many other style related [1m--sub- [22moptions) are ignored when ASS-subtitles  are
                 rendered, unless the [1m--no-sub-ass [22moption is specified.

                 This used to support fontconfig patterns. Starting with libass 0.13.0, this stopped working.

       [1m--sub-font-size=<size>[0m
              Specify  the  sub  font  size. The unit is the size in scaled pixels at a window height of 720. The actual
              pixel size is scaled with the window height: if the window height is larger or smaller than 720,  the  ac‚Äê
              tual size of the text increases or decreases as well.

              Default: 55.

       [1m--sub-back-color=<color>[0m
              See  [1m--sub-color[22m.  Color  used for sub text background. You can use [1m--sub-shadow-offset [22mto change its size
              relative to the text.

       [1m--sub-blur=<0..20.0>[0m
              Gaussian blur factor. 0 means no blur applied (default).

       [1m--sub-bold=<yes|no>[0m
              Format text on bold.

       [1m--sub-italic=<yes|no>[0m
              Format text on italic.

       [1m--sub-border-color=<color>[0m
              See [1m--sub-color[22m. Color used for the sub font border.

       [1m--sub-border-size=<size>[0m
              Size of the sub font border in scaled pixels (see [1m--sub-font-size [22mfor details). A value of 0 disables bor‚Äê
              ders.

              Default: 3.

       [1m--sub-color=<color>[0m
              Specify the color used for unstyled text subtitles.

              The color is specified in the form [1mr/g/b[22m, where each color component is specified as number in  the  range
              0.0 to 1.0. It's also possible to specify the transparency by using [1mr/g/b/a[22m, where the alpha value 0 means
              fully transparent, and 1.0 means opaque. If the alpha component is not given, the color is 100% opaque.

              Passing a single number to the option sets the sub to gray, and the form [1mgray/a [22mlets you specify alpha ad‚Äê
              ditionally.

                 Examples

                 ‚Ä¢ [1m--sub-color=1.0/0.0/0.0 [22mset sub to opaque red

                 ‚Ä¢ [1m--sub-color=1.0/0.0/0.0/0.75 [22mset sub to opaque red with 75% alpha

                 ‚Ä¢ [1m--sub-color=0.5/0.75 [22mset sub to 50% gray with 75% alpha

              Alternatively,  the  color  can  be specified as a RGB hex triplet in the form [1m#RRGGBB[22m, where each 2-digit
              group expresses a color value in the range 0 ([1m00[22m) to 255 ([1mFF[22m). For example, [1m#FF0000 [22mis red.  This is simi‚Äê
              lar to web colors. Alpha is given with [1m#AARRGGBB[22m.

                 Examples

                 ‚Ä¢ [1m--sub-color='#FF0000' [22mset sub to opaque red

                 ‚Ä¢ [1m--sub-color='#C0808080' [22mset sub to 50% gray with 75% alpha

       [1m--sub-margin-x=<size>[0m
              Left and right screen margin for the subs in scaled pixels (see [1m--sub-font-size [22mfor details).

              This option specifies the distance of the sub to the left, as well as at which  distance  from  the  right
              border long sub text will be broken.

              Default: 25.

       [1m--sub-margin-y=<size>[0m
              Top and bottom screen margin for the subs in scaled pixels (see [1m--sub-font-size [22mfor details).

              This option specifies the vertical margins of unstyled text subtitles.  If you just want to raise the ver‚Äê
              tical subtitle position, use [1m--sub-pos[22m.

              Default: 22.

       [1m--sub-align-x=<left|center|right>[0m
              Control to which corner of the screen text subtitles should be aligned to (default: [1mcenter[22m).

              Never applied to ASS subtitles, except in [1m--no-sub-ass [22mmode. Likewise, this does not apply to image subti‚Äê
              tles.

       [1m--sub-align-y=<top|center|bottom>[0m
              Vertical position (default: [1mbottom[22m).  Details see [1m--sub-align-x[22m.

       [1m--sub-justify=<auto|left|center|right>[0m
              Control how multi line subs are justified irrespective of where they are aligned (default: [1mauto [22mwhich jus‚Äê
              tifies as defined by [1m--sub-align-x[22m).  Left justification is recommended to make the subs easier to read as
              it is easier for the eyes.

       [1m--sub-ass-justify=<yes|no>[0m
              Applies justification as defined by [1m--sub-justify [22mon ASS subtitles if [1m--sub-ass-override [22mis not set to [1mno[22m.
              Default: [1mno[22m.

       [1m--sub-shadow-color=<color>[0m
              See [1m--sub-color[22m. Color used for sub text shadow.

              [1mNOTE:[0m
                 ignored  when [1m--sub-back-color [22mis specified (or more exactly: when that option is not set to completely
                 transparent).

       [1m--sub-shadow-offset=<size>[0m
              Displacement of the sub text shadow in scaled pixels (see [1m--sub-font-size [22mfor details). A value of 0  dis‚Äê
              ables shadows.

              Default: 0.

       [1m--sub-spacing=<size>[0m
              Horizontal sub font spacing in scaled pixels (see [1m--sub-font-size [22mfor details). This value is added to the
              normal letter spacing. Negative values are allowed.

              Default: 0.

       [1m--sub-filter-sdh=<yes|no>[0m
              Applies  filter  removing  subtitle additions for the deaf or hard-of-hearing (SDH).  This is intended for
              English, but may in part work for other languages too.  The intention is that it can be always enabled  so
              may not remove all parts added.  It removes speaker labels (like MAN:), upper case text in parentheses and
              any text in brackets.

              Default: [1mno[22m.

       [1m--sub-filter-sdh-harder=<yes|no>[0m
              Do harder SDH filtering (if enabled by [1m--sub-filter-sdh[22m).  Will also remove speaker labels and text within
              parentheses using both lower and upper case letters.

              Default: [1mno[22m.

       [1m--sub-filter-regex-...=...[0m
              Set  a  list  of regular expressions to match on text subtitles, and remove any lines that match (default:
              empty). This is a string list option. See [4mList[24m [4mOptions[24m for details. Normally, you  should  use  [1m--sub-fil‚Äê[0m
              [1mter-regex-append=<regex>[22m,  where  each  option use will append a new regular expression, without having to
              fight escaping problems.

              List items are matched in order. If a regular expression matches, the process is stopped, and the subtitle
              line is discarded. The text matched against is, by default, the [1mText [22mfield of ASS events (if the  subtitle
              format  is different, it is always converted). This may include formatting tags. Matching is case-insensi‚Äê
              tive, but how this is done depends on the libc, and most likely works in ASCII only. It does not  work  on
              bitmap/image subtitles. Unavailable on inferior OSes (requires POSIX regex support).

                 Example

                        [1m--sub-filter-regex-append=opensubtitles\.org [22mfilters some ads.

              Technically,  using  a  list for matching is redundant, since you could just use a single combined regular
              expression. But it helps with diagnosis, ease of use, and temporarily  disabling  or  enabling  individual
              filters.

              [1mWARNING:[0m
                 This  is  experimental.  The semantics most likely will change, and if you use this, you should be pre‚Äê
                 pared to update the option later. Ideas include replacing the regexes with a very primitive  and  small
                 subset of sed, or some method to control case-sensitivity.

       [1m--sub-filter-jsre-...=...[0m
              Same  as  [1m--sub-filter-regex  [22mbut  with JavaScript regular expressions.  Shares/affected-by all [1m--sub-fil‚Äê[0m
              [1mter-regex-* [22mcontrol options (see below), and also experimental. Requires only JavaScript support.

       [1m--sub-filter-regex-plain=<yes|no>[0m
              Whether to first convert the ASS "Text" field to plain-text (default: no).  This strips ASS tags  and  ap‚Äê
              plies  ASS  directives,  like [1m\N [22mto new-line.  If the result is multi-line then the regexp anchors [1m^ [22mand [1m$[0m
              match each line, but still any match discards all lines.

       [1m--sub-filter-regex-warn=<yes|no>[0m
              Log dropped lines with warning log level, instead of verbose (default: no).  Helpful for testing.

       [1m--sub-filter-regex-enable=<yes|no>[0m
              Whether to enable regex filtering (default: yes). Note that if no regexes  are  added  to  the  [1m--sub-fil‚Äê[0m
              [1mter-regex [22mlist, setting this option to [1myes [22mhas no effect. It's meant to easily disable or enable filtering
              temporarily.

       [1m--sub-create-cc-track=<yes|no>[0m
              For  every  video  stream,  create  a closed captions track (default: no). The only purpose is to make the
              track available for selection at the start of playback, instead of creating it lazily. This  applies  only
              to  [1mATSC  A53 Part 4 Closed Captions [22m(displayed by mpv as subtitle tracks using the codec [1meia_608[22m). The CC
              track is marked "default" and selected according to the normal subtitle track  selection  rules.  You  can
              then use [1m--sid [22mto explicitly select the correct track too.

              If the video stream contains no closed captions, or if no video is being decoded, the CC track will remain
              empty and will not show any text.

       [1m--sub-font-provider=<auto|none|fontconfig>[0m
              Which  libass  font  provider  backend  to  use  (default: auto). [1mauto [22mwill attempt to use the native font
              provider: fontconfig on Linux, CoreText on macOS, DirectWrite on Windows. [1mfontconfig [22mforces fontconfig, if
              libass was built with support (if not, it behaves like [1mnone[22m).

              The [1mnone [22mfont provider effectively disables system fonts. It will still attempt to use embedded fonts (un‚Äê
              less [1m--embeddedfonts=no [22mis set; this is the same behavior as with all other font  providers),  [1msubfont.ttf[0m
              if  provided, and fonts in  the [1mfonts [22msub-directory if provided. (The fallback is more strict than that of
              other font providers, and if a font name does not match, it may prefer not to render any  text  that  uses
              the missing font.)

       [1m--sub-fonts-dir=<path>[0m
              Font  files  in  this directory are used by mpv/libass for subtitles. Useful if you do not want to install
              fonts to your system. Note that files in this directory are loaded into memory before being used  by  mpv.
              If  you  have a lot of fonts, consider using fonts.conf (see [4mFILES[24m section) to include additional mpv user
              settings.

              If this option is not specified, [1m~~/fonts [22mwill be used by default.

   [1mWindow[0m
       [1m--title=<string>[0m
              Set the window title. This is used for the video window, and if possible, also sets the audio  stream  ti‚Äê
              tle.

              Properties are expanded. (See [4mProperty[24m [4mExpansion[24m.)

              [1mWARNING:[0m
                 There is a danger of this causing significant CPU usage, depending on the properties used. Changing the
                 window title is often a slow operation, and if the title changes every frame, playback can be ruined.

       [1m--screen=<default|0-32>[0m
              In  multi-monitor  configurations (i.e. a single desktop that spans across multiple displays), this option
              tells mpv which screen to display the video on.

                 Note (X11)

                        This option does not work properly with all window managers. In these cases, you can try to  use
                        [1m--geometry  [22mto  position  the window explicitly. It's also possible that the window manager pro‚Äê
                        vides native features to control which screens application windows should use.

                 Note (Wayland)

                        This option does not actually work on wayland since window placement  is  not  allowed.  However
                        setting  this option does influence mpv's initial guess at finding an output which may be useful
                        for options like [1m--geometry [22mor [1m--autofit [22mwhich depend on the monitor resolution.

              See also [1m--fs-screen[22m.

       [1m--screen-name=<string>[0m
              In multi-monitor configurations, this option tells mpv which screen to display the video on based  on  the
              screen  name  from the video backend. The same caveats in the [1m--screen [22moption also apply here. This option
              is ignored and does nothing if [1m--screen [22mis explicitly set.

       [1m--fullscreen, --fs[0m
              Fullscreen playback.

       [1m--fs-screen=<all|current|0-32>[0m
              In multi-monitor configurations (i.e. a single desktop that spans across multiple displays),  this  option
              tells  mpv  which  screen to go fullscreen to.  If [1mcurrent [22mis used mpv will fallback on what the user pro‚Äê
              vided with the [1mscreen [22moption.

                 Note (X11)

                        This  option  works  properly  only   with   window   managers   which   understand   the   EWMH
                        [1m_NET_WM_FULLSCREEN_MONITORS [22mhint.

                 Note (macOS)

                        [1mall [22mdoes not work on macOS and will behave like [1mcurrent[22m.

              See also [1m--screen[22m.

       [1m--fs-screen-name=<string>[0m
              In  multi-monitor  configurations,  this  option  tells  mpv which screen to go fullscreen to based on the
              screen name from the video backend. The same caveats in the [1m--fs-screen [22moption also apply here.  This  op‚Äê
              tion is ignored and does nothing if [1m--fs-screen [22mis explicitly set.

       [1m--keep-open=<yes|no|always>[0m
              Do  not  terminate  when  playing  or  seeking beyond the end of the file, and there is no next file to be
              played (and [1m--loop [22mis not used).  Instead, pause the player. When trying to seek beyond end of  the  file,
              the player will attempt to seek to the last frame.

              Normally, this will act like [1mset pause yes [22mon EOF, unless the [1m--keep-open-pause=no [22moption is set.

              The following arguments can be given:

              [1mno     [22mIf the current file ends, go to the next file or terminate.  (Default.)

              [1myes    [22mDon't  terminate if the current file is the last playlist entry.  Equivalent to [1m--keep-open [22mwithout
                     arguments.

              [1malways [22mLike [1myes[22m, but also applies to files before the last playlist entry. This means playback will  never
                     automatically advance to the next file.

              [1mNOTE:[0m
                 This  option  is not respected when using [1m--frames[22m. Explicitly skipping to the next file if the binding
                 uses [1mforce [22mwill terminate playback as well.

                 Also, if errors or unusual circumstances happen, the player can quit anyway.

              Since mpv 0.6.0, this doesn't pause if there is a next file in the playlist, or the  playlist  is  looped.
              Approximately, this will pause when the player would normally exit, but in practice there are corner cases
              in  which  this is not the case (e.g. [1mmpv --keep-open file.mkv /dev/null [22mwill play file.mkv normally, then
              fail to open [1m/dev/null[22m, then exit). (In mpv 0.8.0, [1malways [22mwas introduced, which restores  the  old  behav‚Äê
              ior.)

       [1m--keep-open-pause=<yes|no>[0m
              If set to [1mno[22m, instead of pausing when [1m--keep-open [22mis active, just stop at end of file and continue playing
              forward when you seek backwards until end where it stops again. Default: [1myes[22m.

       [1m--image-display-duration=<seconds|inf>[0m
              If  the  current  file is an image, play the image for the given amount of seconds (default: 1). [1minf [22mmeans
              the file is kept open forever (until the user stops playback manually).

              Unlike [1m--keep-open[22m, the player is not paused, but simply continues playback until the  time  has  elapsed.
              (It should not use any resources during "playback".)

              This affects image files, which are defined as having only 1 video frame and no audio. The player may rec‚Äê
              ognize  certain  non-images as images, for example if [1m--length [22mis used to reduce the length to 1 frame, or
              if you seek to the last frame.

              This option does not affect the framerate used for [1mmf:// [22mor [1m--merge-files[22m. For that, use [1m--mf-fps [22minstead.

              Setting [1m--image-display-duration [22mhides the OSC and does not track playback time on the  command-line  out‚Äê
              put,  and  also does not duplicate the image frame when encoding. To force the player into "dumb mode" and
              actually count out seconds, or to duplicate the image when encoding, you need to use [1m--demuxer=lavf  --de‚Äê[0m
              [1mmuxer-lavf-o=loop=1[22m, and use [1m--length [22mor [1m--frames [22mto stop after a particular time.

       [1m--force-window=<yes|no|immediate>[0m
              Create  a  video output window even if there is no video. This can be useful when pretending that mpv is a
              GUI application. Currently, the window always has the size 640x480, and is subject to  [1m--geometry[22m,  [1m--aut‚Äê[0m
              [1mofit[22m, and similar options.

              [1mWARNING:[0m
                 The  window  is created only after initialization (to make sure default window placement still works if
                 the video size is different from the [1m--force-window [22mdefault window size). This can be a problem if ini‚Äê
                 tialization doesn't work perfectly, such as when opening URLs with bad network connection,  or  opening
                 broken  video  files.  The [1mimmediate [22mmode can be used to create the window always on program start, but
                 this may cause other issues.

       [1m--taskbar-progress, --no-taskbar-progress[0m
              (Windows only) Enable/disable playback progress rendering in taskbar (Windows 7 and above).

              Enabled by default.

       [1m--snap-window[0m
              (Windows only) Snap the player window to screen edges.

       [1m--drag-and-drop=<no|auto|replace|append>[0m
              (X11, Wayland and Windows only) Controls the default behavior of drag and drop on platforms  that  support
              this.   [1mauto [22mwill obey what the underlying os/platform gives mpv. Typically, holding shift during the drag
              and drop will append the item to the playlist. Otherwise, it will completely replace it. [1mreplace  [22mand  [1map‚Äê[0m
              [1mpend  [22malways force replacing and appending to the playlist respectively. [1mno [22mdisables all drag and drop be‚Äê
              havior.

       [1m--ontop[0m
              Makes the player window stay on top of other windows.

              On Windows, if combined with fullscreen mode, this causes mpv to be treated as exclusive fullscreen window
              that bypasses the Desktop Window Manager.

       [1m--ontop-level=<window|system|desktop|level>[0m
              (macOS only) Sets the level of an ontop window (default: window).

              [1mwindow [22mOn top of all other windows.

              [1msystem [22mOn top of system elements like Taskbar, Menubar and Dock.

              [1mdesktop[0m
                     On top of the Desktop behind windows and Desktop icons.

              [1mlevel  [22mA level as integer.

       [1m--focus-on-open, --no-focus-on-open[0m
              (macOS only) Focus the video window on creation and makes it the front most window. This is on by default.

       [1m--window-corners=<default|donotround|round|roundsmall>[0m
              (Windows only) Set the preference for window corner rounding.

              [1mdefault[0m
                     Let the system decide whether or not to round window corners

              [1mdonotround[0m
                     Never round window corners

              [1mround  [22mRound the corners if appropriate

              [1mroundsmall[0m
                     Round the corners if appropriate, with a small radius

       [1m--border, --no-border[0m
              Play video with window border and decorations. Since this is on by default, use [1m--no-border [22mto disable the
              standard window decorations.

       [1m--title-bar, --no-title-bar[0m
              (Windows only) Play video with the window title bar. Since this is on by default,  use  --no-title-bar  to
              hide the title bar. The --no-border option takes precedence.

       [1m--on-all-workspaces[0m
              (X11 and macOS only) Show the video window on all virtual desktops.

       [1m--geometry=<[W[xH]][+-x+-y][/WS]>, --geometry=<x:y>[0m
              Adjust  the initial window position or size. [1mW [22mand [1mH [22mset the window size in pixels. [1mx [22mand [1my [22mset the window
              position, measured in pixels from the top-left corner of the screen to the top-left corner  of  the  image
              being  displayed. If a percentage sign ([1m%[22m) is given after the argument, it turns the value into a percent‚Äê
              age of the screen size in that direction.  Positions are specified similar to the standard X11  [1m--geometry[0m
              option  format,  in  which  e.g. +10-50 means "place 10 pixels from the left border and 50 pixels from the
              lower border" and "--20+-10" means "place 20 pixels beyond the right and 10 pixels beyond the top border".
              A trailing [1m/ [22mfollowed by an integer denotes on which workspace (virtual desktop) the window should  appear
              (X11 only).

              If an external window is specified using the [1m--wid [22moption, this option is ignored.

              The  coordinates  are  relative  to the screen given with [1m--screen [22mfor the video output drivers that fully
              support [1m--screen[22m.

              [1mNOTE:[0m
                 Generally only supported by GUI VOs. Ignored for encoding.

                 Note (macOS)

                        On macOS, the origin of the screen coordinate system is located on the bottom-left  corner.  For
                        instance, [1m0:0 [22mwill place the window at the bottom-left of the screen.

                 Note (X11)

                        This option does not work properly with all window managers.

                 Examples

                 [1m50:40  [22mPlaces the window at x=50, y=40.

                 [1m50%:50%[0m
                        Places the window in the middle of the screen.

                 [1m100%:100%[0m
                        Places the window at the bottom right corner of the screen.

                 [1m50%    [22mSets  the window width to half the screen width. Window height is set so that the window has the
                        video aspect ratio.

                 [1m50%x50%[0m
                        Forces the window width and height to half the screen width and height. Will show black  borders
                        to compensate for the video aspect ratio (with most VOs and without [1m--no-keepaspect[22m).

                 [1m50%+10+10/2[0m
                        Sets the window to half the screen widths, and positions it 10 pixels below/left of the top left
                        corner of the screen, on the second workspace.

              See  also  [1m--autofit [22mand [1m--autofit-larger [22mfor fitting the window into a given size without changing aspect
              ratio.

       [1m--autofit=<[W[xH]]>[0m
              Set the initial window size to a maximum size specified by [1mWxH[22m, without changing the window's  aspect  ra‚Äê
              tio.  The  size is measured in pixels, or if a number is followed by a percentage sign ([1m%[22m), in percents of
              the screen size.

              This option never changes the aspect ratio of the window. If the aspect  ratio  mismatches,  the  window's
              size is reduced until it fits into the specified size.

              Window position is not taken into account, nor is it modified by this option (the window manager still may
              place the window differently depending on size). Use [1m--geometry [22mto change the window position. Its effects
              are applied after this option.

              See [1m--geometry [22mfor details how this is handled with multi-monitor setups.

              Use  [1m--autofit-larger [22minstead if you just want to limit the maximum size of the window, rather than always
              forcing a window size.

              Use [1m--geometry [22mif you want to force both window width and height to a specific size.

              [1mNOTE:[0m
                 Generally only supported by GUI VOs. Ignored for encoding.

                 Examples

                 [1m70%    [22mMake the window width 70% of the screen size, keeping aspect ratio.

                 [1m1000   [22mSet the window width to 1000 pixels, keeping aspect ratio.

                 [1m70%x60%[0m
                        Make the window as large as possible, without being wider than  70%  of  the  screen  width,  or
                        higher than 60% of the screen height.

       [1m--autofit-larger=<[W[xH]]>[0m
              This  option behaves exactly like [1m--autofit[22m, except the window size is only changed if the window would be
              larger than the specified size.

                 Example

                 [1m90%x80%[0m
                        If the video is larger than 90% of the screen width or 80% of the screen height, make the window
                        smaller until either its width is 90% of the screen, or its height is 80% of the screen.

       [1m--autofit-smaller=<[W[xH]]>[0m
              This option behaves exactly like [1m--autofit[22m, except that it sets the minimum size of the  window  (just  as
              [1m--autofit-larger [22msets the maximum).

                 Example

                 [1m500x500[0m
                        Make  the window at least 500 pixels wide and 500 pixels high (depending on the video aspect ra‚Äê
                        tio, the width or height will be larger than 500 in order to keep the aspect ratio the same).

       [1m--window-scale=<factor>[0m
              Resize the video window to a multiple (or fraction) of the video  size.  This  option  is  applied  before
              [1m--autofit [22mand other options are applied (so they override this option).

              For example, [1m--window-scale=0.5 [22mwould show the window at half the video size.

       [1m--window-minimized=<yes|no>[0m
              Whether  the video window is minimized or not. Setting this will minimize, or unminimize, the video window
              if the current VO supports it. Note that some VOs may support minimization while  not  supporting  unmini‚Äê
              mization (eg: Wayland).

              Whether  this  option  and [1m--window-maximized [22mwork on program start or at runtime, and whether they're (at
              runtime) updated to reflect the actual window state, heavily depends on the VO and the  windowing  system.
              Some VOs simply do not implement them or parts of them, while other VOs may be restricted by the windowing
              systems (especially Wayland).

       [1m--window-maximized=<yes|no>[0m
              Whether  the video window is maximized or not. Setting this will maximize, or unmaximize, the video window
              if the current VO supports it. See [1m--window-minimized [22mfor further remarks.

       [1m--cursor-autohide=<number|no|always>[0m
              Make mouse cursor automatically hide after given number of milliseconds (default: 1000 ms). [1mno  [22mwill  dis‚Äê
              able cursor autohide. [1malways [22mmeans the cursor will stay hidden.

       [1m--cursor-autohide-fs-only[0m
              If  this option is given, the cursor is always visible in windowed mode. In fullscreen mode, the cursor is
              shown or hidden according to [1m--cursor-autohide[22m.

       [1m--force-rgba-osd-rendering[0m
              Change how some video outputs render the OSD and text subtitles. This does not change  appearance  of  the
              subtitles and only has performance implications. For VOs which support native ASS rendering (like [1mgpu[22m, [1mvd‚Äê[0m
              [1mpau[22m,  [1mdirect3d[22m),  this  can be slightly faster or slower, depending on GPU drivers and hardware. For other
              VOs, this just makes rendering slower.

       [1m--force-render[0m
              Forces mpv to always render frames regardless of the visibility of the window. Currently only affects  X11
              and Wayland VOs since they are the only ones that have this optimization (i.e. everything else always ren‚Äê
              ders regardless of visibility).

       [1m--force-window-position[0m
              Forcefully  move mpv's video output window to default location whenever there is a change in video parame‚Äê
              ters, video stream or file. This used to be the default behavior. Currently only affects X11 and SDL VOs.

       [1m--auto-window-resize=<yes|no>[0m
              (Wayland, Win32, and X11) By default, mpv will automatically resize itself if  the  video's  size  changes
              (i.e. advancing forward in a playlist). Setting this to [1mno [22mdisables this behavior so the window size never
              changes automatically. This option does not have any impact on the [1m--autofit [22mor [1m--geometry [22moptions.

       [1m--no-keepaspect, --keepaspect[0m
              [1m--no-keepaspect  [22mwill  always  stretch the video to window size, and will disable the window manager hints
              that force the window aspect ratio.  (Ignored in fullscreen mode.)

       [1m--no-keepaspect-window, --keepaspect-window[0m
              [1m--keepaspect-window [22m(the default) will lock the window size to the  video  aspect.  [1m--no-keepaspect-window[0m
              disables  this  behavior,  and  will  instead  add  black bars if window aspect and video aspect mismatch.
              Whether this actually works depends on the VO backend.  (Ignored in fullscreen mode.)

       [1m--monitoraspect=<ratio>[0m
              Set the aspect ratio of your monitor or TV screen. A value of 0 disables a previous setting (e.g.  in  the
              config file). Overrides the [1m--monitorpixelaspect [22msetting if enabled.

              See also [1m--monitorpixelaspect [22mand [1m--video-aspect-override[22m.

                 Examples

                 ‚Ä¢ [1m--monitoraspect=4:3  [22mor [1m--monitoraspect=1.3333[0m

                 ‚Ä¢ [1m--monitoraspect=16:9 [22mor [1m--monitoraspect=1.7777[0m

       [1m--hidpi-window-scale, --no-hidpi-window-scale[0m
              (macOS,  Windows,  X11, and Wayland only) Scale the window size according to the backing scale factor (de‚Äê
              fault: yes).  On regular HiDPI resolutions the window opens with double the size but appears as having the
              same size as on non-HiDPI resolutions.

       [1m--native-fs, --no-native-fs[0m
              (macOS only) Uses the native fullscreen mechanism of the OS (default: yes).

       [1m--monitorpixelaspect=<ratio>[0m
              Set the aspect of a single pixel of your monitor or TV screen (default: 1). A value of 1 means square pix‚Äê
              els (correct for (almost?) all LCDs). See also [1m--monitoraspect [22mand [1m--video-aspect-override[22m.

       [1m--stop-screensaver=<yes|no|always>[0m
              Turns off the screensaver (or screen blanker and similar mechanisms) at startup and turns it on  again  on
              exit  (default:  yes).  When using [1myes[22m, the screensaver will re-enable when playback is not active. [1malways[0m
              will always disable the screensaver. Note that stopping the screensaver is only possible if a video output
              is available (i.e. there is an open mpv window).

              This is not supported on all video outputs or platforms. Sometimes it is implemented, but  does  not  work
              (especially with Linux "desktops"). Read the [4mDisabling[24m [4mScreensaver[24m section very carefully.

       [1m--wid=<ID>[0m
              This tells mpv to attach to an existing window. If a VO is selected that supports this option, it will use
              that window for video output. mpv will scale the video to the size of this window, and will add black bars
              to compensate if the aspect ratio of the video is different.

              On X11, the ID is interpreted as a [1mWindow [22mon X11. Unlike MPlayer/mplayer2, mpv always creates its own win‚Äê
              dow,  and  sets  the  wid  window  as parent. The window will always be resized to cover the parent window
              fully. The value [1m0 [22mis interpreted specially, and mpv will draw directly on the root window.

              On win32, the ID is interpreted as [1mHWND[22m. Pass it as value  cast  to  [1muint32_t  [22m(all  Windows  handles  are
              32-bit),  this is important as mpv will not accept negative values. mpv will create its own window and set
              the wid window as parent, like with X11.

              On macOS/Cocoa, the ID is interpreted as [1mNSView*[22m. Pass it as value cast to [1mintptr_t[22m. mpv will  create  its
              own  sub-view.  Because macOS does not support window embedding of foreign processes, this works only with
              libmpv, and will crash when used from the command line.

              On Android, the ID is interpreted as [1mandroid.view.Surface[22m. Pass it as a value cast to [1mintptr_t[22m.  Use  with
              [1m--vo=mediacodec_embed  [22mand  [1m--hwdec=mediacodec  [22mfor  direct  rendering  using MediaCodec, or with [1m--vo=gpu[0m
              [1m--gpu-context=android [22m(with or without [1m--hwdec=mediacodec[22m).

       [1m--no-window-dragging[0m
              Don't move the window when clicking on it and moving the mouse pointer.

       [1m--x11-name=<string>[0m
              Set the window class name for X11-based video output methods.

       [1m--x11-netwm=<yes|no|auto>[0m
              (X11 only) Control the use of NetWM protocol features.

              This may or may not help with broken window managers. This provides some  functionality  that  was  imple‚Äê
              mented  by  the  now removed [1m--fstype [22moption.  Actually, it is not known to the developers to which degree
              this option was needed, so feedback is welcome.

              Specifically, [1myes [22mwill force use of NetWM fullscreen support, even if not advertised by the WM.  This  can
              be useful for WMs that are broken on purpose, like XMonad. (XMonad supposedly doesn't advertise fullscreen
              support,  because Flash uses it. Apparently, applications which want to use fullscreen anyway are supposed
              to either ignore the NetWM support hints, or provide a workaround. Shame on XMonad for deliberately break‚Äê
              ing X protocols (as if X isn't bad enough already).

              By default, NetWM support is autodetected ([1mauto[22m).

              This option might be removed in the future.

       [1m--x11-bypass-compositor=<yes|no|fs-only|never>[0m
              If set to [1myes[22m, then ask the compositor to unredirect the mpv window  (default:  [1mfs-only[22m).  This  uses  the
              [1m_NET_WM_BYPASS_COMPOSITOR [22mhint.

              [1mfs-only [22masks the window manager to disable the compositor only in fullscreen mode.

              [1mno  [22msets [1m_NET_WM_BYPASS_COMPOSITOR [22mto 0, which is the default value as declared by the EWMH specification,
              i.e. no change is done.

              [1mnever [22masks the window manager to never disable the compositor.

       [1m--x11-present=<no|auto|yes>[0m
              Whether or not to use presentation statistics from X11's presentation extension (default: [1mauto[22m).

              mpv asks X11 for present events which it then may use for more accurate frame presentation. This only  has
              an effect if [1m--video-sync=display-...  [22mis being used.

              The  auto  option  enumerates  XRandr  providers for autodetection. If amd, radeon, intel, or nouveau (the
              standard x86 Mesa drivers) is found and nvidia is NOT found, presentation feedback is enabled. Other  dri‚Äê
              vers are not assumed to work, so they are not enabled automatically.

              [1myes [22mor [1mno [22mcan still be passed regardless to enable/disable this mechanism in case there is good/bad behav‚Äê
              ior with whatever your combination of hardware/drivers/etc. happens to be.

       [1m--x11-wid-title --no-x11-wid-title[0m
              Whether or not to set the window title when mpv is embedded on X11 (default: [1mno[22m).

   [1mDisc Devices[0m
       [1m--cdda-device=<path>[0m
              Specify the CD device for CDDA playback (default: [1m/dev/cdrom[22m).

       [1m--dvd-device=<path>[0m
              Specify  the  DVD  device or .iso filename (default: [1m/dev/dvd[22m). You can also specify a directory that con‚Äê
              tains files previously copied directly from a DVD (with e.g. vobcopy).

                 Example

                        [1mmpv dvd:// --dvd-device=/path/to/dvd/[0m

       [1m--bluray-device=<path>[0m
              (Blu-ray only) Specify the Blu-ray disc location. Must be a directory with Blu-ray structure.

                 Example

                        [1mmpv bd:// --bluray-device=/path/to/bd/[0m

       [1m--cdda-...[0m
              These options can be used to tune the CD Audio reading feature of mpv.

       [1m--cdda-speed=<value>[0m
              Set CD spin speed.

       [1m--cdda-paranoia=<0-2>[0m
              Set paranoia level. Values other than 0 seem to break playback of anything but the first track.

              [1m0      [22mdisable checking (default)

              [1m1      [22moverlap checking only

              [1m2      [22mfull data correction and verification

       [1m--cdda-sector-size=<value>[0m
              Set atomic read size.

       [1m--cdda-overlap=<value>[0m
              Force minimum overlap search during verification to <value> sectors.

       [1m--cdda-toc-offset=<value>[0m
              Add [1m<value> [22msectors to the values reported when addressing tracks.  May be negative.

       [1m--cdda-skip=<yes|no>[0m
              (Never) accept imperfect data reconstruction.

       [1m--cdda-cdtext=<yes|no>[0m
              Print CD text. This is disabled by default, because it ruins performance with CD-ROM  drives  for  unknown
              reasons.

       [1m--dvd-speed=<speed>[0m
              Try  to  limit  DVD speed (default: 0, no change). DVD base speed is 1385 kB/s, so an 8x drive can read at
              speeds up to 11080 kB/s. Slower speeds make the drive more quiet. For watching DVDs, 2700 kB/s  should  be
              quiet  and  fast enough. mpv resets the speed to the drive default value on close.  Values of at least 100
              mean speed in kB/s. Values less than 100 mean multiples of 1385 kB/s,  i.e.  [1m--dvd-speed=8  [22mselects  11080
              kB/s.

              [1mNOTE:[0m
                 You need write access to the DVD device to change the speed.

       [1m--dvd-angle=<ID>[0m
              Some  DVDs  contain  scenes that can be viewed from multiple angles.  This option tells mpv which angle to
              use (default: 1).

   [1mEqualizer[0m
       [1m--brightness=<-100-100>[0m
              Adjust the brightness of the video signal (default: 0). Not supported by all video output drivers.

       [1m--contrast=<-100-100>[0m
              Adjust the contrast of the video signal (default: 0). Not supported by all video output drivers.

       [1m--saturation=<-100-100>[0m
              Adjust the saturation of the video signal (default: 0). You can get grayscale output with this option. Not
              supported by all video output drivers.

       [1m--gamma=<-100-100>[0m
              Adjust the gamma of the video signal (default: 0). Not supported by all video output drivers.

       [1m--hue=<-100-100>[0m
              Adjust the hue of the video signal (default: 0). You can get a colored negative of the image with this op‚Äê
              tion. Not supported by all video output drivers.

   [1mDemuxer[0m
       [1m--demuxer=<[+]name>[0m
              Force demuxer type. Use a '+' before the name to force it; this will skip some checks.  Give  the  demuxer
              name as printed by [1m--demuxer=help[22m.

       [1m--demuxer-lavf-analyzeduration=<value>[0m
              Maximum length in seconds to analyze the stream properties.

       [1m--demuxer-lavf-probe-info=<yes|no|auto|nostreams>[0m
              Whether  to probe stream information (default: auto). Technically, this controls whether libavformat's [1mav‚Äê[0m
              [1mformat_find_stream_info() [22mfunction is called. Usually it's safer to call it, but it can also make  startup
              slower.

              The [1mauto [22mchoice (the default) tries to skip this for a few know-safe whitelisted formats, while calling it
              for everything else.

              The  [1mnostreams  [22mchoice  only  calls  it  if and only if the file seems to contain no streams after opening
              (helpful in cases when calling the function is needed to detect streams at all, such as with FLV files).

       [1m--demuxer-lavf-probescore=<1-100>[0m
              Minimum required libavformat probe score. Lower values will require less data to be loaded (makes  streams
              start faster), but makes file format detection less reliable. Can be used to force auto-detected libavfor‚Äê
              mat demuxers, even if libavformat considers the detection not reliable enough. (Default: 26.)

       [1m--demuxer-lavf-allow-mimetype=<yes|no>[0m
              Allow  deriving  the  format from the HTTP MIME type (default: yes). Set this to no in case playing things
              from HTTP mysteriously fails, even though the same files work from local disk.

              This is default in order to reduce latency when opening HTTP streams.

       [1m--demuxer-lavf-format=<name>[0m
              Force a specific libavformat demuxer.

       [1m--demuxer-lavf-hacks=<yes|no>[0m
              By default, some formats will be handled differently from other formats by explicitly checking  for  them.
              Most  of  these  compensate for weird or imperfect behavior from libavformat demuxers. Passing [1mno [22mdisables
              these. For debugging and testing only.

       [1m--demuxer-lavf-o=<key>=<value>[,<key>=<value>[,...]][0m
              Pass AVOptions to libavformat demuxer.

              Note, a patch to make the [4mo=[24m unneeded and pass all unknown options through the AVOption system is welcome.
              A full list of AVOptions can be found in the FFmpeg manual. Note that some options may conflict  with  mpv
              options.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                        [1m--demuxer-lavf-o=fflags=+ignidx[0m

       [1m--demuxer-lavf-probesize=<value>[0m
              Maximum  amount  of data to probe during the detection phase. In the case of MPEG-TS this value identifies
              the maximum number of TS packets to scan.

       [1m--demuxer-lavf-buffersize=<value>[0m
              Size of the stream read buffer allocated for libavformat in bytes  (default:  32768).  Lowering  the  size
              could lower latency. Note that libavformat might reallocate the buffer internally, or not fully use all of
              it.

       [1m--demuxer-lavf-linearize-timestamps=<yes|no|auto>[0m
              Attempt to linearize timestamp resets in demuxed streams (default: auto).  This was tested only for single
              audio  streams. It's unknown whether it works correctly for video (but likely won't). Note that the imple‚Äê
              mentation is slightly incorrect either way, and will introduce a discontinuity  by  about  1  codec  frame
              size.

              The [1mauto [22mmode enables this for OGG audio stream. This covers the common and annoying case of OGG web radio
              streams.  Some of these will reset timestamps to 0 every time a new song begins. This breaks the mpv seek‚Äê
              able cache, which can't deal with timestamp resets. Note that FFmpeg/libavformat's seeking API can't  deal
              with  this  either; it's likely that if this option breaks this even more, while if it's disabled, you can
              at least seek within the first song in the stream. Well, you won't get anything useful either way  if  the
              seek is outside of mpv's cache.

       [1m--demuxer-lavf-propagate-opts=<yes|no>[0m
              Propagate  FFmpeg-level  options  to recursively opened connections (default: yes). This is needed because
              FFmpeg will apply these settings to nested AVIO contexts automatically. On  the  other  hand,  this  could
              break in certain situations - it's the FFmpeg API, you just can't win.

              This affects in particular the [1m--timeout [22moption and anything passed with [1m--demuxer-lavf-o[22m.

              If this option is deemed unnecessary at some point in the future, it will be removed without notice.

       [1m--demuxer-mkv-subtitle-preroll=<yes|index|no>[0m
              Try harder to show embedded soft subtitles when seeking somewhere. Normally, it can happen that the subti‚Äê
              tle at the seek target is not shown due to how some container file formats are designed. The subtitles ap‚Äê
              pear  only if seeking before or exactly to the position a subtitle first appears. To make this worse, sub‚Äê
              titles are often timed to appear a very small amount before the associated video frame, so that seeking to
              the video frame typically does not demux the subtitle at that position.

              Enabling this option makes the demuxer start reading data a bit before the seek target, so that  subtitles
              appear correctly. Note that this makes seeking slower, and is not guaranteed to always work. It only works
              if the subtitle is close enough to the seek target.

              Works  with  the internal Matroska demuxer only. Always enabled for absolute and hr-seeks, and this option
              changes behavior with relative or imprecise seeks only.

              You can use the [1m--demuxer-mkv-subtitle-preroll-secs [22moption to specify how much  data  the  demuxer  should
              pre-read  at  most  in order to find subtitle packets that may overlap. Setting this to 0 will effectively
              disable this preroll mechanism. Setting a very large value can make seeking very slow,  and  an  extremely
              large  value would completely reread the entire file from start to seek target on every seek - seeking can
              become slower towards the end of the file. The details are messy, and the value is actually  rounded  down
              to the cluster with the previous video keyframe.

              Some  files,  especially  files  muxed with newer mkvmerge versions, have information embedded that can be
              used to determine what subtitle packets overlap with a seek target. In these cases, mpv  will  reduce  the
              amount  of data read to a minimum. (Although it will still read [4mall[24m data between the cluster that contains
              the first wanted subtitle packet, and the seek target.) If the [1mindex [22mchoice  (which  is  the  default)  is
              specified,  then prerolling will be done only if this information is actually available. If this method is
              used, the maximum amount of data to skip can be  additionally  controlled  by  [1m--demuxer-mkv-subtitle-pre‚Äê[0m
              [1mroll-secs-index [22m(it still uses the value of the option without [1m-index [22mif that is higher).

              See also [1m--hr-seek-demuxer-offset [22moption. This option can achieve a similar effect, but only if hr-seek is
              active. It works with any demuxer, but makes seeking much slower, as it has to decode audio and video data
              instead of just skipping over it.

       [1m--demuxer-mkv-subtitle-preroll-secs=<value>[0m
              See [1m--demuxer-mkv-subtitle-preroll[22m.

       [1m--demuxer-mkv-subtitle-preroll-secs-index=<value>[0m
              See [1m--demuxer-mkv-subtitle-preroll[22m.

       [1m--demuxer-mkv-probe-start-time=<yes|no>[0m
              Check  the start time of Matroska files (default: yes). This simply reads the first cluster timestamps and
              assumes it is the start time. Technically, this also reads the first timestamp, which may increase latency
              by one frame (which may be relevant for live streams).

       [1m--demuxer-mkv-probe-video-duration=<yes|no|full>[0m
              When opening the file, seek to the end of it, and check what timestamp the last video packet has, and  re‚Äê
              port  that as file duration. This is strictly for compatibility with Haali only. In this mode, it's possi‚Äê
              ble that opening will be slower (especially when playing over http), or that behavior with broken files is
              much worse. So don't use this option.

              The [1myes [22mmode merely uses the index and reads a small number of blocks from the end of the file.  The  [1mfull[0m
              mode  actually  traverses  the  entire file and can make a reliable estimate even without an index present
              (such as partial files).

       [1m--demuxer-rawaudio-channels=<value>[0m
              Number of channels (or channel layout) if [1m--demuxer=rawaudio [22mis used (default: stereo).

       [1m--demuxer-rawaudio-format=<value>[0m
              Sample format for [1m--demuxer=rawaudio [22m(default: s16le).  Use [1m--demuxer-rawaudio-format=help [22mto get  a  list
              of all formats.

       [1m--demuxer-rawaudio-rate=<value>[0m
              Sample rate for [1m--demuxer=rawaudio [22m(default: 44 kHz).

       [1m--demuxer-rawvideo-fps=<value>[0m
              Rate in frames per second for [1m--demuxer=rawvideo [22m(default: 25.0).

       [1m--demuxer-rawvideo-w=<value>, --demuxer-rawvideo-h=<value>[0m
              Image dimension in pixels for [1m--demuxer=rawvideo[22m.

                 Example

                        Play a raw YUV sample:

                     mpv sample-720x576.yuv --demuxer=rawvideo \
                     --demuxer-rawvideo-w=720 --demuxer-rawvideo-h=576

       [1m--demuxer-rawvideo-format=<value>[0m
              Color space (fourcc) in hex or string for [1m--demuxer=rawvideo [22m(default: [1mYV12[22m).

       [1m--demuxer-rawvideo-mp-format=<value>[0m
              Color  space  by internal video format for [1m--demuxer=rawvideo[22m. Use [1m--demuxer-rawvideo-mp-format=help [22mfor a
              list of possible formats.

       [1m--demuxer-rawvideo-codec=<value>[0m
              Set the video codec instead of selecting the rawvideo codec when using [1m--demuxer=rawvideo[22m. This  uses  the
              same values as codec names in [1m--vd [22m(but it does not accept decoder names).

       [1m--demuxer-rawvideo-size=<value>[0m
              Frame size in bytes when using [1m--demuxer=rawvideo[22m.

       [1m--demuxer-max-bytes=<bytesize>[0m
              This controls how much the demuxer is allowed to buffer ahead. The demuxer will normally try to read ahead
              as much as necessary, or as much is requested with [1m--demuxer-readahead-secs[22m. The option can be used to re‚Äê
              strict  the  maximum  readahead. This limits excessive readahead in case of broken files or desynced play‚Äê
              back. The demuxer will stop reading additional packets as soon as one of the limits is reached. (The  lim‚Äê
              its still can be slightly overstepped due to technical reasons.)

              Set these limits higher if you get a packet queue overflow warning, and you think normal playback would be
              possible with a larger packet queue.

              See [1m--list-options [22mfor defaults and value range. [1m<bytesize> [22moptions accept suffixes such as [1mKiB [22mand [1mMiB[22m.

       [1m--demuxer-max-back-bytes=<bytesize>[0m
              This  controls  how much past data the demuxer is allowed to preserve. This is useful only if the cache is
              enabled.

              Unlike the forward cache, there is no control how many seconds are actually cached - it will simply use as
              much memory this option allows. Setting this option to 0 will strictly disable any back buffer,  but  this
              will  lead  to the situation that the forward seek range starts after the current playback position (as it
              removes past packets that are seek points).

              If the end of the file is reached, the remaining unused forward buffer space is  "donated"  to  the  back‚Äê
              buffer (unless the backbuffer size is set to 0, or [1m--demuxer-donate-buffer [22mis set to [1mno[22m).  This still lim‚Äê
              its  the  total cache usage to the sum of the forward and backward cache, and effectively makes better use
              of the total allowed memory budget. (The opposite does not happen: free backward buffer is never "donated"
              to the forward buffer.)

              Keep in mind that other buffers in the player (like decoders) will cause the  demuxer  to  cache  "future"
              frames in the back buffer, which can skew the impression about how much data the backbuffer contains.

              See [1m--list-options [22mfor defaults and value range.

       [1m--demuxer-donate-buffer=<yes|no>[0m
              Whether  to  let the back buffer use part of the forward buffer (default: yes).  If set to [1myes[22m, the "dona‚Äê
              tion" behavior described in the option description for [1m--demuxer-max-back-bytes [22mis enabled. This means the
              back buffer may use up memory up to the sum of the forward and back buffer options, minus the active  size
              of  the  forward  buffer. If set to [1mno[22m, the options strictly limit the forward and back buffer sizes sepa‚Äê
              rately.

              Note that if the end of the file is reached, the buffered data stays the  same,  even  if  you  seek  back
              within the cache. This is because the back buffer is only reduced when new data is read.

       [1m--demuxer-seekable-cache=<yes|no|auto>[0m
              Debugging  option to control whether seeking can use the demuxer cache (default: auto). Normally you don't
              ever need to set this; the default [1mauto [22mdoes the right thing and enables cache seeking it  if  [1m--cache  [22mis
              set to [1myes [22m(or is implied [1myes [22mif [1m--cache=auto[22m).

              If  enabled,  short  seek  offsets will not trigger a low level demuxer seek (which means for example that
              slow network round trips or FFmpeg seek bugs can be avoided). If a seek cannot happen  within  the  cached
              range, a low level seek will be triggered. Seeking outside of the cache will start a new cached range, but
              can discard the old cache range if the demuxer exhibits certain unsupported behavior.

              The  special  value [1mauto [22mmeans [1myes [22min the same situation as [1m--cache-secs [22mis used (i.e. when the stream ap‚Äê
              pears to be a network stream or the stream cache is enabled).

       [1m--demuxer-thread=<yes|no>[0m
              Run the demuxer in a separate thread, and let it prefetch a certain amount of packets (default: yes). Hav‚Äê
              ing this enabled leads to smoother playback, enables features like prefetching, and  prevents  that  stuck
              network  freezes the player. On the other hand, it can add overhead, or the background prefetching can hog
              CPU resources.

              Disabling this option is not recommended. Use it for debugging only.

       [1m--demuxer-termination-timeout=<seconds>[0m
              Number of seconds the player should wait to shutdown the demuxer (default: 0.1). The player will  wait  up
              to this much time before it closes the stream layer forcefully. Forceful closing usually means the network
              I/O  is  given no chance to close its connections gracefully (of course the OS can still close TCP connec‚Äê
              tions properly), and might result in annoying messages being logged, and in some  cases,  confused  remote
              servers.

              This  timeout  is  usually  only  applied when loading has finished properly. If loading is aborted by the
              user, or in some corner cases like removing external tracks sourced from network during playback, forceful
              closing is always used.

       [1m--demuxer-readahead-secs=<seconds>[0m
              If [1m--demuxer-thread [22mis enabled, this controls how much the demuxer should buffer  ahead  in  seconds  (de‚Äê
              fault:  1).  As  long as no packet has a timestamp difference higher than the readahead amount relative to
              the last packet returned to the decoder, the demuxer keeps reading.

              Note that enabling the cache (such as [1m--cache=yes[22m, or if the input is considered  a  network  stream,  and
              [1m--cache=auto  [22mis  used), this option is mostly ignored. ([1m--cache-secs [22mwill override this. Technically, the
              maximum of both options is used.)

              The main purpose of this option is to limit the readhead for local playback, since a large readahead value
              is not overly useful in this case.

              (This value tends to be fuzzy, because many file formats don't store linear timestamps.)

       [1m--demuxer-hysteresis-secs=<seconds>[0m
              Once the demuxer limit is reached ([1m--demuxer-max-bytes[22m, [1m--demuxer-readahead-secs  [22mor  [1m--cache-secs[22m),  this
              value  can  be used to specify a hysteresis before the demuxer will buffer ahead again. This specifies the
              maximum number of seconds from the current playback position that needs to be remaining in the  cache  be‚Äê
              fore the demuxer will continue buffering ahead.

              For  example,  with a value of 10 seconds specified, the demuxer will buffer ahead up to the demuxer limit
              and won't start buffering ahead again until there is only 10 seconds of content left in the cache.

              This can provide significant power savings and reduce load by making the  demuxer  only  buffer  ahead  in
              chunks at a time rather than buffering ahead nonstop to keep the cache filled.

              If  you  want  to  save  power  and  reduce  load, configure this to a small number that's much lower than
              [1m--cache-secs [22mor [1m--demuxer-readahead-secs[22m.  If it takes a long time to buffer anything at all for  a  given
              stream  (like  when reading from a very slow disk is involved), then the hysteresis value should be larger
              to compensate.

              The default value is 0 seconds, which disables the caching hysteresis. A  value  of  10  seconds  probably
              works well for most usecases.

       [1m--prefetch-playlist=<yes|no>[0m
              Prefetch next playlist entry while playback of the current entry is ending (default: no).

              This  does not prefill the cache with the video data of the next URL.  Prefetching video data is supported
              only for the current playlist entry, and depends on the demuxer  cache  settings  (on  by  default).  This
              merely opens the URL of the next playlist entry as soon the current URL is fully read.

              This does [1mnot [22mwork with URLs resolved by the [1myoutube-dl [22mwrapper, and it won't.

              This  can  give  subtly  wrong results if per-file options are used, or if options are changed in the time
              window between prefetching start and next file played.

              This can occasionally make wrong prefetching decisions. For example, it can't predict whether you go back‚Äê
              wards in the playlist, and assumes you won't edit the playlist.

              Highly experimental.

       [1m--force-seekable=<yes|no>[0m
              If the player thinks that the media is not seekable (e.g. playing from a pipe, or it's an http stream with
              a server that doesn't support range requests), seeking will be disabled. This option can  forcibly  enable
              it.  For seeks within the cache, there's a good chance of success.

       [1m--demuxer-cache-wait=<yes|no>[0m
              Before starting playback, read data until either the end of the file was reached, or the demuxer cache has
              reached  maximum  capacity. Only once this is done, playback starts. This intentionally happens before the
              initial seek triggered with [1m--start[22m. This does not change any runtime behavior after the initial  caching.
              This option is useless if the file cannot be cached completely.

       [1m--rar-list-all-volumes=<yes|no>[0m
              When  opening  multi-volume rar files, open all volumes to create a full list of contained files (default:
              no). If disabled, only the archive entries whose headers are located within the first  volume  are  listed
              (and  thus  played when opening a .rar file with mpv). Doing so speeds up opening, and the typical idiotic
              use-case of playing uncompressed multi-volume rar files that contain a single media file is made faster.

              Opening is still slow, because for unknown, idiotic, and unnecessary reasons libarchive opens all  volumes
              anyway when playing the main file, even though mpv iterated no archive entries yet.

       [1m--directory-mode=<auto|lazy|recursive|ignore>[0m
              When  opening  a  directory,  open  subdirectories lazily, recursively or not at all. The default is [1mauto[22m,
              which behaves like [1mrecursive [22mwith [1m--shuffle[22m, and like [1mlazy [22motherwise.

   [1mInput[0m
       [1m--native-keyrepeat[0m
              Use system settings for keyrepeat  delay  and  rate,  instead  of  [1m--input-ar-delay  [22mand  [1m--input-ar-rate[22m.
              (Whether  this applies depends on the VO backend and how it handles keyboard input. Does not apply to ter‚Äê
              minal input.)

       [1m--input-ar-delay[0m
              Delay in milliseconds before we start to autorepeat a key (0 to disable).

       [1m--input-ar-rate[0m
              Number of key presses to generate per second on autorepeat.

       [1m--input-conf=<filename>[0m
              Specify input configuration file other than the default location in the mpv configuration directory  (usu‚Äê
              ally [1m~/.config/mpv/input.conf[22m).

       [1m--no-input-default-bindings[0m
              Disable  default-level  ("weak")  key  bindings. These are bindings which config files like [1minput.conf [22mcan
              override.  It  currently  affects  the  builtin  key  bindings,  and  keys  which   scripts   bind   using
              [1mmp.add_key_binding [22m(but not [1mmp.add_forced_key_binding [22mbecause this overrides [1minput.conf[22m).

       [1m--no-input-builtin-bindings[0m
              Disable loading of built-in key bindings during start-up. This option is applied only during (lib)mpv ini‚Äê
              tialization,  and  if  used then it will not be not possible to enable them later. May be useful to libmpv
              clients.

       [1m--input-cmdlist[0m
              Prints all commands that can be bound to keys.

       [1m--input-doubleclick-time=<milliseconds>[0m
              Time in milliseconds to recognize two consecutive button presses as a double-click (default: 300).

       [1m--input-keylist[0m
              Prints all keys that can be bound to commands.

       [1m--input-key-fifo-size=<2-65000>[0m
              Specify the size of the FIFO that buffers key events (default: 7). If it is too small, some events may  be
              lost.  The main disadvantage of setting it to a very large value is that if you hold down a key triggering
              some particularly slow command then the player may be unresponsive while it processes all the queued  com‚Äê
              mands.

       [1m--input-test[0m
              Input  test  mode. Instead of executing commands on key presses, mpv will show the keys and the bound com‚Äê
              mands on the OSD. Has to be used with a dummy video, and the normal ways to quit the player will not  work
              (key bindings that normally quit will be shown on OSD only, just like any other binding). See [4mINPUT.CONF[24m.

       [1m--input-terminal, --no-input-terminal[0m
              [1m--no-input-terminal  [22mprevents  the player from reading key events from standard input. Useful when reading
              data from standard input. This is automatically enabled when [1m- [22mis found on the  command  line.  There  are
              situations  where you have to set it manually, e.g. if you open [1m/dev/stdin [22m(or the equivalent on your sys‚Äê
              tem), use stdin in a playlist or intend to read from stdin later on via the  loadfile  or  loadlist  input
              commands.

       [1m--input-ipc-server=<filename>[0m
              Enable the IPC support and create the listening socket at the given path.

              On  Linux  and Unix, the given path is a regular filesystem path. On Windows, named pipes are used, so the
              path refers to the pipe namespace ([1m\\.\pipe\<name>[22m). If the [1m\\.\pipe\ [22mprefix is missing, mpv will  add  it
              automatically    before    creating    the   pipe,   so   [1m--input-ipc-server=/tmp/mpv-socket   [22mand   [1m--in‚Äê[0m
              [1mput-ipc-server=\\.\pipe\tmp\mpv-socket [22mare equivalent for IPC on Windows.

              See [4mJSON[24m [4mIPC[24m for details.

       [1m--input-ipc-client=fd://<N>[0m
              Connect a single IPC client to the given FD. This is somewhat similar  to  [1m--input-ipc-server[22m,  except  no
              socket  is  created, and instead the passed FD is treated like a socket connection received from [1maccept()[22m.
              In practice, you could pass either a FD created by [1msocketpair()[22m, or a pipe.  In both cases, you must  sure
              the FD is actually inherited by mpv (do not set the POSIX [1mCLOEXEC [22mflag).

              The player quits when the connection is closed.

              This is somewhat similar to the removed [1m--input-file [22moption, except it supports only integer FDs, and can‚Äê
              not open actual paths.

                 Example

                        [1m--input-ipc-client=fd://123[0m

              [1mNOTE:[0m
                 Does not and will not work on Windows.

              [1mWARNING:[0m
                 Writing  to the [1minput-ipc-server [22moption at runtime will start another instance of an IPC client handler
                 for the [1minput-ipc-client [22moption, because initialization is bundled, and this thing is stupid. This is a
                 bug. Writing to [1minput-ipc-client [22mat runtime will start another IPC client handler for  the  new  value,
                 without stopping the old one, even if the FD value is the same (but the string is different e.g. due to
                 whitespace). This is not a bug.

       [1m--input-gamepad=<yes|no>[0m
              Enable/disable SDL2 Gamepad support. Disabled by default.

       [1m--input-cursor, --no-input-cursor[0m
              Permit  mpv to receive pointer events reported by the video output driver. Necessary to use the OSC, or to
              select the buttons in DVD menus.  Support depends on the VO in use.

       [1m--input-cursor-passthrough, --no-input-cursor-passthrough[0m
              (X11 and Wayland only) Tell the backend windowing system to allow pointer events to  passthrough  the  mpv
              window.  This  allows  windows  under mpv to instead receive pointer events as if the mpv window was never
              there.

       [1m--input-media-keys=<yes|no>[0m
              On systems where mpv can choose between receiving media keys or letting the system handle them - this  op‚Äê
              tion controls whether mpv should receive them.

              Default:  yes  (except  for libmpv). macOS and Windows only, because elsewhere mpv doesn't have a choice -
              the system decides whether to send media keys to mpv. For instance, on X11 or Wayland,  system-wide  media
              keys  are  not  implemented.  Whether media keys work when the mpv window is focused is implementation-de‚Äê
              fined.

       [1m--input-right-alt-gr, --no-input-right-alt-gr[0m
              (Cocoa and Windows only) Use the right Alt key as Alt Gr to produce special characters. If disabled, count
              the right Alt as an Alt modifier key. Enabled by default.

       [1m--input-vo-keyboard=<yes|no>[0m
              Disable all keyboard input on for VOs which can't participate in proper keyboard  input  dispatching.  May
              not affect all VOs. Generally useful for embedding only.

              On  X11, a sub-window with input enabled grabs all keyboard input as long as it is 1. a child of a focused
              window, and 2. the mouse is inside of the sub-window. It can steal away all keyboard input from the appli‚Äê
              cation embedding the mpv window, and on the other hand, the mpv window will receive no input if the  mouse
              is outside of the mpv window, even though mpv has focus. Modern toolkits work around this weird X11 behav‚Äê
              ior, but naively embedding foreign windows breaks it.

              The  only  way  to  handle this reasonably is using the XEmbed protocol, which was designed to solve these
              problems. GTK provides [1mGtkSocket[22m, which supports XEmbed. Qt doesn't seem to provide  anything  working  in
              newer versions.

              If  the  embedder  supports XEmbed, input should work with default settings and with this option disabled.
              Note that [1minput-default-bindings [22mis disabled by default in libmpv as well - it should be  enabled  if  you
              want the mpv default key bindings.

   [1mOSD[0m
       [1m--osc, --no-osc[0m
              Whether to load the on-screen-controller (default: yes).

       [1m--no-osd-bar, --osd-bar[0m
              Disable display of the OSD bar.

              You  can  configure  this on a per-command basis in input.conf using [1mosd- [22mprefixes, see [1mInput Command Pre‚Äê[0m
              [1mfixes[22m. If you want to disable the OSD completely, use [1m--osd-level=0[22m.

       [1m--osd-on-seek=<no,bar,msg,msg-bar>[0m
              Set what is displayed on the OSD during seeks. The default is [1mbar[22m.

              You can configure this on a per-command basis in input.conf using [1mosd- [22mprefixes, see  [1mInput  Command  Pre‚Äê[0m
              [1mfixes[22m.

       [1m--osd-duration=<time>[0m
              Set the duration of the OSD messages in ms (default: 1000).

       [1m--osd-font=<name>[0m
              Specify font to use for OSD. The default is [1msans-serif[22m.

                 Examples

                 ‚Ä¢ [1m--osd-font='Bitstream Vera Sans'[0m

                 ‚Ä¢ [1m--osd-font='Comic Sans MS'[0m

       [1m--osd-font-size=<size>[0m
              Specify the OSD font size. See [1m--sub-font-size [22mfor details.

              Default: 55.

       [1m--osd-msg1=<string>[0m
              Show  this string as message on OSD with OSD level 1 (visible by default).  The message will be visible by
              default, and as long as no other message covers it, and the OSD level  isn't  changed  (see  [1m--osd-level[22m).
              Expands properties; see [4mProperty[24m [4mExpansion[24m.

       [1m--osd-msg2=<string>[0m
              Similar  to  [1m--osd-msg1[22m, but for OSD level 2. If this is an empty string (default), then the playback time
              is shown.

       [1m--osd-msg3=<string>[0m
              Similar to [1m--osd-msg1[22m, but for OSD level 3. If this is an empty string (default), then the playback  time,
              duration, and some more information is shown.

              This  is  used  for  the  [1mshow-progress [22mcommand (by default mapped to [1mP[22m), and when seeking if enabled with
              [1m--osd-on-seek [22mor by [1mosd- [22mprefixes in input.conf (see [1mInput Command Prefixes[22m).

              [1m--osd-status-msg [22mis a legacy equivalent (but with a minor difference).

       [1m--osd-status-msg=<string>[0m
              Show a custom string during playback instead of the standard status text.  This overrides the status  text
              used for [1m--osd-level=3[22m, when using the [1mshow-progress [22mcommand (by default mapped to [1mP[22m), and when seeking if
              enabled  with  [1m--osd-on-seek  [22mor [1mosd- [22mprefixes in input.conf (see [1mInput Command Prefixes[22m). Expands proper‚Äê
              ties. See [4mProperty[24m [4mExpansion[24m.

              This option has been replaced with [1m--osd-msg3[22m. The only difference is that this option implicitly includes
              [1m${osd-sym-cc}[22m. This option is ignored if [1m--osd-msg3 [22mis not empty.

       [1m--osd-playing-msg=<string>[0m
              Show a message on OSD when playback starts. The  string  is  expanded  for  properties,  e.g.  [1m--osd-play‚Äê[0m
              [1ming-msg='file: ${filename}' [22mwill show the message [1mfile: [22mfollowed by a space and the currently played file‚Äê
              name.

              See [4mProperty[24m [4mExpansion[24m.

       [1m--osd-playing-msg-duration=<time>[0m
              Set the duration of [1mosd-playing-msg [22min ms. If this is unset, [1mosd-playing-msg [22mstays on screen for the dura‚Äê
              tion of [1mosd-duration[22m.

       [1m--osd-bar-align-x=<-1-1>[0m
              Position  of the OSD bar. -1 is far left, 0 is centered, 1 is far right.  Fractional values (like 0.5) are
              allowed.

       [1m--osd-bar-align-y=<-1-1>[0m
              Position of the OSD bar. -1 is top, 0 is centered, 1 is bottom.  Fractional values (like 0.5) are allowed.

       [1m--osd-bar-w=<1-100>[0m
              Width of the OSD bar, in percentage of the screen width (default: 75).  A value of 50  means  the  bar  is
              half the screen wide.

       [1m--osd-bar-h=<0.1-50>[0m
              Height of the OSD bar, in percentage of the screen height (default: 3.125).

       [1m--osd-back-color=<color>[0m
              See [1m--sub-color[22m. Color used for OSD text background.

       [1m--osd-blur=<0..20.0>[0m
              Gaussian blur factor. 0 means no blur applied (default).

       [1m--osd-bold=<yes|no>[0m
              Format text on bold.

       [1m--osd-italic=<yes|no>[0m
              Format text on italic.

       [1m--osd-border-color=<color>[0m
              See [1m--sub-color[22m. Color used for the OSD font border.

       [1m--osd-border-size=<size>[0m
              Size of the OSD font border in scaled pixels (see [1m--sub-font-size [22mfor details). A value of 0 disables bor‚Äê
              ders.

              Default: 3.

       [1m--osd-color=<color>[0m
              Specify the color used for OSD.  See [1m--sub-color [22mfor details.

       [1m--osd-fractions[0m
              Show  OSD times with fractions of seconds (in millisecond precision). Useful to see the exact timestamp of
              a video frame.

       [1m--osd-level=<0-3>[0m
              Specifies which mode the OSD should start in.

              [1m0      [22mOSD completely disabled (subtitles only)

              [1m1      [22menabled (shows up only on user interaction)

              [1m2      [22menabled + current time visible by default

              [1m3      [22menabled + [1m--osd-status-msg [22m(current time and status by default)

       [1m--osd-margin-x=<size>[0m
              Left and right screen margin for the OSD in scaled pixels (see [1m--sub-font-size [22mfor details).

              This option specifies the distance of the OSD to the left, as well as at which  distance  from  the  right
              border long OSD text will be broken.

              Default: 25.

       [1m--osd-margin-y=<size>[0m
              Top and bottom screen margin for the OSD in scaled pixels (see [1m--sub-font-size [22mfor details).

              This option specifies the vertical margins of the OSD.

              Default: 22.

       [1m--osd-align-x=<left|center|right>[0m
              Control to which corner of the screen OSD should be aligned to (default: [1mleft[22m).

       [1m--osd-align-y=<top|center|bottom>[0m
              Vertical position (default: [1mtop[22m).  Details see [1m--osd-align-x[22m.

       [1m--osd-scale=<factor>[0m
              OSD font size multiplier, multiplied with [1m--osd-font-size [22mvalue.

       [1m--osd-scale-by-window=<yes|no>[0m
              Whether  to  scale  the  OSD with the window size (default: yes). If this is disabled, [1m--osd-font-size [22mand
              other OSD options that use scaled pixels are always in actual pixels. The effect is that changing the win‚Äê
              dow size won't change the OSD font size.

       [1m--osd-shadow-color=<color>[0m
              See [1m--sub-color[22m. Color used for OSD shadow.

              [1mNOTE:[0m
                 ignored when [1m--osd-back-color [22mis specified (or more exactly: when that option is not set to  completely
                 transparent).

       [1m--osd-shadow-offset=<size>[0m
              Displacement  of  the OSD shadow in scaled pixels (see [1m--sub-font-size [22mfor details). A value of 0 disables
              shadows.

              Default: 0.

       [1m--osd-spacing=<size>[0m
              Horizontal OSD/sub font spacing in scaled pixels (see [1m--sub-font-size [22mfor details). This value is added to
              the normal letter spacing. Negative values are allowed.

              Default: 0.

       [1m--video-osd=<yes|no>[0m
              Enabled OSD rendering on the video window (default: yes). This can be used in  situations  where  terminal
              OSD is preferred. If you just want to disable all OSD rendering, use [1m--osd-level=0[22m.

              It  does  not affect subtitles or overlays created by scripts (in particular, the OSC needs to be disabled
              with [1m--no-osc[22m).

              This option is somewhat experimental and could be replaced by another mechanism in the future.

       [1m--osd-font-provider=<...>[0m
              See [1m--sub-font-provider [22mfor details and accepted values. Note that unlike subtitles, OSD never uses embed‚Äê
              ded fonts from media files.

       [1m--osd-fonts-dir=<path>[0m
              See [1m--sub-fonts-dir [22mfor details.  Defaults to [1m~~/fonts[22m.

   [1mScreenshot[0m
       [1m--screenshot-format=<type>[0m
              Set the image file type used for saving screenshots.

              Available choices:

              [1mpng    [22mPNG

              [1mjpg    [22mJPEG (default)

              [1mjpeg   [22mJPEG (alias for jpg)

              [1mwebp   [22mWebP

              [1mjxl    [22mJPEG XL

              [1mavif   [22mAVIF

       [1m--screenshot-tag-colorspace=<yes|no>[0m
              Tag screenshots with the appropriate colorspace (default: yes).

              Note that not all formats support this. When it is unsupported, or when this option is  disabled,  screen‚Äê
              shots will be converted to sRGB before being written.

       [1m--screenshot-high-bit-depth=<yes|no>[0m
              If possible, write screenshots with a bit depth similar to the source video (default: yes). This is inter‚Äê
              esting  in  particular  for PNG, as this sometimes triggers writing 16 bit PNGs with huge file sizes. This
              will also include an unused alpha channel in the resulting files if 16 bit is used.

       [1m--screenshot-template=<template>[0m
              Specify the filename template used to save screenshots. The template specifies the filename  without  file
              extension,  and can contain format specifiers, which will be substituted when taking a screenshot.  By de‚Äê
              fault, the template is [1mmpv-shot%n[22m, which results in filenames like [1mmpv-shot0012.png [22mfor example.

              The template can start with a relative or absolute path, in order to specify a  directory  location  where
              screenshots should be saved.

              If the final screenshot filename points to an already existing file, the file will not be overwritten. The
              screenshot  will  either not be saved, or if the template contains [1m%n[22m, saved using different, newly gener‚Äê
              ated filename.

              Allowed format specifiers:

              [1m%[#][0X]n[0m
                     A sequence number, padded with zeros to length X (default: 04). E.g.  passing the format [1m%04n  [22mwill
                     yield  [1m0012  [22mon the 12th screenshot.  The number is incremented every time a screenshot is taken or
                     if the file already exists. The length [1mX [22mmust be in the range 0-9. With the optional  #  sign,  mpv
                     will  use  the  lowest  available  number.  For example, if you take three screenshots--0001, 0002,
                     0003--and delete the first two, the next two screenshots will not be 0004 and 0005,  but  0001  and
                     0002 again.

              [1m%f     [22mFilename of the currently played video.

              [1m%F     [22mSame as [1m%f[22m, but strip the file extension, including the dot.

              [1m%x     [22mDirectory  path  of  the  currently  played  video. If the video is not on the filesystem (but e.g.
                     [1mhttp://[22m), this expand to an empty string.

              [1m%X{fallback}[0m
                     Same as [1m%x[22m, but if the video file is not on the filesystem, return the fallback string  inside  the
                     [1m{...}[22m.

              [1m%p     [22mCurrent  playback  time,  in the same format as used in the OSD. The result is a string of the form
                     "HH:MM:SS". For example, if the video is at the time position 5 minutes and 34 seconds, [1m%p [22mwill  be
                     replaced with "00:05:34".

              [1m%P     [22mSimilar  to  [1m%p[22m,  but  extended  with  the  playback  time  in  milliseconds.   It  is formatted as
                     "HH:MM:SS.mmm", with "mmm" being the millisecond part of the playback time.

                     [1mNOTE:[0m
                        This is a simple way for getting unique per-frame timestamps. (Frame numbers would be more intu‚Äê
                        itive, but are not easily implementable because container formats usually use  time  stamps  for
                        identifying frames.)

              [1m%wX    [22mSpecify  the  current  playback  time using the format string [1mX[22m.  [1m%p [22mis like [1m%wH:%wM:%wS[22m, and [1m%P [22mis
                     like [1m%wH:%wM:%wS.%wT[22m.

                     [1mValid format specifiers:[0m

                            [1m%wH    [22mhour (padded with 0 to two digits)

                            [1m%wh    [22mhour (not padded)

                            [1m%wM    [22mminutes (00-59)

                            [1m%wm    [22mtotal minutes (includes hours, unlike [1m%wM[22m)

                            [1m%wS    [22mseconds (00-59)

                            [1m%ws    [22mtotal seconds (includes hours and minutes)

                            [1m%wf    [22mlike [1m%ws[22m, but as float

                            [1m%wT    [22mmilliseconds (000-999)

              [1m%tX    [22mSpecify the current local date/time using the format [1mX[22m. This format specifier uses the  UNIX  [1mstrf‚Äê[0m
                     [1mtime()  [22mfunction  internally,  and inserts the result of passing "%X" to [1mstrftime[22m. For example, [1m%tm[0m
                     will insert the number of the current month as number. You have to use multiple [1m%tX  [22mspecifiers  to
                     build a full date/time string.

              [1m%{prop[:fallback text]}[0m
                     Insert  the value of the input property 'prop'. E.g. [1m%{filename} [22mis the same as [1m%f[22m. If the property
                     does not exist or is not available, an error text is inserted, unless a fallback is specified.

              [1m%%     [22mReplaced with the [1m% [22mcharacter itself.

       [1m--screenshot-dir=<path>[0m
              Store screenshots in this directory. This path is joined with the filename generated by  [1m--screenshot-tem‚Äê[0m
              [1mplate[22m. If the template filename is already absolute, the directory is ignored.

              [1m--screenshot-directory [22mis an alias for [1m--screenshot-dir[22m.

              If the directory does not exist, it is created on the first screenshot. If it is not a directory, an error
              is generated when trying to write a screenshot.

              This  option  is  not  set by default, and thus will write screenshots to the directory from which mpv was
              started. In pseudo-gui mode (see [4mPSEUDO[24m [4mGUI[24m [4mMODE[24m), this is set to the desktop.

       [1m--screenshot-jpeg-quality=<0-100>[0m
              Set the JPEG quality level. Higher means better quality. The default is 90.

       [1m--screenshot-jpeg-source-chroma=<yes|no>[0m
              Write JPEG files with the same chroma subsampling as the video (default: yes). If  disabled,  the  libjpeg
              default is used.

       [1m--screenshot-png-compression=<0-9>[0m
              Set  the  PNG  compression  level.  Higher means better compression. This will affect the file size of the
              written screenshot file and the time it takes to write a screenshot. Too  high  compression  might  occupy
              enough CPU time to interrupt playback. The default is 7.

       [1m--screenshot-png-filter=<0-5>[0m
              Set  the  filter  applied prior to PNG compression. 0 is none, 1 is "sub", 2 is "up", 3 is "average", 4 is
              "Paeth", and 5 is "mixed". This affects the level of compression that can be achieved.  For  most  images,
              "mixed" achieves the best compression ratio, hence it is the default.

       [1m--screenshot-webp-lossless=<yes|no>[0m
              Write lossless WebP files. [1m--screenshot-webp-quality [22mis ignored if this is set. The default is no.

       [1m--screenshot-webp-quality=<0-100>[0m
              Set the WebP quality level. Higher means better quality. The default is 75.

       [1m--screenshot-webp-compression=<0-6>[0m
              Set  the  WebP compression level. Higher means better compression, but takes more CPU time. Note that this
              also affects the screenshot quality when used with lossy WebP files. The default is 4.

       [1m--screenshot-jxl-distance=<0-15>[0m
              Set the JPEG XL Butteraugli distance. Lower means better quality. Lossless is 0.0,  and  1.0  is  approxi‚Äê
              mately  equivalent  to  JPEG  quality 90 for photographic content. Use 0.1 for "visually lossless" screen‚Äê
              shots. The default is 1.0.

       [1m--screenshot-jxl-effort=<1-9>[0m
              Set the JPEG XL compression effort. Higher effort (usually) means better compression, but takes  more  CPU
              time. The default is 4.

       [1m--screenshot-avif-encoder=<encoder>[0m
              Specify the AV1 encoder to be used by libavcodec for encoding avif screenshots.

              Default: [1mlibaom-av1[0m

       [1m--screenshot-avif-pixfmt=<format>[0m
              Specify the pixel format to the libavcodec encoder.

              Default: [1myuv420p[0m

       [1m--screenshot-avif-opts=key1=value1,key2=value2,...[0m
              Specifies libavcodec options for selected encoder. For more information, consult the FFmpeg documentation.

              Default: [1musage=allintra,crf=32,cpu-used=8,tune=ssim[0m

              Note:  the default is only guaranteed to work with the libaom-av1 encoder.  Above options may not be valid
              and or optimal for other encoders.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                 [1m"--screenshot-avif-opts=crf=32,aq-mode=complexity"[0m
                        sets the crf to 32 and quantization (aq-mode) to complexity based.

       [1m--screenshot-sw=<yes|no>[0m
              Whether to use software rendering for screenshots (default: no).

              If set to no, the screenshot will be rendered by the current VO (only vo_gpu  or  vo_gpu_next  currently).
              The advantage is that this will (probably) always show up as in the video window, because the same code is
              used  for  rendering.   But  since  the renderer needs to be reinitialized, this can be slow and interrupt
              playback.

              If set to yes, the software scaler is used to convert the video to RGB (or whatever the target  screenshot
              requires).  In  this  case, conversion will run in a separate thread and will probably not interrupt play‚Äê
              back. The software renderer may lack some capabilities, such as HDR rendering.  If [1mwindow  [22mmode  is  used,
              the image will also be scaled in software which may not accurately reflect the actual visible result.

   [1mSoftware Scaler[0m
       [1m--sws-scaler=<name>[0m
              Specify  the  software scaler algorithm to be used with [1m--vf=scale[22m. This also affects video output drivers
              which lack hardware acceleration, e.g. [1mx11[22m. See also [1m--vf=scale[22m.

              To get a list of available scalers, run [1m--sws-scaler=help[22m.

              Default: [1mbicubic[22m.

       [1m--sws-lgb=<0-100>[0m
              Software scaler Gaussian blur filter (luma). See [1m--sws-scaler[22m.

       [1m--sws-cgb=<0-100>[0m
              Software scaler Gaussian blur filter (chroma). See [1m--sws-scaler[22m.

       [1m--sws-ls=<-100-100>[0m
              Software scaler sharpen filter (luma). See [1m--sws-scaler[22m.

       [1m--sws-cs=<-100-100>[0m
              Software scaler sharpen filter (chroma). See [1m--sws-scaler[22m.

       [1m--sws-chs=<h>[0m
              Software scaler chroma horizontal shifting. See [1m--sws-scaler[22m.

       [1m--sws-cvs=<v>[0m
              Software scaler chroma vertical shifting. See [1m--sws-scaler[22m.

       [1m--sws-bitexact=<yes|no>[0m
              Unknown functionality (default: no). Consult libswscale source code. The primary purpose of this,  as  far
              as libswscale API goes), is to produce exactly the same output for the same input on all platforms (output
              has the same "bits" everywhere, thus "bitexact"). Typically disables optimizations.

       [1m--sws-fast=<yes|no>[0m
              Allow optimizations that help with performance, but reduce quality (default: no).

              VOs  like  [1mdrm  [22mand [1mx11 [22mwill benefit a lot from using [1m--sws-fast[22m.  You may need to set other options, like
              [1m--sws-scaler[22m. The builtin [1msws-fast [22mprofile sets this option and some others to gain  performance  for  re‚Äê
              duced quality. Also see [1m--sws-allow-zimg[22m.

       [1m--sws-allow-zimg=<yes|no>[0m
              Allow  using  zimg  (if  the  component using the internal swscale wrapper explicitly allows so) (default:
              yes). In this case, zimg [4mmay[24m be used, if the internal zimg wrapper supports the input and output  formats.
              It will silently or noisily fall back to libswscale if one of these conditions does not apply.

              If zimg is used, the other [1m--sws- [22moptions are ignored, and the [1m--zimg- [22moptions are used instead.

              If  the  internal  component  using the swscale wrapper hooks up logging correctly, a verbose priority log
              message will indicate whether zimg is being used.

              Most things which need software conversion can make use of this.

              [1mNOTE:[0m
                 Do note that zimg [4mmay[24m be slower than libswscale. Usually, it's faster on x86 platforms, but  slower  on
                 ARM  (due  to  lack of ARM specific optimizations). The mpv zimg wrapper uses unoptimized repacking for
                 some formats, for which zimg cannot be blamed.

       [1m--zimg-scaler=<point|bilinear|bicubic|spline16|spline36|lanczos>[0m
              Zimg luma scaler to use (default: lanczos).

       [1m--zimg-scaler-param-a=<default|float>, --zimg-scaler-param-b=<default|float>[0m
              Set scaler parameters. By default, these  are  set  to  the  special  string  [1mdefault[22m,  which  maps  to  a
              scaler-specific default value. Ignored if the scaler is not tunable.

              [1mlanczos[0m
                     [1m--zimg-scaler-param-a [22mis the number of taps.

              [1mbicubic[0m
                     a and b are the bicubic b and c parameters.

       [1m--zimg-scaler-chroma=...[0m
              Same as [1m--zimg-scaler[22m, for for chroma interpolation (default: bilinear).

       [1m--zimg-scaler-chroma-param-a, --zimg-scaler-chroma-param-b[0m
              Same as [1m--zimg-scaler-param-a [22m/ [1m--zimg-scaler-param-b[22m, for chroma.

       [1m--zimg-dither=<no|ordered|random|error-diffusion>[0m
              Dithering (default: random).

       [1m--zimg-threads=<auto|integer>[0m
              Set  the  maximum  number  of threads to use for scaling (default: auto).  [1mauto [22muses the number of logical
              cores on the current machine. Note that the scaler may use less threads (or even just 1 thread)  depending
              on  stuff.   Passing  a  value  of 1 disables threading and always scales the image in a single operation.
              Higher thread counts waste resources, but make it typically faster.

              Note that some zimg git versions had bugs that will corrupt the output if threads are used.

       [1m--zimg-fast=<yes|no>[0m
              Allow optimizations that help with performance, but reduce quality (default:  yes).  Currently,  this  may
              simplify gamma conversion operations.

   [1mAudio Resampler[0m
       This  controls  the  default options of any resampling done by mpv (but not within libavfilter, within the system
       audio API resampler, or any other places).

       It also sets the defaults for the [1mlavrresample [22maudio filter.

       [1m--audio-resample-filter-size=<length>[0m
              Length of the filter with respect to the lower sampling rate. (default: 16)

       [1m--audio-resample-phase-shift=<count>[0m
              Log2 of the number of polyphase entries. (..., 10->1024, 11->2048, 12->4096, ...) (default: 10->1024)

       [1m--audio-resample-cutoff=<cutoff>[0m
              Cutoff frequency (0.0-1.0), default set depending upon filter length.

       [1m--audio-resample-linear=<yes|no>[0m
              If set then filters will be linearly interpolated between polyphase entries. (default: no)

       [1m--audio-normalize-downmix=<yes|no>[0m
              Enable/disable normalization if surround audio is downmixed to stereo (default: no). If this is  disabled,
              downmix  can  cause clipping. If it's enabled, the output might be too quiet. It depends on the source au‚Äê
              dio.

              Technically, this changes the [1mnormalize [22msuboption of the [1mlavrresample [22maudio  filter,  which  performs  the
              downmixing.

              If downmix happens outside of mpv for some reason, or in the decoder (decoder downmixing), or in the audio
              output (system mixer), this has no effect.

       [1m--audio-resample-max-output-size=<length>[0m
              Limit maximum size of audio frames filtered at once, in ms (default: 40).  The output size size is limited
              in  order to make resample speed changes react faster. This is necessary especially if decoders or filters
              output very large frame sizes (like some lossless codecs or some DRC filters).  This option does  not  af‚Äê
              fect the resampling algorithm in any way.

              For testing/debugging only. Can be removed or changed any time.

       [1m--audio-swresample-o=<string>[0m
              Set AVOptions on the SwrContext or AVAudioResampleContext. These should be documented by FFmpeg or Libav.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

   [1mTerminal[0m
       [1m--quiet[0m
              Make  console  output  less verbose; in particular, prevents the status line (i.e. AV: 3.4 (00:00:03.37) /
              5320.6 ...) from being displayed.  Particularly useful on slow terminals or broken ones which do not prop‚Äê
              erly handle carriage return (i.e. [1m\r[22m).

              See also: [1m--really-quiet [22mand [1m--msg-level[22m.

       [1m--really-quiet[0m
              Display even less output and status messages than with [1m--quiet[22m.

       [1m--no-terminal, --terminal[0m
              Disable any use of the terminal and stdin/stdout/stderr. This completely silences any message output.

              Unlike [1m--really-quiet[22m, this disables input and terminal initialization as well.

       [1m--no-msg-color[0m
              Disable colorful console output on terminals.

       [1m--msg-level=<module1=level1,module2=level2,...>[0m
              Control verbosity directly for each module. The [1mall [22mmodule changes the verbosity of all the  modules.  The
              verbosity  changes  from this option are applied in order from left to right, and each item can override a
              previous one.

              Run mpv with [1m--msg-level=all=trace [22mto see all messages mpv outputs. You can use the module  names  printed
              in the output (prefixed to each line in [1m[...][22m) to limit the output to interesting modules.

              This also affects [1m--log-file[22m, and in certain cases libmpv API logging.

              [1mNOTE:[0m
                 Some  messages  are  printed  before  the  command  line  is  parsed  and are therefore not affected by
                 [1m--msg-level[22m. To control these messages, you have to  use  the  [1mMPV_VERBOSE  [22menvironment  variable;  see
                 [4mENVIRONMENT[24m [4mVARIABLES[24m for details.

              Available levels:

                 [1mno     [22mcomplete silence

                 [1mfatal  [22mfatal messages only

                 [1merror  [22merror messages

                 [1mwarn   [22mwarning messages

                 [1minfo   [22minformational messages

                 [1mstatus [22mstatus messages (default)

                 [1mv      [22mverbose messages

                 [1mdebug  [22mdebug messages

                 [1mtrace  [22mvery noisy debug messages

                 Example

                     mpv --msg-level=ao/sndio=no

                 Completely silences the output of ao_sndio, which uses the log prefix [1m[ao/sndio][22m.

                     mpv --msg-level=all=warn,ao/alsa=error

                 Only show warnings or worse, and let the ao_alsa output show errors only.

       [1m--term-osd=<auto|no|force>[0m
              Control whether OSD messages are shown on the console when no video output is available (default: auto).

              [1mauto   [22muse terminal OSD if no video output active

              [1mno     [22mdisable terminal OSD

              [1mforce  [22muse terminal OSD even if video output active

              The [1mauto [22mmode also enables terminal OSD if [1m--video-osd=no [22mwas set.

       [1m--term-osd-bar, --no-term-osd-bar[0m
              Enable printing a progress bar under the status line on the terminal.  (Disabled by default.)

       [1m--term-osd-bar-chars=<string>[0m
              Customize  the  [1m--term-osd-bar  [22mfeature.  The  string  is expected to consist of 5 characters (start, left
              space, position indicator, right space, end). You can use Unicode characters, but note that double-  width
              characters will not be treated correctly.

              Default: [1m[-+-][22m.

       [1m--term-playing-msg=<string>[0m
              Print  out  a  string  after  starting  playback. The string is expanded for properties, e.g. [1m--term-play‚Äê[0m
              [1ming-msg='file: ${filename}' [22mwill print the string [1mfile: [22mfollowed by a space and the currently played file‚Äê
              name.

              See [4mProperty[24m [4mExpansion[24m.

       [1m--term-remaining-playtime, --no-term-remaining-playtime[0m
              When printing out the time on the terminal, show the remaining time adjusted by playback  speed.  Default:
              [1myes[0m

       [1m--term-status-msg=<string>[0m
              Print  out  a  custom  string during playback instead of the standard status line. Expands properties. See
              [4mProperty[24m [4mExpansion[24m.

       [1m--term-title=<string>[0m
              Set the terminal title. Currently, this simply concatenates the escape sequence setting the  window  title
              with  the provided (property expanded) string. This will mess up if the expanded string contain bytes that
              end the escape sequence, or if the terminal does not understand the sequence. The latter probably includes
              the regrettable win32.

              Expands properties. See [4mProperty[24m [4mExpansion[24m.

       [1m--msg-module[0m
              Prepend module name to each console message.

       [1m--msg-time[0m
              Prepend timing information to each console message. The time is in seconds since the  player  process  was
              started (technically, slightly later actually), using a monotonic time source depending on the OS. This is
              [1mCLOCK_MONOTONIC [22mon sane UNIX variants.

   [1mCache[0m
       [1m--cache=<yes|no|auto>[0m
              Decide whether to use network cache settings (default: auto).

              If enabled, use up to [1m--cache-secs [22mfor the cache size (but still limited to [1m--demuxer-max-bytes[22m), and make
              the cached data seekable (if possible).  If disabled, [1m--cache-pause [22mand related are implicitly disabled.

              The  [1mauto  [22mchoice  enables  this depending on whether the stream is thought to involve network accesses or
              other slow media (this is an imperfect heuristic).

              Before mpv 0.30.0, this used to accept a number, which specified the size of the cache in  kilobytes.  Use
              e.g. [1m--cache --demuxer-max-bytes=123k [22minstead.

       [1m--no-cache[0m
              Turn off input stream caching. See [1m--cache[22m.

       [1m--cache-secs=<seconds>[0m
              How  many  seconds  of audio/video to prefetch if the cache is active. This overrides the [1m--demuxer-reada‚Äê[0m
              [1mhead-secs [22moption if and only if the cache is enabled and the value is larger. The default value is set  to
              something  very high, so the actually achieved readahead will usually be limited by the value of the [1m--de‚Äê[0m
              [1mmuxer-max-bytes [22moption. Setting this option is usually only useful for limiting readahead.

       [1m--cache-on-disk=<yes|no>[0m
              Write packet data to a temporary file, instead of keeping them in memory.   This  makes  sense  only  with
              [1m--cache[22m. If the normal cache is disabled, this option is ignored.

              The cache file is append-only. Even if the player appears to prune data, the file space freed by it is not
              reused. The cache file is deleted when playback is closed.

              Note  that packet metadata is still kept in memory. [1m--demuxer-max-bytes [22mand related options are applied to
              metadata [4monly[24m. The size of this metadata  varies, but 50 MB per hour of media is typical. The  cache  sta‚Äê
              tistics  will  report  this metadats size, instead of the size of the cache file. If the metadata hits the
              size limits, the metadata is pruned (but not the cache file).

              When the media is closed, the cache file is deleted. A cache file is generally worthless after  the  media
              is closed, and it's hard to retrieve any media data from it (it's not supported by design).

              If  the  option  is  enabled at runtime, the cache file is created, but old data will remain in the memory
              cache. If the option is disabled at runtime, old data remains in the disk cache, and the cache file is not
              closed until the media is closed. If the option is disabled and enabled again, it will continue to use the
              cache file that was opened first.

       [1m--demuxer-cache-dir=<path>[0m
              Directory where to create temporary files. Cache is  stored  in  the  system's  cache  directory  (usually
              [1m~/.cache/mpv[22m) if this is unset.

              Currently, this is used for [1m--cache-on-disk [22monly.

       [1m--cache-pause=<yes|no>[0m
              Whether the player should automatically pause when the cache runs out of data and stalls decoding/playback
              (default: yes). If enabled, it will pause and unpause once more data is available, aka "buffering".

       [1m--cache-pause-wait=<seconds>[0m
              Number  of seconds the packet cache should have buffered before starting playback again if "buffering" was
              entered (default: 1). This can be used to control how long the player rebuffers if  [1m--cache-pause  [22mis  en‚Äê
              abled,  and  the  demuxer underruns. If the given time is higher than the maximum set with [1m--cache-secs [22mor
              [1m--demuxer-readahead-secs[22m, or prefetching ends before that for some other reason (like file end or  maximum
              configured cache size reached), playback resumes earlier.

       [1m--cache-pause-initial=<yes|no>[0m
              Enter  "buffering" mode before starting playback (default: no). This can be used to ensure playback starts
              smoothly,  in  exchange  for  waiting  some  time   to   prefetch   network   data   (as   controlled   by
              [1m--cache-pause-wait[22m). For example, some common behavior is that playback starts, but network caches immedi‚Äê
              ately underrun when trying to decode more data as playback progresses.

              Another  thing that can happen is that the network prefetching is so CPU demanding (due to demuxing in the
              background) that playback drops frames at first. In these cases, it helps enabling this option,  and  set‚Äê
              ting [1m--cache-secs [22mand [1m--cache-pause-wait [22mto roughly the same value.

              This option also triggers when playback is restarted after seeking.

       [1m--demuxer-cache-unlink-files=<immediate|whendone|no>[0m
              Whether  or when to unlink cache files (default: immediate). This affects cache files which are inherently
              temporary, and which make no sense to remain on disk after the player terminates. This is a debugging  op‚Äê
              tion.

              [1mimmediate[0m
                     Unlink  cache  file  after they were created. The cache files won't be visible anymore, even though
                     they're in use. This ensures they are guaranteed to be removed from disk  when  the  player  termi‚Äê
                     nates, even if it crashes.

              [1mwhendone[0m
                     Delete cache files after they are closed.

              [1mno     [22mDon't delete cache files. They will consume disk space without having a use.

              Currently, this is used for [1m--cache-on-disk [22monly.

       [1m--stream-buffer-size=<bytesize>[0m
              Size  of the low level stream byte buffer (default: 128KB). This is used as buffer between demuxer and low
              level I/O (e.g. sockets). Generally, this can be very small, and the main purpose is similar to the inter‚Äê
              nal buffer FILE in the C standard library will have.

              Half of the buffer is always used for guaranteed seek back, which is important for unseekable input.

              There are known cases where this can help performance to set a large buffer:

                 1. mp4 files. libavformat may trigger many small seeks in both directions, depending on  how  the  file
                    was muxed.

                 2. Certain network filesystems, which do not have a cache, and where small reads can be inefficient.

              In other cases, setting this to a large value can reduce performance.

              Usually,  read  accesses are at half the buffer size, but it may happen that accesses are done alternating
              with smaller and larger sizes (this is due to the internal ring buffer wrap-around).

              See [1m--list-options [22mfor defaults and value range. [1m<bytesize> [22moptions accept suffixes such as [1mKiB [22mand [1mMiB[22m.

       [1m--vd-queue-enable=<yes|no>, --ad-queue-enable[0m
              Enable running the video/audio decoder on a separate thread (default: no).  If enabled, the decoder is run
              on a separate thread, and a frame queue is put between decoder and higher level playback logic.  The  size
              of the frame queue is defined by the other options below.

              This  is  probably  quite  pointless.  libavcodec already has multithreaded decoding (enabled by default),
              which makes this largely unnecessary. It might help in some corner cases with high bandwidth video that is
              slow to decode (in these cases libavcodec would block the playback logic, while using  a  decoding  thread
              would  distribute  the decoding time evenly without affecting the playback logic). In other situations, it
              will simply make seeking slower and use significantly more memory.

              The queue size is restricted by the other [1m--vd-queue-... [22moptions. The final queue size is the  minimum  as
              indicated  by the option with the lowest limit. Each decoder/track has its own queue that may use the full
              configured queue size.

              Most queue options can be changed at runtime. [1m--vd-queue-enable [22mitself (and the audio  equivalent)  update
              only if decoding is completely reinitialized. However, setting [1m--vd-queue-max-samples=1 [22mshould almost lead
              to  the  same  behavior  as  [1m--vd-queue-enable=no[22m,  so  that value can be used for effectively runtime en‚Äê
              abling/disabling the queue.

              This should not be used with hardware decoding. It is possible to enable this for audio, but it makes even
              less sense.

       [1m--vd-queue-max-bytes=<bytesize>, --ad-queue-max-bytes[0m
              Maximum approximate allowed size of the queue. If exceeded, decoding will be stopped. The maximum size can
              be exceeded by about 1 frame.

              See [1m--list-options [22mfor defaults and value range. [1m<bytesize> [22moptions accept suffixes such as [1mKiB [22mand [1mMiB[22m.

       [1m--vd-queue-max-samples=<int>, --ad-queue-max-samples[0m
              Maximum number of frames (video) or samples (audio) of the queue. The audio size may be exceeded by  about
              1 frame.

              See [1m--list-options [22mfor defaults and value range.

       [1m--vd-queue-max-secs=<seconds>, --ad-queue-max-secs[0m
              Maximum number of seconds of media in the queue. The special value 0 means no limit is set. The queue size
              may be exceeded by about 2 frames. Timestamp resets may lead to random queue size usage.

              See [1m--list-options [22mfor defaults and value range.

   [1mNetwork[0m
       [1m--user-agent=<string>[0m
              Use [1m<string> [22mas user agent for HTTP streaming.

       [1m--cookies, --no-cookies[0m
              Support cookies when making HTTP requests. Disabled by default.

       [1m--cookies-file=<filename>[0m
              Read HTTP cookies from <filename>. The file is assumed to be in Netscape format.

       [1m--http-header-fields=<field1,field2>[0m
              Set custom HTTP fields when accessing HTTP stream.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                     mpv --http-header-fields='Field1: value1','Field2: value2' \
                     http://localhost:1234

                 Will generate HTTP request:

                     GET / HTTP/1.0
                     Host: localhost:1234
                     User-Agent: MPlayer
                     Icy-MetaData: 1
                     Field1: value1
                     Field2: value2
                     Connection: close

       [1m--http-proxy=<proxy>[0m
              URL  of the HTTP/HTTPS proxy. If this is set, the [1mhttp_proxy [22menvironment is ignored. The [1mno_proxy [22menviron‚Äê
              ment variable is still respected. This option is silently ignored if it does not start with [1mhttp://[22m. Prox‚Äê
              ies are not used for https URLs. Setting this option does not try to make the ytdl script use the proxy.

       [1m--tls-ca-file=<filename>[0m
              Certificate authority database file for use with TLS. (Silently fails with  older  FFmpeg  or  Libav  ver‚Äê
              sions.)

       [1m--tls-verify[0m
              Verify  peer  certificates  when  using TLS (e.g. with [1mhttps://...[22m).  (Silently fails with older FFmpeg or
              Libav versions.)

       [1m--tls-cert-file[0m
              A file containing a certificate to use in the handshake with the peer.

       [1m--tls-key-file[0m
              A file containing the private key for the certificate.

       [1m--referrer=<string>[0m
              Specify a referrer path or URL for HTTP requests.

       [1m--network-timeout=<seconds>[0m
              Specify the network timeout in seconds (default: 60 seconds). This affects  at  least  HTTP.  The  special
              value 0 uses the FFmpeg/Libav defaults. If a protocol is used which does not support timeouts, this option
              is silently ignored.

              [1mWARNING:[0m
                 This  breaks  the  RTSP protocol, because of inconsistent FFmpeg API regarding its internal timeout op‚Äê
                 tion. Not only does the RTSP timeout option accept different units (seconds  instead  of  microseconds,
                 causing  mpv  to pass it huge values), it will also overflow FFmpeg internal calculations. The worst is
                 that merely setting the option will put RTSP into listening mode, which breaks any client uses. At time
                 of this writing, the fix was not made effective yet. For this reason, this option is ignored (or should
                 be ignored) on RTSP URLs. You can still set the timeout option directly with [1m--demuxer-lavf-o[22m.

       [1m--rtsp-transport=<lavf|udp|udp_multicast|tcp|http>[0m
              Select RTSP transport method (default: tcp). This selects the underlying network  transport  when  playing
              [1mrtsp://... [22mURLs. The value [1mlavf [22mleaves the decision to libavformat.

       [1m--hls-bitrate=<no|min|max|<rate>>[0m
              If  HLS  streams  are played, this option controls what streams are selected by default. The option allows
              the following parameters:

              [1mno     [22mDon't do anything special. Typically, this will simply pick the first audio/video  streams  it  can
                     find.

              [1mmin    [22mPick the streams with the lowest bitrate.

              [1mmax    [22mSame, but highest bitrate. (Default.)

              Additionally,  if the option is a number, the stream with the highest rate equal or below the option value
              is selected.

              The bitrate as used is sent by the server, and there's no guarantee it's actually meaningful.

   [1mDVB[0m
       [1m--dvbin-prog=<string>[0m
              This defines the program to tune to. Usually, you may specify this by using a stream URI  like  [1m"dvb://ZDF[0m
              [1mHD"[22m, but you can tune to a different channel by writing to this property at runtime.  Also see [1mdvbin-chan‚Äê[0m
              [1mnel-switch-offset [22mfor more useful channel switching functionality.

       [1m--dvbin-card=<0-15>[0m
              Specifies using card number 0-15 (default: 0).

       [1m--dvbin-file=<filename>[0m
              Instructs mpv to read the channels list from [1m<filename>[22m. The default is in the mpv configuration directory
              (usually [1m~/.config/mpv[22m) with the filename [1mchannels.conf.{sat,ter,cbl,atsc,isdbt} [22m(based on your card type)
              or  [1mchannels.conf  [22mas  a  last resort.  Please note that using specific file name with card type is recom‚Äê
              mended, since the legacy channel format is not fully standardized so autodetection of the delivery  system
              may fail otherwise.  For DVB-S/2 cards, a VDR 1.7.x format channel list is recommended as it allows tuning
              to  DVB-S2 channels, enabling subtitles and decoding the PMT (which largely improves the demuxing).  Clas‚Äê
              sic mplayer format channel lists are still supported (without these  improvements),  and  for  other  card
              types,  only  limited VDR format channel list support is implemented (patches welcome).  For channels with
              dynamic PID switching or incomplete [1mchannels.conf[22m, [1m--dvbin-full-transponder [22mor the magic PID [1m8192 [22mare rec‚Äê
              ommended.

       [1m--dvbin-timeout=<1-30>[0m
              Maximum number of seconds to wait when trying to tune a frequency before giving up (default: 30).

       [1m--dvbin-full-transponder=<yes|no>[0m
              Apply no filters on program PIDs, only tune to frequency and pass full transponder to demuxer.  The player
              frontend selects the streams from the full TS in this case, so the program which is  shown  initially  may
              not match the chosen channel.  Switching between the programs is possible by cycling the [1mprogram [22mproperty.
              This  is useful to record multiple programs on a single transponder, or to work around issues in the [1mchan‚Äê[0m
              [1mnels.conf[22m.  It is also recommended to use this for channels which switch PIDs  on-the-fly,  e.g.  for  re‚Äê
              gional news.

              Default: [1mno[0m

       [1m--dvbin-channel-switch-offset=<integer>[0m
              This  value  is  not meant for setting via configuration, but used in channel switching. An [1minput.conf [22mcan
              [1mcycle [22mthis value [1mup [22mand [1mdown [22mto perform channel switching. This number effectively gives the offset to the
              initially tuned to channel in the channel list.

              An example  [1minput.conf  [22mcould  contain:  [1mH  cycle  dvbin-channel-switch-offset  up[22m,  [1mK  cycle  dvbin-chan‚Äê[0m
              [1mnel-switch-offset down[0m

   [1mALSA audio output options[0m
       [1m--alsa-device=<device>[0m
              Deprecated, use [1m--audio-device [22m(requires [1malsa/ [22mprefix).

       [1m--alsa-resample=yes[0m
              Enable  ALSA  resampling plugin. (This is disabled by default, because some drivers report incorrect audio
              delay in some cases.)

       [1m--alsa-mixer-device=<device>[0m
              Set the mixer device used with [1mao-volume [22m(default: [1mdefault[22m).

       [1m--alsa-mixer-name=<name>[0m
              Set the name of the mixer element (default: [1mMaster[22m). This is for example [1mPCM [22mor [1mMaster[22m.

       [1m--alsa-mixer-index=<number>[0m
              Set the index of the mixer channel (default: 0). Consider the output of "[1mamixer scontrols[22m", then the index
              is the number that follows the name of the element.

       [1m--alsa-non-interleaved[0m
              Allow output of non-interleaved formats (if the audio decoder uses this format). Currently disabled by de‚Äê
              fault, because some popular ALSA plugins are utterly broken with non-interleaved formats.

       [1m--alsa-ignore-chmap[0m
              Don't read or set the channel map of the ALSA device - only request the required number of  channels,  and
              then  pass  the audio as-is to it. This option most likely should not be used. It can be useful for debug‚Äê
              ging, or for static setups with a specially engineered ALSA configuration (in this case you should  always
              force  the same layout with [1m--audio-channels[22m, or it will work only for files which use the layout implicit
              to your ALSA device).

       [1m--alsa-buffer-time=<microseconds>[0m
              Set the requested buffer time in microseconds. A value of 0 skips requesting anything from the  ALSA  API.
              This  and the [1m--alsa-periods [22moption uses the ALSA [1mnear [22mfunctions to set the requested parameters. If doing
              so results in an empty configuration set, setting these parameters is skipped.

              Both options control the buffer size. A low buffer size can lead to higher CPU usage and  audio  dropouts,
              while a high buffer size can lead to higher latency in volume changes and other filtering.

       [1m--alsa-periods=<number>[0m
              Number of periods requested from the ALSA API. See [1m--alsa-buffer-time [22mfor further remarks.

   [1mGPU renderer options[0m
       The  following video options are currently all specific to [1m--vo=gpu[22m, [1m--vo=libmpv [22mand [1m--vo=gpu-next[22m, which are the
       only VOs that implement them.

       [1m--scale=<filter>[0m
              The filter function to use when upscaling video.

              [1mbilinear[0m
                     Bilinear hardware texture filtering (fastest, very low quality). This is the default when using the
                     [1mfast [22mprofile.

              [1mlanczos[0m
                     Lanczos scaling. Provides good balance between quality and performance.  This is  the  default  for
                     [1mscale[22m. The number of taps can be controlled with [1mscale-radius[22m, but is best left unchanged.

                     (This filter is an alias for [1msinc[22m-windowed [1msinc[22m)

              [1mewa_lanczos[0m
                     Elliptic  weighted  average  Lanczos  scaling.  Also known as Jinc.  Relatively slow, but very good
                     quality. The radius can be controlled with [1mscale-radius[22m. Increasing the  radius  makes  the  filter
                     sharper but adds more ringing.

                     (This filter is an alias for [1mjinc[22m-windowed [1mjinc[22m)

              [1mewa_lanczossharp[0m
                     A  slightly  sharpened version of ewa_lanczos. This is the default when using the [1mhigh-quality [22mpro‚Äê
                     file.

              [1mewa_lanczos4sharpest[0m
                     Very sharp scaler, but also slightly slower than [1mewa_lanczossharp[22m.  Prone to ringing, so it's  rec‚Äê
                     ommended to combine this with an anti-ringing shader. On [1m--vo=gpu-next[22m, setting this filter enables
                     built-in anti-ringing, so no extra action needs to be taken.

              [1mmitchell[0m
                     Mitchell-Netravali. The [1mB [22mand [1mC [22mparameters can be set with [1m--scale-param1 [22mand [1m--scale-param2[22m.

              [1mhermite[0m
                     Hermite  spline. Similar to [1mbicubic [22mbut with [1mB [22mset to [1m0.0[22m.  This filter has the special property of
                     having a support of radius 1.0, making it very fast in comparison, but prone to blocking.  This  is
                     the default for [1m--dscale[22m.

              [1mcatmull_rom[0m
                     Catmull-Rom.  A Cubic filter in the same vein as [1mmitchell[22m, where the [1mB [22mand [1mC [22mparameters are [1m0.0 [22mand
                     [1m0.5 [22mrespectively.  This filter is sharper than [1mmitchell[22m, but it results in more ringing.

              [1moversample[0m
                     A version of nearest neighbour that (naively) oversamples pixels, so that pixels overlapping  edges
                     get  linearly interpolated instead of rounded. This essentially removes the small imperfections and
                     judder artifacts caused by nearest-neighbour interpolation, in exchange for adding some blur.  This
                     can also be used for frame mixing, where it is commonly known as "smoothmotion" (see [1m--tscale[22m).

              [1mlinear [22mA [1m--tscale [22mfilter.

              There are some more filters, but most are not as useful. For a complete list, pass [1mhelp [22mas value, e.g.:

                 mpv --scale=help

       [1m--cscale=<filter>[0m
              As  [1m--scale[22m,  but for interpolating chroma information. If the image is not subsampled, this option is ig‚Äê
              nored entirely. If this option is unset, the filter implied by [1m--scale [22mwill be applied.

       [1m--dscale=<filter>[0m
              Like [1m--scale[22m, but apply these filters on downscaling instead.

       [1m--tscale=<filter>[0m
              The filter used for interpolating the temporal axis (frames). This is only used if [1m--interpolation [22mis  en‚Äê
              abled.  The  only valid choices for [1m--tscale [22mare separable convolution filters (use [1m--tscale=help [22mto get a
              list). The default is [1moversample[22m.

              Common [1m--tscale [22mchoices include [1moversample[22m, [1mlinear[22m, [1mcatmull_rom[22m, [1mmitchell[22m, [1mgaussian[22m, or [1mbicubic[22m. These are
              listed in increasing order of smoothness/blurriness, with [1mbicubic [22mbeing the smoothest/blurriest and  [1mover‚Äê[0m
              [1msample [22mbeing the sharpest/least smooth.

       [1m--scale-param1=<value>, --scale-param2=<value>, --cscale-param1=<value>, --cscale-param2=<value>,[0m
       [1m--dscale-param1=<value>, --dscale-param2=<value>, --tscale-param1=<value>, --tscale-param2=<value>[0m
              Set  filter  parameters.  By  default,  these  are  set  to  the  special  string [1mdefault[22m, which maps to a
              scaler-specific default value. Ignored if the filter is not tunable. Currently, this affects the following
              filter parameters:

              [1mbicubic[0m
                     Spline parameters ([1mB [22mand [1mC[22m). Defaults to B=1 and C=0.

              [1mgaussian[0m
                     Scale parameter ([1mt[22m). Increasing this makes the result blurrier.  Defaults to 1.

              [1moversample[0m
                     Minimum distance to an edge before interpolation is used. Setting this to 0 will always interpolate
                     edges, whereas setting it to 0.5 will never interpolate, thus behaving as if  the  regular  nearest
                     neighbour algorithm was used. Defaults to 0.0.

       [1m--scale-blur=<value>, --cscale-blur=<value>, --dscale-blur=<value>, --tscale-blur=<value>[0m
              Kernel  scaling factor (also known as a blur factor). Decreasing this makes the result sharper, increasing
              it makes it blurrier (default 0). If set to 0, the kernel's preferred blur factor is used. Note that  set‚Äê
              ting  this  too  low (eg. 0.5) leads to bad results. It's generally recommended to stick to values between
              0.8 and 1.2.

       [1m--scale-clamp=<0.0-1.0>, --cscale-clamp, --dscale-clamp, --tscale-clamp[0m
              Specifies a weight bias to multiply into negative coefficients. Specifying [1m--scale-clamp=1 [22mhas the  effect
              of  removing  negative  weights completely, thus effectively clamping the value range to [0-1]. Values be‚Äê
              tween 0.0 and 1.0 can be specified to apply only a moderate diminishment of negative weights. This is  es‚Äê
              pecially  useful  for [1m--tscale[22m, where it reduces excessive ringing artifacts in the temporal domain (which
              typically manifest themselves as short flashes or fringes of black, mostly around  moving  edges)  in  ex‚Äê
              change for potentially adding more blur. The default for [1m--tscale-clamp [22mis 1.0, the others default to 0.0.

       [1m--scale-taper=<value>, --scale-wtaper=<value>, --dscale-taper=<value>, --dscale-wtaper=<value>, --cscale-ta‚Äê[0m
       [1mper=<value>, --cscale-wtaper=<value>, --tscale-taper=<value>, --tscale-wtaper=<value>[0m
              Kernel/window  taper factor. Increasing this flattens the filter function.  Value range is 0 to 1. A value
              of 0 (the default) means no flattening, a value of 1 makes the filter completely flat (equivalent to a box
              function).  Values in between mean that some portion will be flat and the actual filter function  will  be
              squeezed into the space in between.

       [1m--scale-radius=<value>, --cscale-radius=<value>, --dscale-radius=<value>, --tscale-radius=<value>[0m
              Set radius for tunable filters, must be a float number between 0.5 and 16.0. Defaults to the filter's pre‚Äê
              ferred radius if not specified. Doesn't work for every scaler and VO combination.

              Note that depending on filter implementation details and video scaling ratio, the radius that actually be‚Äê
              ing used might be different (most likely being increased a bit).

       [1m--scale-antiring=<value>, --cscale-antiring=<value>, --dscale-antiring=<value>, --tscale-antiring=<value>[0m
              Set  the  antiringing  strength. This tries to eliminate ringing, but can introduce other artifacts in the
              process. Must be a float number between 0.0 and 1.0. The default value of  0.0  disables  antiringing  en‚Äê
              tirely.

              Note  that this doesn't affect the special filters [1mbilinear [22mand [1mbicubic_fast[22m, nor does it affect any polar
              (EWA) scalers.

       [1m--scale-window=<window>, --cscale-window=<window>, --dscale-window=<window>, --tscale-window=<window>[0m
              (Advanced users only) Choose a custom windowing function for the kernel.  Defaults to  the  filter's  pre‚Äê
              ferred window if unset. Use [1m--scale-window=help [22mto get a list of supported windowing functions.

       [1m--scale-wparam=<window>, --cscale-wparam=<window>, --cscale-wparam=<window>, --tscale-wparam=<window>[0m
              (Advanced  users only) Configure the parameter for the window function given by [1m--scale-window [22metc. By de‚Äê
              fault, these are set to the special string [1mdefault[22m, which maps to a window-specific default value. Ignored
              if the window is not tunable. Currently, this affects the following window parameters:

              [1mkaiser [22mWindow parameter (alpha). Defaults to 6.33.

              [1mblackman[0m
                     Window parameter (alpha). Defaults to 0.16.

              [1mgaussian[0m
                     Scale parameter (t). Increasing this makes the window wider. Defaults to 1.

       [1m--scaler-resizes-only[0m
              Disable the scaler if the video image is not resized. In that case, [1mbilinear [22mis used instead  of  whatever
              is  set  with [1m--scale[22m. Bilinear will reproduce the source image perfectly if no scaling is performed.  En‚Äê
              abled by default. Note that this option never affects [1m--cscale[22m.

       [1m--correct-downscaling[0m
              When using convolution based filters, extend the filter size when downscaling. Increases quality, but  re‚Äê
              duces performance while downscaling.  Enabled by default.

              This  will perform slightly sub-optimally for anamorphic video (but still better than without it) since it
              will extend the size to match only the milder of the scale factors between the axes.

              Note: this option is ignored when using bilinear downscaling with [1m--vo=gpu[22m.

       [1m--linear-downscaling[0m
              Scale in linear light when downscaling. It should only be used with a [1m--fbo-format [22mthat has  at  least  16
              bit precision. This option has no effect on HDR content. Enabled by default.

       [1m--linear-upscaling[0m
              Scale  in linear light when upscaling. Like [1m--linear-downscaling[22m, it should only be used with a [1m--fbo-for‚Äê[0m
              [1mmat [22mthat has at least 16 bits precisions. This is not usually recommended except for testing/specific pur‚Äê
              poses. Users are advised to either enable [1m--sigmoid-upscaling [22mor keep both options disabled (i.e.  scaling
              in gamma light).

       [1m--sigmoid-upscaling[0m
              When  upscaling,  use  a  sigmoidal color transform to avoid emphasizing ringing artifacts. Enabled by de‚Äê
              fault. This is incompatible with and replaces [1m--linear-upscaling[22m. (Note that sigmoidization also  requires
              linearization, so the [1mLINEAR [22mrendering step fires in both cases)

       [1m--sigmoid-center[0m
              The  center  of  the  sigmoid curve used for [1m--sigmoid-upscaling[22m, must be a float between 0.0 and 1.0. De‚Äê
              faults to 0.75 if not specified.

       [1m--sigmoid-slope[0m
              The slope of the sigmoid curve used for [1m--sigmoid-upscaling[22m, must be a float between  1.0  and  20.0.  De‚Äê
              faults to 6.5 if not specified.

       [1m--interpolation[0m
              Reduce stuttering caused by mismatches in the video fps and display refresh rate (also known as judder).

              [1mWARNING:[0m
                 This requires setting the [1m--video-sync [22moption to one of the [1mdisplay- [22mmodes, or it will be silently dis‚Äê
                 abled.  This was not required before mpv 0.14.0.

              This  essentially  attempts  to interpolate the missing frames by convoluting the video along the temporal
              axis. The filter used can be controlled using the [1m--tscale [22msetting.

       [1m--interpolation-threshold=<0..1,-1>[0m
              Threshold below which frame ratio interpolation gets disabled  (default:  [1m0.01[22m).  This  is  calculated  as
              [1mabs(disphz/vfps  -  1) < threshold[22m, where [1mvfps [22mis the speed-adjusted video FPS, and [1mdisphz [22mthe display re‚Äê
              fresh rate. (The speed-adjusted video FPS is roughly equal to the normal video FPS, but with slowdown  and
              speedup  applied. This matters if you use [1m--video-sync=display-resample [22mto make video run synchronously to
              the display FPS, or if you change the [1mspeed [22mproperty.)

              The default is intended to enable interpolation in scenarios where  retiming  with  the  [1m--video-sync=dis‚Äê[0m
              [1mplay-*  [22mcannot  adjust  the speed of the video sufficiently for smooth playback. For example if a video is
              60.00 FPS and your display refresh rate is 59.94 Hz, interpolation will never be activated, since the mis‚Äê
              match is within 1% of the refresh rate. The default also handles the scenario when  mpv  cannot  determine
              the  container  FPS,  such as during certain live streams, and may dynamically toggle interpolation on and
              off. In this scenario, the default would be to not use interpolation but rather to allow [1m--video-sync=dis‚Äê[0m
              [1mplay-* [22mto retime the video to match display refresh rate. See [1m--video-sync-max-video-change [22mfor  more  in‚Äê
              formation about how mpv will retime video.

              Also note that if you use e.g. [1m--video-sync=display-vdrop[22m, small deviations in the rate can disable inter‚Äê
              polation and introduce a discontinuity every other minute.

              Set this to [1m-1 [22mto disable this logic.

       [1m--interpolation-preserve[0m
              Preserve  the  previous  frames' interpolated results even when renderer parameters are changed - with the
              exception of options related to cropping and video placement, which always invalidate the cache.  Enabling
              this  option  makes  dynamic updates of renderer settings slightly smoother at the cost of slightly higher
              latency in response to such changes. Defaults to on. (Only affects [1m--vo=gpu-next[22m, note that  [1m--vo=gpu  [22mal‚Äê
              ways invalidates interpolated frames)

       [1m--opengl-pbo[0m
              Enable  use of PBOs. On some drivers this can be faster, especially if the source video size is huge (e.g.
              so called "4K" video). On other drivers it might be slower or cause latency issues.

       [1m--dither-depth=<N|no|auto>[0m
              Set dither target depth to N. Default: auto.

              [1mno     [22mDisable any dithering done by mpv.

              [1mauto   [22mAutomatic selection. If output bit depth cannot be detected, 8 bits per component are assumed.

              [1m8      [22mDither to 8 bit output.

              Note that the depth of the connected video display device cannot be detected. Often, LCD  panels  will  do
              dithering on their own, which conflicts with this option and leads to ugly output.

       [1m--dither-size-fruit=<2-8>[0m
              Set  the size of the dither matrix (default: 6). The actual size of the matrix is [1m(2^N) x (2^N) [22mfor an op‚Äê
              tion value of [1mN[22m, so a value of 6 gives a size of 64x64. The matrix is generated at  startup  time,  and  a
              large matrix can take rather long to compute (seconds).

              Used in [1m--dither=fruit [22mmode only.

       [1m--dither=<fruit|ordered|error-diffusion|no>[0m
              Select dithering algorithm (default: fruit). (Normally, the [1m--dither-depth [22moption controls whether dither‚Äê
              ing is enabled.)

              The [1merror-diffusion [22moption requires compute shader support. It also requires large amount of shared memory
              to  run,  the size of which depends on both the kernel (see [1m--error-diffusion [22moption below) and the height
              of video window. It will fallback to [1mfruit [22mdithering if there is  no  enough  shared  memory  to  run  the
              shader.

       [1m--temporal-dither[0m
              Enable  temporal  dithering. (Only active if dithering is enabled in general.) This changes between 8 dif‚Äê
              ferent dithering patterns on each frame by changing the orientation of the tiled dithering matrix.  Unfor‚Äê
              tunately, this can lead to flicker on LCD displays, since these have a high reaction time.

       [1m--temporal-dither-period=<1-128>[0m
              Determines  how  often  the dithering pattern is updated when [1m--temporal-dither [22mis in use. 1 (the default)
              will update on every video frame, 2 on every other frame, etc.

       [1m--error-diffusion=<kernel>[0m
              The error diffusion kernel to use when [1m--dither=error-diffusion [22mis set.

              [1msimple [22mPropagate error to only two adjacent pixels. Fastest but low quality.

              [1msierra-lite[0m
                     Fast with reasonable quality. This is the default.

              [1mfloyd-steinberg[0m
                     Most notable error diffusion kernel.

              [1matkinson[0m
                     Looks different from other kernels because only  fraction  of  errors  will  be  propagated  during
                     dithering.  A  typical use case of this kernel is saving dithered screenshot (in window mode). This
                     kernel produces slightly smaller file, with still reasonable dithering quality.

              There are other kernels (use [1m--error-diffusion=help [22mto list) but most of them are much slower and  demand‚Äê
              ing even larger amount of shared memory.  Among these kernels, [1mburkes [22machieves a good balance between per‚Äê
              formance and quality, and probably is the one you want to try first.

       [1m--gpu-debug[0m
              Enables GPU debugging. What this means depends on the API type. For OpenGL, it calls [1mglGetError()[22m, and re‚Äê
              quests a debug context. For Vulkan, it enables validation layers.

       [1m--opengl-swapinterval=<n>[0m
              Interval  in  displayed  frames  between  two  buffer swaps. 1 is equivalent to enable VSYNC, 0 to disable
              VSYNC. Defaults to 1 if not specified.

              Note that this depends on proper OpenGL vsync support. On some platforms and drivers, this only works  re‚Äê
              liably  when  in fullscreen mode. It may also require driver-specific hacks if using multiple monitors, to
              ensure mpv syncs to the right one. Compositing window managers can also lead to bad results, as can  miss‚Äê
              ing or incorrect display FPS information (see [1m--display-fps-override[22m).

       [1m--vulkan-device=<device name|UUID>[0m
              The  name  or UUID of the Vulkan device to use for rendering and presentation. Use [1m--vulkan-device=help [22mto
              see the list of available devices and their names and UUIDs. If left  unspecified,  the  first  enumerated
              hardware Vulkan device will be used.

       [1m--vulkan-swap-mode=<mode>[0m
              Controls  the  presentation mode of the vulkan swapchain. This is similar to the [1m--opengl-swapinterval [22mop‚Äê
              tion.

              [1mauto   [22mUse the preferred swapchain mode for the vulkan context. (Default)

              [1mfifo   [22mNon-tearing, vsync blocked. Similar to "VSync on".

              [1mfifo-relaxed[0m
                     Tearing, vsync blocked. Late frames will tear instead of stuttering.

              [1mmailbox[0m
                     Non-tearing, not vsync blocked. Similar to "triple buffering".

              [1mimmediate[0m
                     Tearing, not vsync blocked. Similar to "VSync off".

       [1m--vulkan-queue-count=<1..8>[0m
              Controls the number of VkQueues used for rendering (limited by how many your device supports). In  theory,
              using more queues could enable some parallelism between frames (when using a [1m--swapchain-depth [22mhigher than
              1),  but  it  can also slow things down on hardware where there's no true parallelism between queues. (De‚Äê
              fault: 1)

       [1m--vulkan-async-transfer[0m
              Enables the use of async transfer queues on supported vulkan devices. Using them  allows  transfer  opera‚Äê
              tions  like  texture  uploads  and  blits to happen concurrently with the actual rendering, thus improving
              overall throughput and power consumption. Enabled by default, and should be relatively safe.

       [1m--vulkan-async-compute[0m
              Enables the use of async compute queues on  supported  vulkan  devices.  Using  this,  in  theory,  allows
              out-of-order  scheduling  of  compute shaders with graphics shaders, thus enabling the hardware to do more
              effective work while waiting for pipeline bubbles and memory operations. Not beneficial on all GPUs.  It's
              worth  noting  that if async compute is enabled, and the device supports more compute queues than graphics
              queues (bound by the restrictions set by [1m--vulkan-queue-count[22m), mpv will internally try and prefer the use
              of compute shaders over fragment shaders wherever possible. Enabled by default, although Nvidia users  may
              want to disable it.

       [1m--vulkan-display-display=<n>[0m
              The  index  of the display, on the selected Vulkan device, to present on when using the [1mdisplayvk [22mGPU con‚Äê
              text. Use [1m--vulkan-display-display=help [22mto see the list of available displays. If  left  unspecified,  the
              first enumerated display will be used.

       [1m--vulkan-display-mode=<n>[0m
              The  index  of  the display mode, of the selected Vulkan display, to use when using the [1mdisplayvk [22mGPU con‚Äê
              text. Use [1m--vulkan-display-mode=help [22mto see the list of available modes. If left  unspecified,  the  first
              enumerated mode will be used.

       [1m--vulkan-display-plane=<n>[0m
              The index of the plane, on the selected Vulkan device, to present on when using the [1mdisplayvk [22mGPU context.
              Use  [1m--vulkan-display-plane=help  [22mto see the list of available planes. If left unspecified, the first enu‚Äê
              merated plane will be used.

       [1m--d3d11-exclusive-fs=<yes|no>[0m
              Switches the D3D11 swap chain fullscreen state to 'fullscreen' when fullscreen video  is  requested.  Also
              known  as "exclusive fullscreen" or "D3D fullscreen" in other applications. Gives mpv full control of ren‚Äê
              dering on the swap chain's screen. Off by default.

       [1m--d3d11-warp=<yes|no|auto>[0m
              Use WARP (Windows Advanced Rasterization Platform) with the D3D11 GPU backend (default: auto). This  is  a
              high  performance  software renderer. By default, it is only used when the system has no hardware adapters
              that support D3D11. While the extended GPU features will work with WARP, they can be very slow.

       [1m--d3d11-feature-level=<12_1|12_0|11_1|11_0|10_1|10_0|9_3|9_2|9_1>[0m
              Select a specific feature level when using the D3D11 GPU backend. By default, the highest  available  fea‚Äê
              ture  level  is  used. This option can be used to select a lower feature level, which is mainly useful for
              debugging.  Most extended GPU features will not work at 9_x feature levels.

       [1m--d3d11-flip=<yes|no>[0m
              Enable flip-model presentation, which avoids unnecessarily copying the backbuffer by sharing surfaces with
              the DWM (default: yes). This may cause performance issues with older drivers. If  flip-model  presentation
              is not supported (for example, on Windows 7 without the platform update), mpv will automatically fall back
              to the older bitblt presentation model.

       [1m--d3d11-sync-interval=<0..4>[0m
              Schedule  each  frame to be presented for this number of VBlank intervals.  (default: 1) Setting to 1 will
              enable VSync, setting to 0 will disable it.

       [1m--d3d11-adapter=<adapter name|help>[0m
              Select a specific D3D11 adapter to utilize for D3D11 rendering.  Will pick the default adapter  if  unset.
              Alternatives are listed when the name "help" is given.

              Checks  for  matches  based  on the start of the string, case insensitive. Thus, if the description of the
              adapter starts with the vendor name, that can be utilized as the selection parameter.

              Hardware decoders utilizing the D3D11 rendering abstraction's helper functionality to  receive  a  device,
              such as D3D11VA or DXVA2's DXGI mode, will be affected by this choice.

       [1m--d3d11-output-format=<auto|rgba8|bgra8|rgb10_a2|rgba16f>[0m
              Select  a  specific D3D11 output format to utilize for D3D11 rendering.  "auto" is the default, which will
              pick either rgba8 or rgb10_a2 depending on the configured desktop bit depth. rgba16f and  bgra8  are  left
              out of the autodetection logic, and are available for manual testing.

              [1mNOTE:[0m
                 Desktop  bit depth querying is only available from an API available from Windows 10. Thus on older sys‚Äê
                 tems it will only automatically utilize the rgba8 output format.

       [1m--d3d11-output-csp=<auto|srgb|linear|pq|bt.2020>[0m
              Select a specific D3D11 output color space to utilize for D3D11 rendering.  "auto" is the  default,  which
              will select the color space of the desktop on which the swap chain is located.

              Values  other  than  "srgb"  and  "pq" have had issues in testing, so they are mostly available for manual
              testing.

              [1mNOTE:[0m
                 Swap chain color space configuration is only available from an API available from Windows 10.  Thus  on
                 older systems it will not work.

       [1m--d3d11va-zero-copy=<yes|no>[0m
              By default, when using hardware decoding with [1m--gpu-api=d3d11[22m, the video image will be copied (GPU-to-GPU)
              from  the  decoder  surface  to a shader resource. Set this option to avoid that copy by sampling directly
              from the decoder image. This may increase performance and reduce power usage, but can cause the  image  to
              be sampled incorrectly on the bottom and right edges due to padding, and may invoke driver bugs, since Di‚Äê
              rect3D 11 technically does not allow sampling from a decoder surface (though most drivers support it.)

              Currently only relevant for [1m--gpu-api=d3d11[22m.

       [1m--wayland-app-id=<string>[0m
              Set the client app id for Wayland-based video output methods (default: [1mmpv[22m).

       [1m--wayland-configure-bounds=<auto|yes|no>[0m
              Controls  whether  or  not  mpv  opts  into the configure bounds event if sent by the compositor (default:
              auto). This restricts the initial size of the mpv window to a certain maximum size intended by the compos‚Äê
              itor. In most cases, this simply just prevents the mpv window from being larger than the size of the moni‚Äê
              tor when it first renders. With the default value of [1mauto[22m, configure-bounds will silently  be  ignored  if
              any [1mautofit [22mor [1mgeometry [22mtype option is also set.

       [1m--wayland-content-type=<auto|none|photo|video|game>[0m
              If  supported by the compositor, mpv will send a hint using the content-type protocol telling the composi‚Äê
              tor what type of content is being displayed. [1mauto [22m(default) will automatically switch between telling  the
              compositor the content is a photo, video or possibly none depending on internal heuristics.

       [1m--wayland-disable-vsync=<yes|no>[0m
              Disable  mpv's  internal  vsync  for  Wayland-based video output (default: no).  This is mainly useful for
              benchmarking wayland VOs when combined with [1mvideo-sync=display-desync[22m, [1m--no-audio[22m, and [1m--untimed=yes[22m.

       [1m--wayland-edge-pixels-pointer=<value>[0m
              Defines the size of an edge border (default: 16) to initiate client side resize events in the wayland con‚Äê
              texts with the mouse. This is only active if there are no server side decorations from the compositor.

       [1m--wayland-edge-pixels-touch=<value>[0m
              Defines the size of an edge border (default: 32) to initiate client side resizes  events  in  the  wayland
              contexts with touch events.

       [1m--spirv-compiler=<compiler>[0m
              Controls  which  compiler  is  used  to  translate  GLSL  to SPIR-V. This is (currently) only relevant for
              [1m--gpu-api=vulkan [22mand [4m--gpu-api=d3d11[24m.  The possible choices are currently only:

              [1mauto   [22mUse the first available compiler. (Default)

              [1mshaderc[0m
                     Use libshaderc, which is an API wrapper around glslang. This is generally the  most  preferred,  if
                     available.

              [1mNOTE:[0m
                 This option is deprecated, since there is only one reasonable value.  It may be removed in the future.

       [1m--glsl-shader=<file>, --glsl-shaders=<file-list>[0m
              Custom  GLSL  hooks. These are a flexible way to add custom fragment shaders, which can be injected at al‚Äê
              most arbitrary points in the rendering pipeline, and access all previous intermediate textures.

              Each use of the [1m--glsl-shader [22moption will add  another  file  to  the  internal  list  of  shaders,  while
              [1m--glsl-shaders  [22mtakes a list of files, and overwrites the internal list with it. The latter is a path list
              option (see [4mList[24m [4mOptions[24m for details).

                 Warning

                        The syntax is not stable yet and may change any time.

              The general syntax of a user shader looks like this:

                 //!METADATA ARGS...
                 //!METADATA ARGS...

                 vec4 hook() {
                    ...
                    return something;
                 }

                 //!METADATA ARGS...
                 //!METADATA ARGS...

                 ...

              Each section of metadata, along with the non-metadata lines after it, defines a single  block.  There  are
              currently two types of blocks, HOOKs and TEXTUREs.

              A [1mTEXTURE [22mblock can set the following options:

              [1mTEXTURE <name> (required)[0m
                     The  name of this texture. Hooks can then bind the texture under this name using BIND. This must be
                     the first option of the texture block.

              [1mSIZE <width> [<height>] [<depth>] (required)[0m
                     The dimensions of the texture. The height and depth are optional. The type of texture  (1D,  2D  or
                     3D) depends on the number of components specified.

              [1mFORMAT <name> (required)[0m
                     The  texture format for the samples. Supported texture formats are listed in debug logging when the
                     [1mgpu [22mVO is initialized (look for [1mTexture formats:[22m). Usually, this follows OpenGL naming conventions.
                     For example, [1mrgb16 [22mprovides 3 channels with normalized 16 bit components. One oddity are float for‚Äê
                     mats: for example, [1mrgba16f [22mhas 16 bit internal precision, but the texture data is  provided  as  32
                     bit floats, and the driver converts the data on texture upload.

                     Although format names follow a common naming convention, not all of them are available on all hard‚Äê
                     ware, drivers, GL versions, and so on.

              [1mFILTER <LINEAR|NEAREST>[0m
                     The min/magnification filter used when sampling from this texture.

              [1mBORDER <CLAMP|REPEAT|MIRROR>[0m
                     The border wrapping mode used when sampling from this texture.

              Following the metadata is a string of bytes in hexadecimal notation that define the raw texture data, cor‚Äê
              responding to the format specified by [4mFORMAT[24m, on a single line with no extra whitespace.

              A [1mHOOK [22mblock can set the following options:

              [1mHOOK <name> (required)[0m
                     The texture which to hook into. May occur multiple times within a metadata block, up to a predeter‚Äê
                     mined limit. See below for a list of hookable textures.

              [1mDESC <title>[0m
                     User-friendly  description  of the pass. This is the name used when representing this shader in the
                     list of passes for property [4mvo-passes[24m.

              [1mBIND <name>[0m
                     Loads a texture (either coming from mpv or from a [1mTEXTURE [22mblock) and  makes  it  available  to  the
                     pass. When binding textures from mpv, this will also set up macros to facilitate accessing it prop‚Äê
                     erly.  See below for a list. By default, no textures are bound. The special name HOOKED can be used
                     to refer to the texture that triggered this pass.

              [1mSAVE <name>[0m
                     Gives the name of the texture to save the result of this pass into. By default, this is set to  the
                     special name HOOKED which has the effect of overwriting the hooked texture.

              [1mWIDTH <szexpr>, HEIGHT <szexpr>[0m
                     Specifies  the  size  of the resulting texture for this pass. [1mszexpr [22mrefers to an expression in RPN
                     (reverse polish notation), using the operators + - * / > < !, floating point literals,  and  refer‚Äê
                     ences to sizes of existing texture (such as MAIN.width or CHROMA.height), OUTPUT, or NATIVE_CROPPED
                     (size of an input texture cropped after pan-and-scan, video-align-x/y, video-pan-x/y, etc. and pos‚Äê
                     sibly prescaled). By default, these are set to HOOKED.w and HOOKED.h, espectively.

              [1mWHEN <szexpr>[0m
                     Specifies  a condition that needs to be true (non-zero) for the shader stage to be evaluated. If it
                     fails, it will silently be omitted. (Note that a shader stage like this which has a  dependency  on
                     an optional hook point can still cause that hook point to be saved, which has some minor overhead)

              [1mOFFSET <ox oy | ALIGN>[0m
                     Indicates  a  pixel shift (offset) introduced by this pass. These pixel offsets will be accumulated
                     and corrected during the next scaling pass ([1mcscale [22mor [1mscale[22m). The default values are 0 0 which cor‚Äê
                     respond to no shift. Note that offsets are ignored when not overwriting the hooked texture.

                     A special value of [1mALIGN [22mwill attempt to fix existing offset of HOOKED by align it with  reference.
                     It  requires  HOOKED  to be resizable (see below). It works transparently with fragment shader. For
                     compute shader, the predefined [1mtexmap [22mmacro is required to handle coordinate mapping.

              [1mCOMPONENTS <n>[0m
                     Specifies how many components of this pass's output are relevant and should be stored in  the  tex‚Äê
                     ture, up to 4 (rgba). By default, this value is equal to the number of components in HOOKED.

              [1mCOMPUTE <bw> <bh> [<tw> <th>][0m
                     Specifies  that  this  shader should be treated as a compute shader, with the block size bw and bh.
                     The compute shader will be dispatched with however many blocks are  necessary  to  completely  tile
                     over  the  output.  Within each block, there will be tw*th threads, forming a single work group. In
                     other words: tw and th specify the work group size, which can be different from the block size.  So
                     for  example,  a  compute shader with bw, bh = 32 and tw, th = 8 running on a 500x500 texture would
                     dispatch 16x16 blocks (rounded up), each with 8x8 threads.

                     Compute shaders in mpv are treated a bit different from fragment shaders.  Instead  of  defining  a
                     [1mvec4  hook  [22mthat  produces  an output sample, you directly define [1mvoid hook [22mwhich writes to a fixed
                     writeonly image unit named [1mout_image [22m(this is bound by mpv) using  [4mimageStore[24m.  To  help  translate
                     texture coordinates in the absence of vertices, mpv provides a special function [1mNAME_map(id) [22mto map
                     from the texel space of the output image to the texture coordinates for all bound textures. In par‚Äê
                     ticular, [1mNAME_pos [22mis equivalent to [1mNAME_map(gl_GlobalInvocationID)[22m, although using this only really
                     makes sense if (tw,th) == (bw,bh).

              Each bound mpv texture (via [1mBIND[22m) will make available the following definitions to that shader pass, where
              NAME is the name of the bound texture:

              [1mvec4 NAME_tex(vec2 pos)[0m
                     The  sampling function to use to access the texture at a certain spot (in texture coordinate space,
                     range [0,1]). This takes care of any necessary normalization conversions.

              [1mvec4 NAME_texOff(vec2 offset)[0m
                     Sample the texture at a certain offset in pixels. This works like NAME_tex but  additionally  takes
                     care of necessary rotations, so that sampling at e.g. vec2(-1,0) is always one pixel to the left.

              [1mvec2 NAME_pos[0m
                     The local texture coordinate of that texture, range [0,1].

              [1mvec2 NAME_size[0m
                     The (rotated) size in pixels of the texture.

              [1mmat2 NAME_rot[0m
                     The rotation matrix associated with this texture. (Rotates pixel space to texture coordinates)

              [1mvec2 NAME_pt[0m
                     The (unrotated) size of a single pixel, range [0,1].

              [1mfloat NAME_mul[0m
                     The  coefficient  that needs to be multiplied into the texture contents in order to normalize it to
                     the range [0,1].

              [1msampler NAME_raw[0m
                     The raw bound texture itself. The use of this should be avoided unless absolutely necessary.

              Normally, users should use either NAME_tex or NAME_texOff to read from the texture. For some shaders  how‚Äê
              ever  ,  it can be better for performance to do custom sampling from NAME_raw, in which case care needs to
              be taken to respect NAME_mul and NAME_rot.

              In addition to these parameters, the following uniforms are also globally available:

              [1mfloat random[0m
                     A random number in the range [0-1], different per frame.

              [1mint frame[0m
                     A simple count of frames rendered, increases by one per  frame  and  never  resets  (regardless  of
                     seeks).

              [1mvec2 input_size[0m
                     The size in pixels of the input image (possibly cropped and prescaled).

              [1mvec2 target_size[0m
                     The size in pixels of the visible part of the scaled (and possibly cropped) image.

              [1mvec2 tex_offset[0m
                     Texture offset introduced by user shaders or options like panscan, video-align-x/y, video-pan-x/y.

              Internally,  vo_gpu may generate any number of the following textures.  Whenever a texture is rendered and
              saved by vo_gpu, all of the passes that have hooked into it will run, in the order they were added by  the
              user. This is a list of the legal hook points:

              [1mRGB, LUMA, CHROMA, ALPHA, XYZ (resizable)[0m
                     Source planes (raw). Which of these fire depends on the image format of the source.

              [1mCHROMA_SCALED, ALPHA_SCALED (fixed)[0m
                     Source planes (upscaled). These only fire on subsampled content.

              [1mNATIVE (resizable)[0m
                     The combined image, in the source colorspace, before conversion to RGB.

              [1mMAINPRESUB (resizable)[0m
                     The image, after conversion to RGB, but before [1m--blend-subtitles=video [22mis applied.

              [1mMAIN (resizable)[0m
                     The main image, after conversion to RGB but before upscaling.

              [1mLINEAR (fixed)[0m
                     Linear  light  image, before scaling. This only fires when [1m--linear-upscaling[22m, [1m--linear-downscaling[0m
                     or [1m--sigmoid-upscaling [22mis in effect.

              [1mSIGMOID (fixed)[0m
                     Sigmoidized light, before scaling. This only fires when [1m--sigmoid-upscaling [22mis in effect.

              [1mPREKERNEL (fixed)[0m
                     The image immediately before the scaler kernel runs.

              [1mPOSTKERNEL (fixed)[0m
                     The image immediately after the scaler kernel runs.

              [1mSCALED (fixed)[0m
                     The final upscaled image, before color management.

              [1mOUTPUT (fixed)[0m
                     The final output image, after color management but before dithering and drawing to screen.

              Only the textures labelled with [1mresizable [22mmay be transformed by  the  pass.  When  overwriting  a  texture
              marked [1mfixed[22m, the WIDTH, HEIGHT and OFFSET must be left at their default values.

       [1m--glsl-shader=<file>[0m
              CLI/config file only alias for [1m--glsl-shaders-append[22m.

       [1m--glsl-shader-opts=param1=value1,param2=value2,...[0m
              Specifies  the options to use for tunable shader parameters. You can target specific named shaders by pre‚Äê
              fixing the shader name with a [1m/[22m,  e.g.   [1mshader/param=value[22m.  Without  a  prefix,  parameters  affect  all
              shaders.   The  shader name is the base part of the shader filename, without the extension. ([1m--vo=gpu-next[0m
              only)

       [1m--deband[0m
              Enable the debanding algorithm. This greatly reduces the amount of visible  banding,  blocking  and  other
              quantization  artifacts, at the expense of very slightly blurring some of the finest details. In practice,
              it's virtually always an improvement - the only reason to disable it would be for performance.

       [1m--deband-iterations=<0..16>[0m
              The number of debanding steps to perform per sample. Each step reduces a bit more banding, but takes  time
              to  compute.  Note that the strength of each step falls off very quickly, so high numbers (>4) are practi‚Äê
              cally useless.  (Default 1)

       [1m--deband-threshold=<0..4096>[0m
              The debanding filter's cut-off threshold. Higher numbers increase the debanding strength dramatically  but
              progressively diminish image details.  (Default 48)

       [1m--deband-range=<1..64>[0m
              The  debanding  filter's initial radius. The radius increases linearly for each iteration. A higher radius
              will find more gradients, but a lower radius will smooth more aggressively. (Default 16)

              If you increase the [1m--deband-iterations[22m, you should probably decrease this to compensate.

       [1m--deband-grain=<0..4096>[0m
              Add some extra noise to the image. This significantly helps cover  up  remaining  quantization  artifacts.
              Higher numbers add more noise. (Default 32)

       [1m--corner-rounding=<0..1>[0m
              If set to a value above 0.0, the output will be rendered with rounded corners, as if an alpha transparency
              mask  had been applied. The value indicates the relative fraction of the side length to round - a value of
              1.0 rounds the corners as much as possible. ([1m--vo=gpu-next [22monly)

       [1m--sharpen=<value>[0m
              If set to a value other than 0, enable an unsharp masking filter. Positive values will sharpen  the  image
              (but  add more ringing and aliasing). Negative values will blur the image. If your GPU is powerful enough,
              consider alternatives like the [1mewa_lanczossharp [22mscale  filter,  or  the  [1m--scale-blur  [22moption.  (Only  for
              [1m--vo=gpu[22m)

       [1m--opengl-glfinish[0m
              Call  [1mglFinish() [22mbefore swapping buffers (default: disabled). Slower, but might improve results when doing
              framedropping. Can completely ruin performance. The details depend entirely on the OpenGL driver.

       [1m--opengl-waitvsync[0m
              Call [1mglXWaitVideoSyncSGI [22mafter each buffer swap (default: disabled).  This may or may not help with  video
              timing  accuracy  and  frame  drop. It's possible that this makes video output slower, or has no effect at
              all.

              X11/GLX only.

       [1m--opengl-dwmflush=<no|windowed|yes|auto>[0m
              (Windows only) Calls [1mDwmFlush [22mafter swapping buffers on Windows (default: auto). It also  sets  [1mSwapInter‚Äê[0m
              [1mval(0) [22mto ignore the OpenGL timing. Values are: no (disabled), windowed (only in windowed mode), yes (also
              in full screen).

              The value [1mauto [22mwill try to determine whether the compositor is active, and calls [1mDwmFlush [22monly if it seems
              to be.

              This  may  help  to get more consistent frame intervals, especially with high-fps clips - which might also
              reduce dropped frames. Typically, a value of [1mwindowed [22mshould be enough, since full screen may  bypass  the
              DWM.

       [1m--angle-d3d11-feature-level=<11_0|10_1|10_0|9_3>[0m
              Selects  a specific feature level when using the ANGLE backend with D3D11.  By default, the highest avail‚Äê
              able feature level is used. This option can be used to select a lower feature level, which is mainly  use‚Äê
              ful  for  debugging.  Note that OpenGL ES 3.0 is only supported at feature level 10_1 or higher.  Most ex‚Äê
              tended OpenGL features will not work at lower feature levels (similar to [1m--gpu-dumb-mode[22m).

              Windows with ANGLE only.

       [1m--angle-d3d11-warp=<yes|no|auto>[0m
              Use WARP (Windows Advanced Rasterization Platform) when using  the  ANGLE  backend  with  D3D11  (default:
              auto).  This  is  a  high performance software renderer. By default, it is used when the Direct3D hardware
              does not support Direct3D 11 feature level 9_3. While the extended OpenGL features will  work  with  WARP,
              they can be very slow.

              Windows with ANGLE only.

       [1m--angle-egl-windowing=<yes|no|auto>[0m
              Use  ANGLE's built in EGL windowing functions to create a swap chain (default: auto). If this is set to [1mno[0m
              and the D3D11 renderer is in use, ANGLE's built in swap chain will not be used and  a  custom  swap  chain
              that is optimized for video rendering will be created instead. If set to [1mauto[22m, a custom swap chain will be
              used for D3D11 and the built in swap chain will be used for D3D9. This option is mainly for debugging pur‚Äê
              poses, in case the custom swap chain has poor performance or does not work.

              If set to [1myes[22m, the [1m--angle-flip [22moption will have no effect.

              Windows with ANGLE only.

       [1m--angle-flip=<yes|no>[0m
              Enable flip-model presentation, which avoids unnecessarily copying the backbuffer by sharing surfaces with
              the  DWM  (default: yes). This may cause performance issues with older drivers. If flip-model presentation
              is not supported (for example, on Windows 7 without the platform update), mpv will automatically fall back
              to the older bitblt presentation model.

              If set to [1mno[22m, the [1m--angle-swapchain-length [22moption will have no effect.

              Windows with ANGLE only.

       [1m--angle-renderer=<d3d9|d3d11|auto>[0m
              Forces a specific renderer when using the ANGLE backend (default: auto). In auto mode this will pick D3D11
              for systems that support Direct3D 11 feature level 9_3 or higher,  and  D3D9  otherwise.  This  option  is
              mainly  for  debugging  purposes.  Normally  there is no reason to force a specific renderer, though [1m--an‚Äê[0m
              [1mgle-renderer=d3d9 [22mmay give slightly better performance on old hardware. Note that the D3D9  renderer  only
              supports OpenGL ES 2.0, so most extended OpenGL features will not work if this renderer is selected (simi‚Äê
              lar to [1m--gpu-dumb-mode[22m).

              Windows with ANGLE only.

       [1m--macos-force-dedicated-gpu=<yes|no>[0m
              Deactivates the automatic graphics switching and forces the dedicated GPU.  (default: no)

              macOS only.

       [1m--cocoa-cb-sw-renderer=<yes|no|auto>[0m
              Use the Apple Software Renderer when using cocoa-cb (default: auto). If set to [1mno [22mthe software renderer is
              never  used and instead fails when a the usual pixel format could not be created, [1myes [22mwill always only use
              the software renderer, and [1mauto [22monly falls back to the software  renderer  when  the  usual  pixel  format
              couldn't be created.

              macOS only.

       [1m--cocoa-cb-10bit-context=<yes|no>[0m
              Creates  a  10bit  capable  pixel format for the context creation (default: yes).  Instead of 8bit integer
              framebuffer a 16bit half-float framebuffer is requested.

              macOS only.

       [1m--macos-title-bar-appearance=<appearance>[0m
              Sets the appearance of the title bar (default: auto). Not all combinations of appearances and  [1m--macos-ti‚Äê[0m
              [1mtle-bar-material [22mmaterials make sense or are unique. Appearances that are not supported by you current ma‚Äê
              cOS version fall back to the default value.  macOS and cocoa-cb only

              [1m<appearance> [22mcan be one of the following:

              [1mauto   [22mDetects the system settings and sets the title bar appearance appropriately. On macOS 10.14 it also
                     detects run time changes.

              [1maqua   [22mThe standard macOS Light appearance.

              [1mdarkAqua[0m
                     The standard macOS Dark appearance. (macOS 10.14+)

              [1mvibrantLight[0m
                     Light vibrancy appearance with.

              [1mvibrantDark[0m
                     Dark vibrancy appearance with.

              [1maquaHighContrast[0m
                     Light Accessibility appearance. (macOS 10.14+)

              [1mdarkAquaHighContrast[0m
                     Dark Accessibility appearance. (macOS 10.14+)

              [1mvibrantLightHighContrast[0m
                     Light vibrancy Accessibility appearance.  (macOS 10.14+)

              [1mvibrantDarkHighContrast[0m
                     Dark vibrancy Accessibility appearance.  (macOS 10.14+)

       [1m--macos-title-bar-material=<material>[0m
              Sets the material of the title bar (default: titlebar). All deprecated materials should not be used on ma‚Äê
              cOS  10.14+  because  their  functionality  is not guaranteed. Not all combinations of materials and [1m--ma‚Äê[0m
              [1mcos-title-bar-appearance [22mappearances make sense or are unique.  Materials that are not  supported  by  you
              current macOS version fall back to the default value.  macOS and cocoa-cb only

              [1m<material> [22mcan be one of the following:

              [1mtitlebar[0m
                     The standard macOS title bar material.

              [1mselection[0m
                     The standard macOS selection material.

              [1mmenu   [22mThe standard macOS menu material. (macOS 10.11+)

              [1mpopover[0m
                     The standard macOS popover material. (macOS 10.11+)

              [1msidebar[0m
                     The standard macOS sidebar material. (macOS 10.11+)

              [1mheaderView[0m
                     The standard macOS header view material.  (macOS 10.14+)

              [1msheet  [22mThe standard macOS sheet material. (macOS 10.14+)

              [1mwindowBackground[0m
                     The standard macOS window background material.  (macOS 10.14+)

              [1mhudWindow[0m
                     The standard macOS hudWindow material. (macOS 10.14+)

              [1mfullScreen[0m
                     The standard macOS full screen material.  (macOS 10.14+)

              [1mtoolTip[0m
                     The standard macOS tool tip material. (macOS 10.14+)

              [1mcontentBackground[0m
                     The standard macOS content background material.  (macOS 10.14+)

              [1munderWindowBackground[0m
                     The standard macOS under window background material.  (macOS 10.14+)

              [1munderPageBackground[0m
                     The standard macOS under page background material.  (deprecated in macOS 10.14+)

              [1mdark   [22mThe standard macOS dark material.  (deprecated in macOS 10.14+)

              [1mlight  [22mThe standard macOS light material.  (macOS 10.14+)

              [1mmediumLight[0m
                     The standard macOS mediumLight material.  (macOS 10.11+, deprecated in macOS 10.14+)

              [1multraDark[0m
                     The standard macOS ultraDark material.  (macOS 10.11+ deprecated in macOS 10.14+)

       [1m--macos-title-bar-color=<color>[0m
              Sets  the color of the title bar (default: completely transparent). Is influenced by [1m--macos-title-bar-ap‚Äê[0m
              [1mpearance [22mand [1m--macos-title-bar-material[22m.  See [1m--sub-color [22mfor color syntax.

       [1m--macos-fs-animation-duration=<default|0-1000>[0m
              Sets the fullscreen resize animation duration in ms (default: default).  The  default  value  is  slightly
              less than the system's animation duration (500ms) to prevent some problems when the end of an async anima‚Äê
              tion  happens at the same time as the end of the system wide fullscreen animation. Setting anything higher
              than 500ms will only prematurely cancel the resize animation after the system wide  animation  ended.  The
              upper limit is still set at 1000ms since it's possible that Apple or the user changes the system defaults.
              Anything higher than 1000ms though seems too long and shouldn't be set anyway.  (macOS and cocoa-cb only)

       [1m--macos-app-activation-policy=<regular|accessory|prohibited>[0m
              Changes  the App activation policy. With accessory the mpv icon in the Dock can be hidden. (default: regu‚Äê
              lar)

              macOS only.

       [1m--macos-geometry-calculation=<visible|whole>[0m
              This changes the rectangle which is used to calculate the screen position and size of the window (default:
              visible). [1mvisible [22mtakes the the menu bar and Dock into account and the  window  is  only  positioned/sized
              within  the  visible  screen frame rectangle, [1mwhole [22mtakes the whole screen frame rectangle and ignores the
              menu bar and Dock. Other previous restrictions still apply, like the window can't be placed on top of  the
              menu bar etc.

              macOS only.

       [1m--macos-render-timer=<timer>[0m
              Sets  the  mode  (default: callback) for syncing the rendering of frames to the display's vertical refresh
              rate.  macOS and Vulkan (macvk) only.

              [1m<timer> [22mcan be one of the following:

              [1mcallback[0m
                     Syncs to the CVDisplayLink callback

              [1mprecise[0m
                     Syncs to the time of the next vertical display refresh reported by the CVDisplayLink callback  pro‚Äê
                     vided information

              [1msystem [22mNo manual syncing, depend on the layer mechanic and the next drawable

       [1m--android-surface-size=<WxH>[0m
              Set dimensions of the rendering surface used by the Android gpu context.  Needs to be set by the embedding
              application  if  the  dimensions  change  during  runtime  (i.e.  if  the device is rotated), via the sur‚Äê
              faceChanged callback.

              Android with [1m--gpu-context=android [22monly.

       [1m--gpu-sw[0m
              Continue even if a software renderer is detected.

       [1m--gpu-context=<sys>[0m
              The value [1mauto [22m(the default) selects the GPU context. You can also pass [1mhelp [22mto get  a  complete  list  of
              compiled in backends (sorted by autoprobe order).

              [1mauto   [22mauto-select (default)

              [1mcocoa  [22mCocoa/macOS (deprecated, use --vo=libmpv instead)

              [1mwin    [22mWin32/WGL

              [1mwinvk  [22mVK_KHR_win32_surface

              [1mangle  [22mDirect3D11  through  the OpenGL ES translation layer ANGLE. This supports almost everything the [1mwin[0m
                     backend does (if the ANGLE build is new enough).

              [1mdxinterop (experimental)[0m
                     Win32, using WGL for rendering and Direct3D 9Ex for presentation. Works on Nvidia  and  AMD.  Newer
                     Intel chips with the latest drivers may also work.

              [1md3d11  [22mWin32, with native Direct3D 11 rendering.

              [1mx11    [22mX11/GLX (deprecated/legacy, EGL is preferred these days)

              [1mx11vk  [22mVK_KHR_xlib_surface

              [1mwayland[0m
                     Wayland/EGL

              [1mwaylandvk[0m
                     VK_KHR_wayland_surface

              [1mdrm    [22mDRM/EGL

              [1mdisplayvk[0m
                     VK_KHR_display.  This  backend is roughly the Vukan equivalent of DRM/EGL, allowing for direct ren‚Äê
                     dering via Vulkan without a display manager.

              [1mx11egl [22mX11/EGL

              [1mandroid[0m
                     Android/EGL. Requires [1m--wid [22mbe set to an [1mandroid.view.Surface[22m.

              [1mmacvk  [22mVulkan on macOS with a metal surface through a translation layer (experimental)

       [1m--gpu-api=<type>[0m
              Controls which type of graphics APIs will be accepted:

              [1mauto   [22mUse any available API (default)

              [1mopengl [22mAllow only OpenGL (requires OpenGL 2.1+ or GLES 2.0+)

              [1mvulkan [22mAllow only Vulkan (requires a valid/working [1m--spirv-compiler[22m)

              [1md3d11  [22mAllow only [1m--gpu-context=d3d11[0m

       [1m--opengl-es=<mode>[0m
              Controls which type of OpenGL context will be accepted:

              [1mauto   [22mAllow all types of OpenGL (default)

              [1myes    [22mOnly allow GLES

              [1mno     [22mOnly allow desktop/core GL

       [1m--fbo-format=<fmt>[0m
              Selects the internal format of textures used for FBOs. The format can influence performance and quality of
              the video output. [1mfmt [22mcan be one of:  rgb8,  rgb10,  rgb10_a2,  rgb16,  rgb16f,  rgb32f,  rgba12,  rgba16,
              rgba16f, rgba16hf, rgba32f.

              Default:  [1mauto[22m,  which first attempts to utilize 16bit float (rgba16f, rgba16hf), and falls back to rgba16
              if those are not available.  Finally, attempts to utilize rgb10_a2 or rgba8 if all of the previous formats
              are not available.

       [1m--gamma-factor=<0.1..2.0>[0m
              Set an additional raw gamma factor (default: 1.0). If gamma is adjusted  in  other  ways  (like  with  the
              [1m--gamma  [22moption  or  key  bindings  and  the [1mgamma [22mproperty), the value is multiplied with the other gamma
              value.

              This option is deprecated and may be removed in the future.

       [1m--gamma-auto[0m
              Automatically corrects the gamma value depending on ambient lighting conditions (adding a gamma boost  for
              bright rooms).

              This option is deprecated and may be removed in the future.

              NOTE: Only implemented on macOS.

       [1m--image-lut=<file>[0m
              Specifies  a custom LUT file (in Adobe .cube format) to apply to the colors during image decoding. The ex‚Äê
              act interpretation of the LUT depends on the value of [1m--image-lut-type[22m. (Only for [1m--vo=gpu-next[22m)

       [1m--image-lut-type=<value>[0m
              Controls the interpretation of color values fed to and from the LUT specified as [1m--image-lut[22m. Valid values
              are:

              [1mauto   [22mChooses the interpretation of the LUT automatically from tagged metadata, and otherwise falls  back
                     to [1mnative[22m. (Default)

              [1mnative [22mApplied  to  the  raw image contents in its native colorspace, before decoding to RGB. For example,
                     for a HDR10 image, this would be fed PQ-encoded YCbCr values in the range 0.0 - 1.0.

              [1mnormalized[0m
                     Applied to the normalized RGB image contents, after decoding from its native  color  encoding,  but
                     before linearization.

              [1mconversion[0m
                     Fully  replaces  the color decoding. A LUT of this type should ingest the image's native colorspace
                     and output normalized non-linear RGB.

       [1m--target-colorspace-hint[0m
              Automatically configure the output colorspace of the display to pass  through  the  input  values  of  the
              stream (e.g. for HDR passthrough), if possible. Requires a supporting driver and [1m--vo=gpu-next[22m.

       [1m--target-prim=<value>[0m
              Specifies  the  primaries  of  the display. Video colors will be adapted to this colorspace when ICC color
              management is not being used. Valid values are:

              [1mauto   [22mDisable any adaptation, except for atypical color spaces. Specifically, wide/unusual gamuts get au‚Äê
                     tomatically adapted to BT.709, while standard  gamut  (i.e.  BT.601  and  BT.709)  content  is  not
                     touched. (default)

              [1mbt.470m[0m
                     ITU-R BT.470 M

              [1mbt.601-525[0m
                     ITU-R BT.601 (525-line SD systems, eg. NTSC), SMPTE 170M/240M

              [1mbt.601-625[0m
                     ITU-R BT.601 (625-line SD systems, eg. PAL/SECAM), ITU-R BT.470 B/G

              [1mbt.709 [22mITU-R BT.709 (HD), IEC 61966-2-4 (sRGB), SMPTE RP177 Annex B

              [1mbt.2020[0m
                     ITU-R BT.2020 (UHD)

              [1mapple  [22mApple RGB

              [1madobe  [22mAdobe RGB (1998)

              [1mprophoto[0m
                     ProPhoto RGB (ROMM)

              [1mcie1931[0m
                     CIE 1931 RGB (not to be confused with CIE XYZ)

              [1mdci-p3 [22mDCI-P3 (Digital Cinema Colorspace), SMPTE RP431-2

              [1mv-gamut[0m
                     Panasonic V-Gamut (VARICAM) primaries

              [1ms-gamut[0m
                     Sony S-Gamut (S-Log) primaries

       [1m--target-trc=<value>[0m
              Specifies the transfer characteristics (gamma) of the display. Video colors will be adjusted to this curve
              when ICC color management is not being used.  Valid values are:

              [1mauto   [22mDisable any adaptation, except for atypical transfers. Specifically, HDR or linear light source ma‚Äê
                     terial gets automatically converted to gamma 2.2, while SDR content is not touched. (default)

              [1mbt.1886[0m
                     ITU-R BT.1886 curve (assuming infinite contrast)

              [1msrgb   [22mIEC 61966-2-4 (sRGB)

              [1mlinear [22mLinear light output

              [1mgamma1.8[0m
                     Pure power curve (gamma 1.8), also used for Apple RGB

              [1mgamma2.0[0m
                     Pure power curve (gamma 2.0)

              [1mgamma2.2[0m
                     Pure power curve (gamma 2.2)

              [1mgamma2.4[0m
                     Pure power curve (gamma 2.4)

              [1mgamma2.6[0m
                     Pure power curve (gamma 2.6)

              [1mgamma2.8[0m
                     Pure power curve (gamma 2.8), also used for BT.470-BG

              [1mprophoto[0m
                     ProPhoto RGB (ROMM)

              [1mpq     [22mITU-R BT.2100 PQ (Perceptual quantizer) curve, aka SMPTE ST2084

              [1mhlg    [22mITU-R BT.2100 HLG (Hybrid Log-gamma) curve, aka ARIB STD-B67

              [1mv-log  [22mPanasonic V-Log (VARICAM) curve

              [1ms-log1 [22mSony S-Log1 curve

              [1ms-log2 [22mSony S-Log2 curve

              [1mNOTE:[0m
                 When  using  HDR  output  formats,  mpv will encode to the specified curve but it will not set any HDMI
                 flags or other signalling that might be required for the target device to  correctly  display  the  HDR
                 signal.  The user should independently guarantee this before using these signal formats for display.

       [1m--target-peak=<auto|nits>[0m
              Specifies  the measured peak brightness of the output display, in cd/m^2 (AKA nits). The interpretation of
              this brightness depends on the configured [1m--target-trc[22m. In all cases, it imposes a  limit  on  the  signal
              values  that will be sent to the display. If the source exceeds this brightness level, a tone mapping fil‚Äê
              ter will be inserted. For HLG, it has the additional effect of parametrizing the inverse OOTF, in order to
              get colorimetrically consistent results with the mastering display. For SDR, or when using an ICC (profile
              ([1m--icc-profile[22m), setting this to a value above 203 essentially causes the display to be treated as  if  it
              were an HDR display in disguise. (See the note below)

              In  [1mauto  [22mmode  (the  default),  the  chosen peak is an appropriate value based on the TRC in use. For SDR
              curves, it uses 203. For HDR curves, it uses 203 * the transfer function's nominal peak.

              [1mNOTE:[0m
                 When using an SDR transfer function, this is normally not needed, and setting it may lead to very unex‚Äê
                 pected results. The one time it [4mis[24m useful is if you want to calibrate a HDR display  using  traditional
                 transfer  functions  and  calibration  equipment. In such cases, you can set your HDR display to a high
                 brightness such as 800 cd/m^2, and then calibrate it to a standard curve like  gamma2.8.  Setting  this
                 value  to  800  would  then instruct mpv to essentially treat it as an HDR display with the given peak.
                 This may be a good alternative in environments where PQ or HLG input to the display  is  not  possible,
                 and  makes it possible to use HDR displays with mpv regardless of operating system support for HDMI HDR
                 metadata.

                 In such a configuration, we highly recommend setting [1m--tone-mapping [22mto [1mmobius [22mor even [1mclip[22m.

       [1m--target-contrast=<auto|10-1000000|inf>[0m
              Specifies the measured contrast of the output display. [1m--target-contrast [22min conjunction with [1m--target-peak[0m
              value is used to calculate display black point. Used in black point compensation during HDR  tone-mapping.
              [1mauto  [22mis  the  default and assumes 1000:1 contrast as a typical SDR display would have or an infinite con‚Äê
              trast when HDR [1m--target-trc [22mis used.  [1minf [22mcontrast specifies display with perfect black level, in practice
              OLED.  (Only for [1m--vo=gpu-next[22m)

       [1m--target-gamut=<value>[0m
              Constrains the gamut of the display. You can use this option to output e.g.  DCIP3-in-BT.2020. Set  [1m--tar‚Äê[0m
              [1mget-prim  [22mto  the  primaries  of the containing colorspace (into which values will be encoded), and [1m--tar‚Äê[0m
              [1mget-gamut [22mto the gamut you want to limit colors to. Takes the same  values  as  [1m--target-prim[22m.  (Only  for
              [1m--vo=gpu-next[22m)

       [1m--target-lut=<file>[0m
              Specifies  a custom LUT file (in Adobe .cube format) to apply to the colors before display on-screen. This
              LUT is fed values in normalized RGB, after encoding into the target colorspace, so after  the  application
              of [1m--target-trc[22m. (Only for [1m--vo=gpu-next[22m)

       [1m--tone-mapping=<value>[0m
              Specifies  the  algorithm  used for tone-mapping images onto the target display. This is relevant for both
              HDR->SDR conversion as well as gamut reduction (e.g. playing back BT.2020 content on a standard gamut dis‚Äê
              play).  Valid values are:

              [1mauto   [22mChoose the best curve according to internal heuristics. (Default)

              [1mclip   [22mHard-clip any out-of-range values. Use this when you care about perfect color accuracy for in-range
                     values at the cost of completely distorting out-of-range values. Not generally recommended.

              [1mmobius [22mGeneralization of Reinhard to a M√∂bius transform with linear section.  Smoothly  maps  out-of-range
                     values while retaining contrast and colors for in-range material as much as possible. Use this when
                     you  care about color accuracy more than detail preservation. This is somewhere in between [1mclip [22mand
                     [1mreinhard[22m, depending on the value of [1m--tone-mapping-param[22m.

              [1mreinhard[0m
                     Reinhard tone mapping algorithm. Very simple continuous curve.  Preserves overall image  brightness
                     but  uses nonlinear contrast, which results in flattening of details and degradation in color accu‚Äê
                     racy.

              [1mhable  [22mSimilar to [1mreinhard [22mbut preserves both dark and bright details better (slightly sigmoidal), at  the
                     cost  of  slightly  darkening  /  desaturating everything. Developed by John Hable for use in video
                     games. Use this when you care about detail preservation more than color/brightness  accuracy.  This
                     is roughly equivalent to [1m--tone-mapping=reinhard --tone-mapping-param=0.24[22m. If possible, you should
                     also enable [1m--hdr-compute-peak [22mfor the best results.

              [1mbt.2390[0m
                     Perceptual tone mapping curve (EETF) specified in ITU-R Report BT.2390.

              [1mgamma  [22mFits a logarithmic transfer between the tone curves.

              [1mlinear [22mLinearly stretches the entire reference gamut to (a linear multiple of) the display.

              [1mspline [22mPerceptually linear single-pivot polynomial. ([1m--vo=gpu-next [22monly)

              [1mbt.2446a[0m
                     HDR<->SDR  mapping  specified  in ITU-R Report BT.2446, method A. This is the recommended curve for
                     well-mastered content. ([1m--vo=gpu-next [22monly)

              [1mst2094-40[0m
                     Dynamic HDR10+ tone-mapping method specified in SMPTE ST2094-40 Annex B. In the  absence  of  meta‚Äê
                     data,  falls back to a fixed spline matched to the input/output average brightness characteristics.
                     ([1m--vo=gpu-next [22monly)

              [1mst2094-10[0m
                     Dynamic tone-mapping method specified in SMPTE ST2094-10  Annex  B.2.   Conceptually  simpler  than
                     ST2094-40, and generally produces worse results.

       [1m--tone-mapping-param=<value>[0m
              Set tone mapping parameters. By default, this is set to the special string [1mdefault[22m, which maps to an algo‚Äê
              rithm-specific  default value. Ignored if the tone mapping algorithm is not tunable. This affects the fol‚Äê
              lowing tone mapping algorithms:

              [1mclip   [22mSpecifies an extra linear coefficient to multiply into the signal before clipping. Defaults to 1.0.

              [1mmobius [22mSpecifies the transition point from linear to mobius transform. Every value  below  this  point  is
                     guaranteed  to  be  mapped  1:1. The higher the value, the more accurate the result will be, at the
                     cost of losing bright details. Defaults to 0.3, which due to the steep  initial  slope  still  pre‚Äê
                     serves in-range colors fairly accurately.

              [1mreinhard[0m
                     Specifies  the  local  contrast  coefficient at the display peak. Defaults to 0.5, which means that
                     in-gamut values will be about half as bright as when clipping.

              [1mbt.2390[0m
                     Specifies the offset for the knee point. Defaults to 1.0, which is higher than the value  from  the
                     original ITU-R specification (0.5).  ([1m--vo=gpu-next [22monly)

              [1mgamma  [22mSpecifies the exponent of the function. Defaults to 1.8.

              [1mlinear [22mSpecifies the scale factor to use while stretching. Defaults to 1.0.

              [1mspline [22mSpecifies the knee point (in PQ space). Defaults to 0.30.

              [1mst2094-10[0m
                     Specifies the contrast (slope) at the knee point. Defaults to 1.0.

       [1m--inverse-tone-mapping[0m
              If  set, allows inverse tone mapping (expanding SDR to HDR). Not supported by all tone mapping curves. Use
              with caution. ([1m--vo=gpu-next [22monly)

       [1m--tone-mapping-max-boost=<1.0..10.0>[0m
              Upper limit for how much the tone mapping algorithm is allowed to boost the average brightness by over-ex‚Äê
              posing the image. The default value of 1.0 allows no additional brightness boost. A value of 2.0 would al‚Äê
              low over-exposing by a factor of 2, and so on. Raising this setting can help  reveal  details  that  would
              otherwise  be  hidden  in  dark  scenes,  but raising it too high will make dark scenes appear unnaturally
              bright. ([1m--vo=gpu [22monly)

       [1m--tone-mapping-visualize[0m
              Display a (PQ-PQ) graph of the active tone-mapping LUT. Intended only for debugging purposes. The  X  axis
              shows PQ input values, the Y axis shows PQ output values. The tone-mapping curve is shown in green/yellow.
              Yellow  means the brightness has been boosted from the source, dark blue regions show where the brightness
              has been reduced. The extra colored regions and lines indicate various monitor limits, as well a reference
              diagonal  (neutral  tone-mapping)  and  source  scene  average  brightness  information  (if   available).
              ([1m--vo=gpu-next [22monly)

       [1m--gamut-mapping-mode[0m
              Specifies  the algorithm used for reducing the gamut of images for the target display, after any tone map‚Äê
              ping is done.

              [1mauto   [22mChoose the best mode automatically. (Default)

              [1mclip   [22mHard-clip to the gamut (per-channel). Very low quality, but free.

              [1mperceptual[0m
                     Performs a perceptually balanced gamut mapping using a soft knee function to roll-off  clipped  re‚Äê
                     gions, and a hue shifting function to preserve saturation. ([1m--vo=gpu-next [22monly)

              [1mrelative[0m
                     Performs  relative  colorimetric  clipping,  while  maintaining an exponential relationship between
                     brightness and chromaticity.  ([1m--vo=gpu-next [22monly)

              [1msaturation[0m
                     Performs simple RGB->RGB saturation mapping. The input R/G/B channels are mapped directly onto  the
                     output  R/G/B  channels.  Will never clip, but will distort all hues and/or result in a faded look.
                     ([1m--vo=gpu-next [22monly)

              [1mabsolute[0m
                     Performs absolute colorimetric clipping. Like  [1mrelative[22m,  but  does  not  adapt  the  white  point.
                     ([1m--vo=gpu-next [22monly)

              [1mdesaturate[0m
                     Performs  constant-luminance  colorimetric  clipping, desaturing colors towards white until they're
                     in-range.

              [1mdarken [22mUniformly darkens the input slightly to prevent clipping on blown-out highlights, then clamps  col‚Äê
                     orimetrically to the input gamut boundary, biased slightly to preserve chromaticity over luminance.
                     ([1m--vo=gpu-next [22monly)

              [1mwarn   [22mPerforms no gamut mapping, but simply highlights out-of-gamut pixels.

              [1mlinear [22mLinearly/uniformly  desaturates the image in order to bring the entire image into the target gamut.
                     ([1m--vo=gpu-next [22monly)

       [1m--hdr-compute-peak=<auto|yes|no>[0m
              Compute the HDR peak and frame average brightness per-frame instead of relying on tagged  metadata.  These
              values  are averaged over local regions as well as over several frames to prevent the value from jittering
              around too much. This option basically gives  you  dynamic,  per-scene  tone  mapping.   Requires  compute
              shaders, which is a fairly recent OpenGL feature, and will probably also perform horribly on some drivers,
              so  enable  at your own risk.  The special value [1mauto [22m(default) will enable HDR peak computation automati‚Äê
              cally if compute shaders and SSBOs are supported.

       [1m--allow-delayed-peak-detect[0m
              When using [1m--hdr-compute-peak[22m, allow delaying the detected peak by a frame  when  beneficial  for  perfor‚Äê
              mance.  In particular, this is required to avoid an unnecessary FBO indirection when no advanced rendering
              is required otherwise. Has no effect if there already is an indirect pass, such as when  advanced  scaling
              is enabled. Defaults to no. (Only affects [1m--vo=gpu-next[22m, note that [1m--vo=gpu [22malways delays the peak.)

       [1m--hdr-peak-percentile=<0.0..100.0>[0m
              Which  percentile  of  the  input image brightness histogram to consider as the true peak of the scene. If
              this is set to 100 (default), the brightest pixel is measured. Otherwise, the top of the frequency distri‚Äê
              bution is progressively cut off. Setting this too low will cause clipping of very bright details, but  can
              improve the dynamic brightness range of scenes with very bright isolated highlights. Values other than 100
              come with a small performance penalty. (Only for [1m--vo=gpu-next[22m)

       [1m--hdr-peak-decay-rate=<0.0..1000.0>[0m
              The  decay  rate  used  for  the HDR peak detection algorithm (default: 20.0).  This is only relevant when
              [1m--hdr-compute-peak [22mis enabled. Higher values make the peak decay more slowly, leading to more stable  val‚Äê
              ues  at  the  cost  of  more  "eye  adaptation"-like  effects  (although  this  is  mitigated  somewhat by
              [1m--hdr-scene-threshold[22m). A value of 0.0 (the lowest possible) disables all averaging, meaning each  frame's
              value  is  used  directly  as measured, but doing this is not recommended for "noisy" sources since it may
              lead to excessive flicker. (In signal theory terms, this controls the time constant "tau" of  an  IIR  low
              pass filter)

       [1m--hdr-scene-threshold-low=<0.0..100.0>, --hdr-scene-threshold-high=<0.0..100.0>[0m
              The  lower  and  upper thresholds (in dB) for a brightness difference to be considered a scene change (de‚Äê
              fault: 1.0 low, 3.0 high). This is only relevant when [1m--hdr-compute-peak [22mis enabled. Normally, small fluc‚Äê
              tuations in the frame brightness are compensated for by the peak averaging mechanism, but for large  jumps
              in the brightness this can result in the frame remaining too bright or too dark for up to several seconds,
              depending  on the value of [1m--hdr-peak-decay-rate[22m. To counteract this, when the brightness between the run‚Äê
              ning average and the current frame exceeds the low threshold, mpv will make the averaging filter more  ag‚Äê
              gressive, up to the limit of the high threshold (at which point the filter becomes instant).

       [1m--hdr-contrast-recovery=<0.0..2.0>, --hdr-contrast-smoothness=<1.0..100.0>[0m
              Enables  the  HDR contrast recovery algorithm, which is to designed to enhance contrast of HDR video after
              tone mapping. The strength (default: 0.0) indicates the degree of contrast recovery, with 0.0  being  com‚Äê
              pletely disabled and 1.0 being 100% strength. Values higher than 1.0 are allowed, but may result in exces‚Äê
              sive  sharpening. The smoothness (default: 3.5) indicates the degree to which the HDR source is low-passed
              in order to obtain contrast information - a value of 2.0 corresponds to 2x downscaling.  Users on low  DPI
              displays  (<= 100) may want to lower this value, while users on very high DPI displays ("retina") may want
              to increase it. (Only for [1mvo=gpu-next[22m)

       [1m--use-embedded-icc-profile[0m
              Load the embedded ICC profile contained in media files such as PNG images.  (Default: yes). Note that this
              option only works when also using a display ICC profile ([1m--icc-profile [22mor  [1m--icc-profile-auto[22m),  and  also
              requires LittleCMS 2 support.

       [1m--icc-profile=<file>[0m
              Load  an  ICC  profile and use it to transform video RGB to screen output.  Needs LittleCMS 2 support com‚Äê
              piled in. This option overrides the [1m--target-prim[22m, [1m--target-trc [22mand [1m--icc-profile-auto [22moptions.

       [1m--icc-profile-auto[0m
              Automatically select the ICC display profile currently specified by the display settings of the  operating
              system.

              NOTE: On Windows, the default profile must be an ICC profile. WCS profiles are not supported.

              Applications   using   libmpv  with  the  render  API  need  to  provide  the  ICC  profile  via  [1mMPV_REN‚Äê[0m
              [1mDER_PARAM_ICC_PROFILE[22m.

       [1m--icc-cache[0m
              Store and load 3DLUTs created from the ICC profile on disk in the cache directory (Default: [1myes[22m). This can
              be used to speed up loading, since LittleCMS 2 can take a while to create a 3D LUT. Note that these  files
              contain uncompressed LUTs. Their size depends on the [1m--icc-3dlut-size[22m, and can be very big.

              NOTE:  On [1m--vo=gpu[22m, this is not cleaned automatically, so old, unused cache files may stick around indefi‚Äê
              nitely.

       [1m--icc-cache-dir[0m
              The directory where icc cache is stored.  Cache  is  stored  in  the  system's  cache  directory  (usually
              [1m~/.cache/mpv[22m) if this is unset.

       [1m--icc-intent=<value>[0m
              Specifies the ICC intent used for the color transformation (when using [1m--icc-profile[22m).

              [1m0      [22mperceptual

              [1m1      [22mrelative colorimetric (default)

              [1m2      [22msaturation

              [1m3      [22mabsolute colorimetric

       [1m--icc-3dlut-size=<auto|RxGxB>[0m
              Size of the 3D LUT generated from the ICC profile in each dimension. The default of [1mauto [22mmeans to pick the
              size automatically based on the profile characteristics. Sizes may range from 2 to 512.

              NOTE: Setting this option to anything other than [1mauto [22mis [1mstrongly [22mdiscouraged, except for testing.

       [1m--icc-force-contrast=<no|0-1000000|inf>[0m
              Override  the target device's detected contrast ratio by a specific value.  This is detected automatically
              from the profile if possible, but for some profiles it might be missing, causing the contrast  to  be  as‚Äê
              sumed  as  infinite. As a result, video may appear darker than intended. If this is the case, setting this
              option might help. This only affects BT.1886 content. The default of [1mno [22mmeans to use the  profile  values.
              The special value [1minf [22mcauses the BT.1886 curve to be treated as a pure power gamma 2.4 function.

       [1m--icc-use-luma[0m
              Use ICC profile luminance value. (Only for [1m--vo=gpu-next[22m)

       [1m--lut=<file>[0m
              Specifies a custom LUT (in Adobe .cube format) to apply to the colors as part of color conversion. The ex‚Äê
              act interpretation depends on the value of [1m--lut-type[22m. (Only for [1m--vo=gpu-next[22m)

       [1m--lut-type=<value>[0m
              Controls the interpretation of color values fed to and from the LUT specified as [1m--lut[22m. Valid values are:

              [1mauto   [22mChooses  the interpretation of the LUT automatically from tagged metadata, and otherwise falls back
                     to [1mnative[22m. (Default)

              [1mnative [22mApplied to raw image contents in its native RGB colorspace (non-linear light), before conversion to
                     the output color space.

              [1mnormalized[0m
                     Applied to the normalized RGB image contents, in linear light,  before  conversion  to  the  output
                     color space.

              [1mconversion[0m
                     Fully  replaces  the conversion from the image color space to the output color space. If such a LUT
                     is present, it has the highest priority, and overrides any ICC profiles, as well as options related
                     to tone mapping and output colorimetry ([1m--target-prim[22m, [1m--target-trc [22metc.).

       [1m--blend-subtitles=<yes|video|no>[0m
              Blend subtitles directly onto upscaled video frames, before interpolation  and/or  color  management  (de‚Äê
              fault:  no).  Enabling this causes subtitles to be affected by [1m--icc-profile[22m, [1m--target-prim[22m, [1m--target-trc[22m,
              [1m--interpolation[22m, [1m--gamma-factor [22mand [1m--glsl-shaders[22m. It also  increases  subtitle  performance  when  using
              [1m--interpolation[22m.

              The  downside  of enabling this is that it restricts subtitles to the visible portion of the video, so you
              can't have subtitles exist in the black margins below a video (for example).

              If [1mvideo [22mis selected, the behavior is similar to [1myes[22m, but subs are drawn at the video's native resolution,
              and scaled along with the video.

              [1mWARNING:[0m
                 This changes the way subtitle colors are handled. Normally, subtitle colors are assumed to be  in  sRGB
                 and  color  managed  as  such. Enabling this makes them treated as being in the video's color space in‚Äê
                 stead. This is good if you want things like softsubbed ASS signs to match the  video  colors,  but  may
                 cause SRT subtitles or similar to look slightly off.

       [1m--alpha=<blend-tiles|blend|yes|no>[0m
              Decides what to do if the input has an alpha component.

              [1mblend-tiles[0m
                     Blend the frame against a 16x16 gray/white tiles background (default).

              [1mblend  [22mBlend the frame against the background color ([1m--background[22m, normally black).

              [1myes    [22mTry to create a framebuffer with alpha component. This only makes sense if the video contains alpha
                     information  (which  is extremely rare) or if you make the background color transparent. May not be
                     supported on all platforms. If alpha framebuffers are unavailable, it silently falls back on a nor‚Äê
                     mal framebuffer. Note that if you set the [1m--fbo-format [22moption to a non-default value, a format with
                     alpha must be specified, or this won't work. Whether this really works  depends  on  the  windowing
                     system and desktop environment.

              [1mno     [22mIgnore alpha component.

       [1m--opengl-rectangle-textures[0m
              Force  use  of  rectangle  textures (default: no). Normally this shouldn't have any advantages over normal
              textures. Note that hardware decoding overrides this flag. Could be removed any time.

       [1m--background=<color>[0m
              Color used to draw parts of the mpv window not covered by video. See the [1m--sub-color [22moption for how colors
              are defined.

       [1m--gpu-tex-pad-x, --gpu-tex-pad-y[0m
              Enlarge the video source textures by this many pixels. For debugging only (normally textures are sized ex‚Äê
              actly, but due to hardware decoding interop we may have to deal with  additional  padding,  which  can  be
              tested with these options). Could be removed any time.

       [1m--opengl-early-flush=<yes|no|auto>[0m
              Call  [1mglFlush() [22mafter rendering a frame and before attempting to display it (default: auto). Can fix stut‚Äê
              tering in some cases, in other cases probably causes it. The [1mauto [22mmode will call  [1mglFlush()  [22monly  if  the
              renderer  is going to wait for a while after rendering, instead of flipping GL front and backbuffers imme‚Äê
              diately (i.e. it doesn't call it in display-sync mode).

              On macOS this is always deactivated because it only causes performance problems and other regressions.

       [1m--gpu-dumb-mode=<yes|no|auto>[0m
              This mode is extremely restricted, and will disable most extended features.  That  includes  high  quality
              scalers and custom shaders!

              It is intended for hardware that does not support FBOs (including GLES, which supports it insufficiently),
              or to get some more performance out of bad or old hardware.

              This  mode  is forced automatically if needed, and this option is mostly useful for debugging. The default
              of [1mauto [22mwill enable it automatically if nothing uses features which require FBOs.

              This option might be silently removed in the future.

       [1m--gpu-shader-cache[0m
              Store and load compiled GLSL shaders in the cache directory (Default: [1myes[22m). Normally,  shader  compilation
              is  very fast, so this is not usually needed. It mostly matters for anything based on D3D11 (including AN‚Äê
              GLE), as well as on some other proprietary drivers. Enabling this can improve startup performance on these
              platforms.

              NOTE: On [1m--vo=gpu[22m, is not cleaned automatically, so old, unused cache files may stick around indefinitely.

       [1m--gpu-shader-cache-dir[0m
              The directory where gpu shader cache is stored. Cache is stored in the system's cache  directory  (usually
              [1m~/.cache/mpv[22m) if this is unset.

       [1m--libplacebo-opts=<key>=<value>[,<key>=<value>[,...]][0m
              Passes  extra raw option to the libplacebo rendering backend (used by [1m--vo=gpu-next[22m). May override the ef‚Äê
              fects of any other options set using the normal options system. Requires libplacebo v6.309 or higher.  In‚Äê
              cluded for debugging purposes only. For more information, see:

              [4mhttps://libplacebo.org/options/[0m

   [1mMiscellaneous[0m
       [1m--display-tags=tag1,tags2,...[0m
              Set  the  list  of  tags  that should be displayed on the terminal. Tags that are in the list, but are not
              present in the played file, will not be shown.  If a value ends with [1m*[22m, all tags  are  matched  by  prefix
              (though there is no general globbing). Just passing [1m* [22messentially filtering.

              The default includes a common list of tags, call mpv with [1m--list-options [22mto see it.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

       [1m--mc=<seconds/frame>[0m
              Maximum A-V sync correction per frame (in seconds)

       [1m--autosync=<factor>[0m
              Gradually  adjusts  the A/V sync based on audio delay measurements.  Specifying [1m--autosync=0[22m, the default,
              will cause frame timing to be based entirely on audio delay measurements. Specifying [1m--autosync=1 [22mwill  do
              the  same, but will subtly change the A/V correction algorithm. An uneven video framerate in a video which
              plays fine with [1m--no-audio [22mcan often be helped by setting this to an integer value  greater  than  1.  The
              higher  the  value,  the closer the timing will be to [1m--no-audio[22m. Try [1m--autosync=30 [22mto smooth out problems
              with sound drivers which do not implement a perfect audio delay measurement. With this value, if large A/V
              sync offsets occur, they will only take about 1 or 2 seconds to settle out. This delay in reaction time to
              sudden A/V offsets should be the only side effect of turning this option on, for all sound drivers.

       [1m--video-timing-offset=<seconds>[0m
              Control how long before video display target time the frame should be  rendered  (default:  0.050).  If  a
              video frame should be displayed at a certain time, the VO will start rendering the frame earlier, and then
              will  perform  a blocking wait until the display time, and only then "swap" the frame to display. The ren‚Äê
              dering cannot start before the previous frame is displayed, so this value is  implicitly  limited  by  the
              video framerate. With normal video frame rates, the default value will ensure that rendering is always im‚Äê
              mediately  started after the previous frame was displayed. On the other hand, setting a too high value can
              reduce responsiveness with low FPS value.

              This option is interesting for client API users using the render API because you can stop it from limiting
              your FPS (see [1mmpv_render_context_render() [22mdocumentation).

              This applies only to audio timing modes  (e.g.  [1m--video-sync=audio[22m).  In  other  modes  ([1m--video-sync=dis‚Äê[0m
              [1mplay-...[22m), video timing relies on vsync blocking, and this option is not used.

       [1m--video-sync=<audio|...>[0m
              How the player synchronizes audio and video.

              If  you use this option, you usually want to set it to [1mdisplay-resample [22mto enable a timing mode that tries
              to not skip or repeat frames when for example playing 24fps video on a 24Hz screen.

              The modes starting with [1mdisplay- [22mtry to output video frames completely synchronously to the display, using
              the detected display vertical refresh rate as a hint how fast frames will be displayed on  average.  These
              modes change video speed slightly to match the display. See [1m--video-sync-...  [22moptions for fine tuning. The
              robustness  of  this  mode is further reduced by making a some idealized assumptions, which may not always
              apply in reality.  Behavior can depend on the VO and the system's video and audio  drivers.   Media  files
              must use constant framerate. Section-wise VFR might work as well with some container formats (but not e.g.
              mkv).

              Under  some  circumstances,  the  player automatically reverts to [1maudio [22mmode for some time or permanently.
              This can happen on very low framerate video, or if the framerate cannot be detected.

              Also in display-sync modes it can happen that interruptions to video playback (such as toggling fullscreen
              mode, or simply resizing the window) will skip the video frames that should have been displayed, while [1mau‚Äê[0m
              [1mdio [22mmode will display them after the renderer has resumed (typically resulting in a short A/V  desync  and
              the video "catching up").

              Before  mpv 0.30.0, there was a fallback to [1maudio [22mmode on severe A/V desync. This was changed for the sake
              of not sporadically stopping. Now, [1mdisplay-desync [22mdoes what it promises and may desync with  audio  by  an
              arbitrary amount, until it is manually fixed with a seek.

              These  modes also require a vsync blocked presentation mode. For OpenGL, this translates to [1m--opengl-swap‚Äê[0m
              [1minterval=1[22m. For Vulkan, it translates to [1m--vulkan-swap-mode=fifo [22m(or [1mfifo-relaxed[22m).

              The modes with [1mdesync [22min their names do not attempt to keep audio/video in  sync.  They  will  slowly  (or
              quickly) desync, until e.g. the next seek happens. These modes are meant for testing, not serious use.

              [1maudio  [22mTime video frames to audio. This is the most robust mode, because the player doesn't have to assume
                     anything  about  how  the display behaves. The disadvantage is that it can lead to occasional frame
                     drops or repeats. If audio is disabled, this uses the system clock. This is the default mode.

              [1mdisplay-resample[0m
                     Resample audio to match the video. This mode will also try to adjust audio speed to compensate  for
                     other  drift.  (This means it will play the audio at a different speed every once in a while to re‚Äê
                     duce the A/V difference.)

              [1mdisplay-resample-vdrop[0m
                     Resample audio to match the video. Drop video frames to compensate for drift.

              [1mdisplay-resample-desync[0m
                     Like the previous mode, but no A/V compensation.

              [1mdisplay-tempo[0m
                     Same as [1mdisplay-resample[22m, but apply audio speed changes to audio filters instead of  resampling  to
                     avoid the change in pitch. Beware that some audio filters don't do well with a speed close to 1. It
                     is  recommend  to  use a conditional profile to automatically switch to [1mdisplay-resample [22mwhen speed
                     gets too close to 1 for your filter setup. Use (speed * video_speed_correction) to get  the  actual
                     playback speed in the condition.  See [4mConditional[24m [4mauto[24m [4mprofiles[24m for details.

              [1mdisplay-vdrop[0m
                     Drop  or  repeat  video frames to compensate desyncing video. (Although it should have the same ef‚Äê
                     fects as [1maudio[22m, the implementation is very different.)

              [1mdisplay-adrop[0m
                     Drop or repeat audio data to compensate desyncing video. This mode will cause  severe  audio  arti‚Äê
                     facts if the real monitor refresh rate is too different from the reported or forced rate. Since mpv
                     0.33.0, this acts on entire audio frames, instead of single samples.

              [1mdisplay-desync[0m
                     Sync video to display, and let audio play on its own.

              [1mdesync [22mSync video according to system clock, and let audio play on its own.

       [1m--video-sync-max-factor=<value>[0m
              Maximum multiple for which to try to fit the video's FPS to the display's FPS (default: 5).

              For  example,  if  this is set to 1, the video FPS is forced to an integer multiple of the display FPS, as
              long as the speed change does not exceed the value set by [1m--video-sync-max-video-change[22m.

              See [1m--interpolation-threshold [22mfor how this option affects interpolation.

       [1m--video-sync-max-video-change=<value>[0m
              Maximum speed difference in percent that is applied to video with [1m--video-sync=display-...  [22m(default:  1).
              Display  sync  mode  will  be  disabled if the monitor and video refresh way do not match within the given
              range. It tries multiples as well: playing 30 fps video on a 60 Hz  screen  will  duplicate  every  second
              frame. Playing 24 fps video on a 60 Hz screen will play video in a 2-3-2-3-... pattern.

              The  default  settings  are not loose enough to speed up 23.976 fps video to 25 fps. We consider the pitch
              change too extreme to allow this behavior by default. Set this option to a value of [1m5 [22mto enable it.

              Note that [1m--video-sync=display-tempo [22mavoids this pitch change.

              Also note that in the [1m--video-sync=display-resample [22mor [1m--video-sync=display-tempo [22mmode, audio  speed  will
              additionally be changed by a small amount if necessary for A/V sync. See [1m--video-sync-max-audio-change[22m.

       [1m--video-sync-max-audio-change=<value>[0m
              Maximum [4madditional[24m speed difference in percent that is applied to audio with [1m--video-sync=display-... [22m(de‚Äê
              fault:  0.125).  Normally, the player plays the audio at the speed of the video. But if the difference be‚Äê
              tween audio and video position is too high, e.g. due to drift or other timing errors, it will  attempt  to
              speed  up  or slow down audio by this additional factor. Too low values could lead to video frame dropping
              or repeating if the A/V desync cannot be compensated, too high values could lead to chaotic frame dropping
              due to the audio "overshooting" and skipping multiple video frames before the sync logic can react.

       [1m--mf-fps=<value>[0m
              Framerate used when decoding from multiple PNG or JPEG files with [1mmf:// [22m(default: 1).

       [1m--mf-type=<value>[0m
              Input file type for [1mmf:// [22m(available: jpeg, png, tga, sgi). By default, this is guessed from the file  ex‚Äê
              tension.

       [1m--stream-dump=<destination-filename>[0m
              Instead  of  playing a file, read its byte stream and write it to the given destination file. The destina‚Äê
              tion is overwritten. Can be useful to test network-related behavior.

       [1m--stream-lavf-o=opt1=value1,opt2=value2,...[0m
              Set AVOptions on streams opened with libavformat. Unknown or  misspelled  options  are  silently  ignored.
              (They  are  mentioned  in the terminal output in verbose mode, i.e. [1m--v[22m. In general we can't print errors,
              because other options such as e.g. user agent are not available with all protocols,  and  printing  errors
              for unknown options would end up being too noisy.)

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

       [1m--backdrop-type=<auto|none|mica|acrylic|mica-alt>[0m
              (Windows only) Controls the backdrop/border style.

              [1mauto   [22mDefault Windows behavior

              [1mnone   [22mThe backdrop will be black or white depending on the system's theme settings.

              [1mmica   [22mEnables the Mica style, which is the default on Windows 11.

              [1macrylic[0m
                     Enables the Acrylic style (frosted glass look).

              [1mmica-alt[0m
                     Same as Mica, except reversed.

       [1m--window-affinity=<default|excludefromcmcapture|monitor>[0m
              (Windows only) Controls the window affinity behavior of mpv.

              [1mdefault[0m
                     Default Windows behavior

              [1mexcludefromcapture[0m
                     mpv's  window will be completely excluded from capture by external applications or screen recording
                     software.

              [1mmonitor[0m
                     Blacks out the mpv window

       [1m--vo-mmcss-profile=<name>[0m
              (Windows only) Set the MMCSS profile for the video renderer thread (default: [1mPlayback[22m).

       [1m--priority=<prio>[0m
              (Windows only) Set process priority for mpv according to the predefined priorities  available  under  Win‚Äê
              dows.

              Possible values of [1m<prio>[22m: idle|belownormal|normal|abovenormal|high|realtime

              [1mWARNING:[0m
                 Using realtime priority can cause system lockup.

       [1m--force-media-title=<string>[0m
              Force  the  contents of the [1mmedia-title [22mproperty to this value. Useful for scripts which want to set a ti‚Äê
              tle, without overriding the user's setting in [1m--title[22m.

       [1m--external-files=<file-list>[0m
              Load a file and add all of its tracks. This is useful to play different files together (for example  audio
              from  one file, video from another), or for advanced [1m--lavfi-complex [22mused (like playing two video files at
              the same time).

              Unlike [1m--sub-files [22mand [1m--audio-files[22m, this includes all tracks, and does not cause default  stream  selec‚Äê
              tion  over  the  "proper" file. This makes it slightly less intrusive. (In mpv 0.28.0 and before, this was
              not quite strictly enforced.)

              This is a path list option. See [4mList[24m [4mOptions[24m for details.

       [1m--external-file=<file>[0m
              CLI/config file only alias for [1m--external-files-append[22m. Each use of this option will add  a  new  external
              file.

       [1m--cover-art-files=<file-list>[0m
              Use  an external file as cover art while playing audio. This makes it appear on the track list and subject
              to automatic track selection. Options like [1m--audio-display [22mcontrol whether such tracks are supposed to  be
              selected.

              (The  difference to loading a file with [1m--external-files [22mis that video tracks will be marked as being pic‚Äê
              tures, which affects the auto-selection method. If the passed file is a video, only the first  frame  will
              be  decoded  and  displayed.  Enabling  the cover art track during playback may show a random frame if the
              source file is a video. Normally you're not supposed to pass videos to this option, so this paragraph  de‚Äê
              scribes the behavior coincidentally resulting from implementation details.)

              This is a path list option. See [4mList[24m [4mOptions[24m for details.

       [1m--cover-art-file=<file>[0m
              CLI/config  file  only alias for [1m--cover-art-files-append[22m. Each use of this option will add a new external
              file.

       [1m--cover-art-auto=<no|exact|fuzzy|all>[0m
              Whether to load _external_ cover art automatically. Similar to  [1m--sub-auto  [22mand  [1m--audio-file-auto[22m.  If  a
              video already has tracks (which are not marked as cover art), external cover art will not be loaded.

              [1mno     [22mDon't automatically load cover art.

              [1mexact  [22mLoad the media filename with an image file extension (default).

              [1mfuzzy  [22mLoad all cover art containing the media filename.

              [1mall    [22mLoad all images in the current directory.

              See [1m--cover-art-files [22mfor details about what constitutes cover art.

              See  [1m--audio-display  [22mhow  to  control display of cover art (this can be used to disable cover art that is
              part of the file).

       [1m--cover-art-auto-exts=ext1,ext2,...[0m
              Cover art extentions to try and match when using [1mcover-art-auto[22m.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

       [1m--cover-art-whitelist=<no|yes>[0m
              Whether to load files with a  filename  among  "AlbumArt",  "Album",  "cover",  "front",  "AlbumArtSmall",
              "Folder",  ".folder", "thumb", and an extension in [1m--cover-art-auto-exts[22m, as cover art. This has no effect
              if [1mcover-art-auto [22mis [1mno[22m.

              Default: [1myes[22m.

       [1m--autoload-files=<yes|no>[0m
              Automatically load/select external files (default: yes).

              If set to [1mno[22m, then do not automatically load external files as specified by [1m--sub-auto[22m,  [1m--audio-file-auto[0m
              and  [1m--cover-art-auto[22m.  If  external  files  are  forcibly added (like with [1m--sub-files[22m), they will not be
              auto-selected.

              This does not affect playlist expansion, redirection, or other loading of referenced files like  with  or‚Äê
              dered chapters.

       [1m--stream-record=<file>[0m
              Write  received/read  data from the demuxer to the given output file. The output file will always be over‚Äê
              written without asking. The output format is determined by the extension of the output file.

              Switching streams or seeking during recording might result in recording being stopped and/or broken files.
              Use with care.

              Seeking outside of the demuxer cache will result in "skips" in the output file, but  seeking  within   the
              demuxer  cache  should  not affect recording. One exception is when you seek back far enough to exceed the
              forward buffering size, in which case the cache stops actively reading. This will return in  dropped  data
              if it's a live stream.

              If  this  is set at runtime, the old file is closed, and the new file is opened. Note that this will write
              only data that is appended at the end of the cache, and the already cached data cannot be written. You can
              try the [1mdump-cache [22mcommand as an alternative.

              External files ([1m--audio-file [22metc.) are ignored by this, it works on the "main" file only. Using this  with
              files using ordered chapters or EDL files will also not work correctly in general.

              There  are  some  glitches with this because it uses FFmpeg's libavformat for writing the output file. For
              example, it's typical that it will only work if the output format is the same as the input format. This is
              the case even if it works with the [1mffmpeg [22mtool. One reason for this is that [1mffmpeg [22mand its libraries  con‚Äê
              tain certain hacks and workarounds for these issues, that are unavailable to outside users.

       [1m--lavfi-complex=<string>[0m
              Set  a "complex" libavfilter filter, which means a single filter graph can take input from multiple source
              audio and video tracks. The graph can result in a single audio or video output (or both).

              Currently, the filter graph labels are used to select the participating input tracks and audio/video  out‚Äê
              put. The following rules apply:

              ‚Ä¢ A label of the form [1maidN [22mselects audio track N as input (e.g.  [1maid1[22m).

              ‚Ä¢ A label of the form [1mvidN [22mselects video track N as input.

              ‚Ä¢ A label named [1mao [22mwill be connected to the audio output.

              ‚Ä¢ A label named [1mvo [22mwill be connected to the video output.

              Each  label  can be used only once. If you want to use e.g. an audio stream for multiple filters, you need
              to use the [1masplit [22mfilter. Multiple video or audio outputs are not possible, but you  can  use  filters  to
              merge them into one.

              It's  not  possible  to change the tracks connected to the filter at runtime, unless you explicitly change
              the [1mlavfi-complex [22mproperty and set new track assignments. When the graph is changed, the  track  selection
              is changed according to the used labels as well.

              Other  tracks,  as  long  as they're not connected to the filter, and the corresponding output is not con‚Äê
              nected to the filter, can still be freely changed with the normal methods.

              Note that the normal filter chains ([1m--af[22m, [1m--vf[22m) are applied between the complex graphs (e.g. [1mao [22mlabel) and
              the actual output.

                 Examples

                 ‚Ä¢ [1m--lavfi-complex='[aid1] [aid2] amix [ao]' [22mPlay audio track 1 and 2 at the same time.

                 ‚Ä¢ [1m--lavfi-complex='[vid1] [vid2] vstack [vo]' [22mStack video track 1 and 2 and play them at the same time.
                   Note that both tracks need to have the same width, or filter initialization will fail  (you  can  add
                   [1mscale  [22mfilters  before  the [1mvstack [22mfilter to fix the size).  To load a video track from another file,
                   you can use [1m--external-file=other.mkv[22m.

                 ‚Ä¢ [1m--lavfi-complex='[vid1] [vid2] [vid3] hstack=inputs=3 [vo]' [22mUse the inputs option to stack more  than
                   2 tracks.

                 ‚Ä¢ [1m--lavfi-complex='[aid1]  asplit [t1] [ao] ; [t1] showvolume [t2] ; [vid1] [t2] overlay [vo]' [22mPlay au‚Äê
                   dio track 1, and overlay the measured volume for each speaker over video track 1.

              See the FFmpeg libavfilter documentation for details on the available filters.

       [1m--metadata-codepage=<codepage>[0m
              Codepage for various input metadata (default: [1mauto[22m). This affects how file tags, chapter titles, etc.  are
              interpreted. In most cases, this merely evaluates to UTF-8 as non-UTF-8 codepages are obscure.

              See  [1m--sub-codepage  [22moption on how codepages are specified and further details regarding autodetection and
              codepage conversion. (The underlying code is the same.)

              Conversion is not applied to metadata that is updated at runtime.

[1mAUDIO OUTPUT DRIVERS[0m
       Audio output drivers are interfaces to different audio output facilities. The syntax is:

       [1m--ao=<driver1,driver2,...[,]>[0m
              Specify a priority list of audio output drivers to be used.

       If the list has a trailing ',', mpv will fall back on drivers not contained in the list.

       [1mNOTE:[0m
          See [1m--ao=help [22mfor a list of compiled-in audio output drivers. The driver [1m--ao=alsa [22mis preferred. [1m--ao=pulse [22mis
          preferred on systems where PulseAudio is used. On BSD systems, [1m--ao=oss [22mis preferred.

       Available audio output drivers are:

       [1malsa (Linux only)[0m
              ALSA audio output driver

              See [4mALSA[24m [4maudio[24m [4moutput[24m [4moptions[24m for options specific to this AO.

              [1mWARNING:[0m
                 To get  multichannel/surround  audio,  use  [1m--audio-channels=auto[22m.  The  default  for  this  option  is
                 [1mauto-safe[22m,  which  makes this audio output explicitly reject multichannel output, as there is no way to
                 detect whether a certain channel layout is actually supported.

                 You can also try [4musing[24m [4mthe[24m [4mupmix[24m [4mplugin[24m.  This setup enables multichannel audio on the  [1mdefault  [22mdevice
                 with  automatic  upmixing with shared access, so playing stereo and multichannel audio at the same time
                 will work as expected.

       [1moss    [22mOSS audio output driver

       [1mjack   [22mJACK (Jack Audio Connection Kit) audio output driver.

              The following global options are supported by this audio output:

              [1m--jack-port=<name>[0m
                     Connects to the ports with the given name (default: physical ports).

              [1m--jack-name=<client>[0m
                     Client name that is passed to JACK (default: [1mmpv[22m). Useful if you want to have  certain  connections
                     established automatically.

              [1m--jack-autostart=<yes|no>[0m
                     Automatically  start  jackd if necessary (default: disabled). Note that this tends to be unreliable
                     and will flood stdout with server messages.

              [1m--jack-connect=<yes|no>[0m
                     Automatically create connections to output ports (default: enabled).   When  enabled,  the  maximum
                     number of output channels will be limited to the number of available output ports.

              [1m--jack-std-channel-layout=<waveext|any>[0m
                     Select the standard channel layout (default: waveext). JACK itself has no notion of channel layouts
                     (i.e.  assigning  which speaker a given channel is supposed to map to) - it just takes whatever the
                     application outputs, and reroutes it to whatever the user defines. This means the user and the  ap‚Äê
                     plication are in charge of dealing with the channel layout. [1mwaveext [22muses WAVE_FORMAT_EXTENSIBLE or‚Äê
                     der,  which,  even  though it was defined by Microsoft, is the standard on many systems.  The value
                     [1many [22mmakes JACK accept whatever comes from the audio filter chain, regardless of channel layout  and
                     without  reordering.  This  mode is probably not very useful, other than for debugging or when used
                     with fixed setups.

       [1mcoreaudio (macOS only)[0m
              Native macOS audio output driver using AudioUnits and the CoreAudio sound server.

              Automatically redirects to [1mcoreaudio_exclusive [22mwhen playing compressed formats.

              The following global options are supported by this audio output:

              [1m--coreaudio-change-physical-format=<yes|no>[0m
                     Change the physical format to one similar to the requested audio format (default: no). This has the
                     advantage that multichannel audio output will actually work.  The  disadvantage  is  that  it  will
                     change the system-wide audio settings. This is equivalent to changing the [1mFormat [22msetting in the [1mAu‚Äê[0m
                     [1mdio  Devices  [22mdialog  in  the [1mAudio MIDI Setup [22mutility. Note that this does not affect the selected
                     speaker setup.

              [1m--coreaudio-spdif-hack=<yes|no>[0m
                     Try to pass through AC3/DTS data as PCM. This is useful for drivers which do not  report  AC3  sup‚Äê
                     port.  It  converts  the  AC3 data to float, and assumes the driver will do the inverse conversion,
                     which means a typical A/V receiver will pick it up as compressed IEC framed  AC3  stream,  ignoring
                     that  it's  marked  as  PCM. This disables normal AC3 passthrough (even if the device reports it as
                     supported). Use with extreme care.

       [1mcoreaudio_exclusive (macOS only)[0m
              Native macOS audio output driver using direct  device  access  and  exclusive  mode  (bypasses  the  sound
              server).

       [1mopenal [22mOpenAL audio output driver.

              [1m--openal-num-buffers=<2-128>[0m
                     Specify  the  number of audio buffers to use. Lower values are better for lower CPU usage. Default:
                     4.

              [1m--openal-num-samples=<256-32768>[0m
                     Specify the number of complete samples to use for each buffer. Higher values are better  for  lower
                     CPU usage. Default: 8192.

              [1m--openal-direct-channels=<yes|no>[0m
                     Enable  OpenAL  Soft's  direct channel extension when available to avoid tinting the sound with am‚Äê
                     bisonics or HRTF. Default: yes.

       [1mpulse  [22mPulseAudio audio output driver

              The following global options are supported by this audio output:

              [1m--pulse-host=<host>[0m
                     Specify the host to use. An empty <host> string uses a local connection, "localhost"  uses  network
                     transfer (most likely not what you want).

              [1m--pulse-buffer=<1-2000|native>[0m
                     Set the audio buffer size in milliseconds. A higher value buffers more data, and has a lower proba‚Äê
                     bility  of  buffer underruns. A smaller value makes the audio stream react faster, e.g. to playback
                     speed changes. "native" lets the sound server determine buffers.

              [1m--pulse-latency-hacks=<yes|no>[0m
                     Enable hacks to workaround PulseAudio timing bugs (default: no). If enabled, mpv will do  elaborate
                     latency  calculations  on its own. If disabled, it will use PulseAudio automatically updated timing
                     information. Disabling this might help with e.g. networked audio or some plugins, while enabling it
                     might help in some unknown situations (it used to be required to get good behavior on old  PulseAu‚Äê
                     dio versions).

                     If  you  have  stuttering  video  when  using  pulse,  try to enable this option. (Or try to update
                     PulseAudio.)

              [1m--pulse-allow-suspended=<yes|no>[0m
                     Allow mpv to use PulseAudio even if the sink is suspended (default: no).  Can be useful if PulseAu‚Äê
                     dio is running as a bridge to jack and mpv has its sink-input set to the one jack is using.

       [1mpipewire[0m
              PipeWire audio output driver

              The following global options are supported by this audio output:

              [1m--pipewire-buffer=<1-2000|native>[0m
                     Set the audio buffer size in milliseconds. A higher value buffers more data, and has a lower proba‚Äê
                     bility of buffer underruns. A smaller value makes the audio stream react faster, e.g.  to  playback
                     speed changes. "native" lets the sound server determine buffers.

              [1m--pipewire-remote=<remote>[0m
                     Specify  the  PipeWire  remote daemon name to connect to via local UNIX sockets.  An empty <remote>
                     string uses the default remote named [1mpipewire-0[22m.

              [1m--pipewire-volume-mode=<channel|global>[0m
                     Specify if the [1mao-volume [22mproperty should apply to the channel volumes or the global volume.  By de‚Äê
                     fault the channel volumes are used.

       [1msdl    [22mSDL 1.2+ audio output driver. Should work on any platform supported  by  SDL  1.2,  but  may  require  the
              [1mSDL_AUDIODRIVER [22menvironment variable to be set appropriately for your system.

              [1mNOTE:[0m
                 This driver is for compatibility with extremely foreign environments, such as systems where none of the
                 other drivers are available.

              The following global options are supported by this audio output:

              [1m--sdl-buflen=<length>[0m
                     Sets the audio buffer length in seconds. Is used only as a hint by the sound system. Playing a file
                     with [1m-v [22mwill show the requested and obtained exact buffer size. A value of 0 selects the sound sys‚Äê
                     tem default.

       [1mnull   [22mProduces  no  audio output but maintains video playback speed. You can use [1m--ao=null --ao-null-untimed [22mfor
              benchmarking.

              The following global options are supported by this audio output:

              [1m--ao-null-untimed[0m
                     Do not simulate timing of a perfect audio device. This means audio decoding will go as fast as pos‚Äê
                     sible, instead of timing it to the system clock.

              [1m--ao-null-buffer[0m
                     Simulated buffer length in seconds.

              [1m--ao-null-outburst[0m
                     Simulated chunk size in samples.

              [1m--ao-null-speed[0m
                     Simulated audio playback speed as a multiplier. Usually, a real audio device will not go exactly as
                     fast as the system clock. It will deviate just a little, and this option helps to simulate this.

              [1m--ao-null-latency[0m
                     Simulated device latency. This is additional to EOF.

              [1m--ao-null-broken-eof[0m
                     Simulate broken audio drivers, which always add the fixed device  latency  to  the  reported  audio
                     playback position.

              [1m--ao-null-broken-delay[0m
                     Simulate broken audio drivers, which don't report latency correctly.

              [1m--ao-null-channel-layouts[0m
                     If not empty, this is a [1m, [22mseparated list of channel layouts the AO allows. This can be used to test
                     channel layout selection.

              [1m--ao-null-format[0m
                     Force the audio output format the AO will accept. If unset accepts any.

       [1mpcm    [22mRaw PCM/WAVE file writer audio output

              The following global options are supported by this audio output:

              [1m--ao-pcm-waveheader=<yes|no>[0m
                     Include  or  do not include the WAVE header (default: included). When not included, raw PCM will be
                     generated.

              [1m--ao-pcm-file=<filename>[0m
                     Write the sound to [1m<filename> [22minstead of the default [1maudiodump.wav[22m. If [1mno-waveheader [22mis  specified,
                     the default is [1maudiodump.pcm[22m.

              [1m--ao-pcm-append=<yes|no>[0m
                     Append to the file, instead of overwriting it. Always use this with the [1mno-waveheader [22moption - with
                     [1mwaveheader [22mit's broken, because it will write a WAVE header every time the file is opened.

       [1msndio  [22mAudio output to the OpenBSD sndio sound system

              (Note: only supports mono, stereo, 4.0, 5.1 and 7.1 channel layouts.)

       [1mwasapi [22mAudio output to the Windows Audio Session API.

[1mVIDEO OUTPUT DRIVERS[0m
       Video output drivers are interfaces to different video output facilities. The syntax is:

       [1m--vo=<driver1,driver2,...[,]>[0m
              Specify a priority list of video output drivers to be used.

       If the list has a trailing [1m,[22m, mpv will fall back on drivers not contained in the list.

       [1mNOTE:[0m
          See [1m--vo=help [22mfor a list of compiled-in video output drivers.

          The  recommended  output  driver is [1m--vo=gpu[22m, which is the default. All other drivers are for compatibility or
          special purposes. If the default does not work, it will fallback to other drivers (in the same order as listed
          by [1m--vo=help[22m).

       Available video output drivers are:

       [1mgpu    [22mGeneral purpose, customizable, GPU-accelerated video output driver. It supports extended scaling  methods,
              dithering, color management, custom shaders, HDR, and more.

              See [4mGPU[24m [4mrenderer[24m [4moptions[24m for options specific to this VO.

              By default, mpv utilizes settings that balance quality and performance.  Additionally, two predefined pro‚Äê
              files are available: [1mfast [22mfor maximum performance and [1mhigh-quality [22mfor superior rendering quality. You can
              apply  a  specific  profile  using  the [1m--profile=<name> [22moption and inspect its contents using [1m--show-pro‚Äê[0m
              [1mfile=<name>[22m.

              This VO abstracts over several possible graphics APIs and windowing contexts, which can be influenced  us‚Äê
              ing the [1m--gpu-api [22mand [1m--gpu-context [22moptions.

              Hardware  decoding  over  OpenGL-interop  is supported to some degree. Note that in this mode, some corner
              case might not be gracefully handled, and color space conversion and chroma upsampling is generally in the
              hand of the hardware decoder APIs.

              [1mgpu [22mmakes use of FBOs by default. Sometimes you can achieve better quality or performance by changing  the
              [1m--fbo-format  [22moption to [1mrgb16f[22m, [1mrgb32f [22mor [1mrgb[22m. Known problems include Mesa/Intel not accepting [1mrgb16[22m, Mesa
              sometimes not being compiled with float texture support, and some macOS setups being very slow with  [1mrgb16[0m
              but fast with [1mrgb32f[22m. If you have problems, you can also try enabling the [1m--gpu-dumb-mode=yes [22moption.

       [1mgpu-next[0m
              Experimental  video  renderer  based  on  [1mlibplacebo[22m.  This  supports  almost  the same set of features as
              [1m--vo=gpu[22m. See [4mGPU[24m [4mrenderer[24m [4moptions[24m for a list.

              Should generally be faster and higher quality, but some features may still be missing or misbehave. Expect
              (and report!) bugs. See here for a list of known differences and bugs:

              [4mhttps://github.com/mpv-player/mpv/wiki/GPU-Next-vs-GPU[0m

       [1mxv (X11 only)[0m
              Uses the XVideo extension to enable hardware-accelerated display. This is the most compatible VO on X, but
              may be low-quality, and has issues with OSD and subtitle display.

              [1mNOTE:[0m
                 This driver is for compatibility with old systems.

              The following global options are supported by this video output:

              [1m--xv-adaptor=<number>[0m
                     Select a specific XVideo adapter (check xvinfo results).

              [1m--xv-port=<number>[0m
                     Select a specific XVideo port.

              [1m--xv-ck=<cur|use|set>[0m
                     Select the source from which the color key is taken (default: cur).

                     [1mcur    [22mThe default takes the color key currently set in Xv.

                     [1muse    [22mUse but do not set the color key from mpv (use the [1m--colorkey [22moption to change it).

                     [1mset    [22mSame as use but also sets the supplied color key.

              [1m--xv-ck-method=<none|man|bg|auto>[0m
                     Sets the color key drawing method (default: man).

                     [1mnone   [22mDisables color-keying.

                     [1mman    [22mDraw the color key manually (reduces flicker in some cases).

                     [1mbg     [22mSet the color key as window background.

                     [1mauto   [22mLet Xv draw the color key.

              [1m--xv-colorkey=<number>[0m
                     Changes the color key to an RGB value of your choice. [1m0x000000 [22mis black and [1m0xffffff [22mis white.

              [1m--xv-buffers=<number>[0m
                     Number of image buffers to use for the internal ringbuffer (default: 2).  Increasing this will  use
                     more  memory,  but might help with the X server not responding quickly enough if video FPS is close
                     to or higher than the display refresh rate.

       [1mx11 (X11 only)[0m
              Shared memory video output driver without hardware acceleration that works whenever X11 is present.

              Since mpv 0.30.0, you may need to use [1m--profile=sw-fast [22mto get decent performance.

              [1mNOTE:[0m
                 This is a fallback only, and should not be normally used.

       [1mvdpau (X11 only)[0m
              Uses the VDPAU interface to display and optionally also decode video.   Hardware  decoding  is  used  with
              [1m--hwdec=vdpau[22m.  Note that there is absolutely no reason to use this, other than compatibility. We strongly
              recommend that you use [1m--vo=gpu [22mwith [1m--hwdec=nvdec [22minstead.

              [1mNOTE:[0m
                 Earlier versions of mpv (and MPlayer, mplayer2) provided sub-options  to  tune  vdpau  post-processing,
                 like  [1mdeint[22m,  [1msharpen[22m,  [1mdenoise[22m, [1mchroma-deint[22m, [1mpullup[22m, [1mhqscaling[22m. These sub-options are deprecated, and
                 you should use the [1mvdpaupp [22mvideo filter instead.

              The following global options are supported by this video output:

              [1m--vo-vdpau-sharpen=<-1-1>[0m
                     (Deprecated. See note about [1mvdpaupp[22m.)

                     For positive values, apply a sharpening algorithm to the video, for negative values a blurring  al‚Äê
                     gorithm (default: 0).

              [1m--vo-vdpau-denoise=<0-1>[0m
                     (Deprecated. See note about [1mvdpaupp[22m.)

                     Apply a noise reduction algorithm to the video (default: 0; no noise reduction).

              [1m--vo-vdpau-chroma-deint[0m
                     (Deprecated. See note about [1mvdpaupp[22m.)

                     Makes  temporal  deinterlacers  operate  both on luma and chroma (default).  Use no-chroma-deint to
                     solely use luma and speed up advanced deinterlacing. Useful with slow video memory.

              [1m--vo-vdpau-pullup[0m
                     (Deprecated. See note about [1mvdpaupp[22m.)

                     Try to apply inverse telecine, needs motion adaptive temporal deinterlacing.

              [1m--vo-vdpau-hqscaling=<0-9>[0m
                     (Deprecated. See note about [1mvdpaupp[22m.)

                     [1m0      [22mUse default VDPAU scaling (default).

                     [1m1-9    [22mApply high quality VDPAU scaling (needs capable hardware).

              [1m--vo-vdpau-fps=<number>[0m
                     Override autodetected display refresh rate value (the value is needed for framedrop to allow  video
                     playback rates higher than display refresh rate, and for vsync-aware frame timing adjustments). De‚Äê
                     fault  0  means use autodetected value. A positive value is interpreted as a refresh rate in Hz and
                     overrides the autodetected value. A negative value disables all  timing  adjustment  and  framedrop
                     logic.

              [1m--vo-vdpau-composite-detect[0m
                     NVIDIA's  current VDPAU implementation behaves somewhat differently under a compositing window man‚Äê
                     ager and does not give accurate frame timing information. With  this  option  enabled,  the  player
                     tries to detect whether a compositing window manager is active. If one is detected, the player dis‚Äê
                     ables  timing  adjustments as if the user had specified [1mfps=-1 [22m(as they would be based on incorrect
                     input). This means timing is somewhat less accurate than without compositing, but with the  compos‚Äê
                     ited  mode  behavior  of  the NVIDIA driver, there is no hard playback speed limit even without the
                     disabled logic. Enabled by default, use [1m--vo-vdpau-composite-detect=no [22mto disable.

              [1m--vo-vdpau-queuetime-windowed=<number> and queuetime-fs=<number>[0m
                     Use VDPAU's presentation queue functionality to queue future video frame changes at most this  many
                     milliseconds in advance (default: 50).  See below for additional information.

              [1m--vo-vdpau-output-surfaces=<2-15>[0m
                     Allocate  this  many output surfaces to display video frames (default: 3). See below for additional
                     information.

              [1m--vo-vdpau-colorkey=<#RRGGBB|#AARRGGBB>[0m
                     Set the VDPAU presentation queue background color, which in practice is the colorkey used if  VDPAU
                     operates  in  overlay  mode (default: [1m#020507[22m, some shade of black). If the alpha component of this
                     value is 0, the default VDPAU colorkey will be used instead (which is usually green).

              [1m--vo-vdpau-force-yuv[0m
                     Never accept RGBA input. This means mpv will insert a filter to convert to a YUV format before  the
                     VO.  Sometimes  useful  to force availability of certain YUV-only features, like video equalizer or
                     deinterlacing.

              Using the VDPAU frame queuing functionality controlled by the queuetime options  makes  mpv's  frame  flip
              timing  less sensitive to system CPU load and allows mpv to start decoding the next frame(s) slightly ear‚Äê
              lier, which can reduce jitter caused by individual slow-to-decode frames.  However,  the  NVIDIA  graphics
              drivers  can  make  other  window  behavior  such  as window moves choppy if VDPAU is using the blit queue
              (mainly happens if you have the composite extension enabled) and this feature is active. If  this  happens
              on  your  system and it bothers you then you can set the queuetime value to 0 to disable this feature. The
              settings to use in windowed and fullscreen mode are separate because there should be no reason to  disable
              this for fullscreen mode (as the driver issue should not affect the video itself).

              You  can  queue more frames ahead by increasing the queuetime values and the [1moutput_surfaces [22mcount (to en‚Äê
              sure enough surfaces to buffer video for a certain time ahead you need at least as many  surfaces  as  the
              video  has frames during that time, plus two). This could help make video smoother in some cases. The main
              downsides are increased video RAM requirements for the surfaces and laggier display response to user  com‚Äê
              mands  (display changes only become visible some time after they're queued). The graphics driver implemen‚Äê
              tation may also have limits on the length of maximum queuing time or number of queued surfaces  that  work
              well or at all.

       [1mdirect3d (Windows only)[0m
              Video output driver that uses the Direct3D interface.

              [1mNOTE:[0m
                 This driver is for compatibility with systems that don't provide proper OpenGL drivers, and where ANGLE
                 does not perform well.

              The following global options are supported by this video output:

              [1m--vo-direct3d-disable-texture-align[0m
                     Normally  texture  sizes are always aligned to 16. With this option enabled, the video texture will
                     always have exactly the same size as the video itself.

              Debug options. These might be incorrect, might be removed in the future, might  crash,  might  cause  slow
              downs, etc. Contact the developers if you actually need any of these for performance or proper operation.

              [1m--vo-direct3d-force-power-of-2[0m
                     Always  force  textures  to  power of 2, even if the device reports non-power-of-2 texture sizes as
                     supported.

              [1m--vo-direct3d-texture-memory=<mode>[0m
                     Only affects operation with shaders/texturing enabled, and (E)OSD.  Possible values:

                     [1mdefault (default)[0m
                            Use [1mD3DPOOL_DEFAULT[22m, with a [1mD3DPOOL_SYSTEMMEM [22mtexture for locking. If  the  driver  supports
                            [1mD3DDEVCAPS_TEXTURESYSTEMMEMORY[22m, [1mD3DPOOL_SYSTEMMEM [22mis used directly.

                     [1mdefault-pool[0m
                            Use [1mD3DPOOL_DEFAULT[22m. (Like [1mdefault[22m, but never use a shadow-texture.)

                     [1mdefault-pool-shadow[0m
                            Use [1mD3DPOOL_DEFAULT[22m, with a [1mD3DPOOL_SYSTEMMEM [22mtexture for locking. (Like [1mdefault[22m, but always
                            force the shadow-texture.)

                     [1mmanaged[0m
                            Use [1mD3DPOOL_MANAGED[22m.

                     [1mscratch[0m
                            Use [1mD3DPOOL_SCRATCH[22m, with a [1mD3DPOOL_SYSTEMMEM [22mtexture for locking.

              [1m--vo-direct3d-swap-discard[0m
                     Use  [1mD3DSWAPEFFECT_DISCARD[22m,  which might be faster.  Might be slower too, as it must(?) clear every
                     frame.

              [1m--vo-direct3d-exact-backbuffer[0m
                     Always resize the backbuffer to window size.

       [1msdl    [22mSDL 2.0+ Render video output driver, depending on system with or  without  hardware  acceleration.  Should
              work on all platforms supported by SDL 2.0.  For tuning, refer to your copy of the file [1mSDL_hints.h[22m.

              [1mNOTE:[0m
                 This driver is for compatibility with systems that don't provide proper graphics drivers.

              The following global options are supported by this video output:

              [1m--sdl-sw[0m
                     Continue even if a software renderer is detected.

              [1m--sdl-switch-mode[0m
                     Instruct SDL to switch the monitor video mode when going fullscreen.

       [1mdmabuf-wayland[0m
              Experimental Wayland output driver designed for use with either drm stateless or VA API hardware decoding.
              The  driver  is designed to avoid any GPU to CPU copies, and to perform scaling and color space conversion
              using fixed-function hardware, if available, rather than GPU shaders. This  frees  up  GPU  resources  for
              other  tasks.   It  is  highly  recommended  to  use  this  VO with the appropriate [1m--hwdec [22moption such as
              [1mauto-safe[22m. It can still work in some circumstances without [1m--hwdec [22mdue to mpv's internal  conversion  fil‚Äê
              ters,  but  this  is not recommended as it's a needless extra step. Correct output depends on support from
              your GPU, drivers, and compositor.  Weston and wlroots-based compositors like  Sway  and  Intel  GPUs  are
              known to generally work.

       [1mvaapi  [22mIntel VA API video output driver with support for hardware decoding. Note that there is absolutely no rea‚Äê
              son to use this, other than compatibility.  This is low quality, and has issues with OSD. We strongly rec‚Äê
              ommend that you use [1m--vo=gpu [22mwith [1m--hwdec=vaapi [22minstead.

              The following global options are supported by this video output:

              [1m--vo-vaapi-scaling=<algorithm>[0m

                     [1mdefault[0m
                            Driver default (mpv default as well).

                     [1mfast   [22mFast, but low quality.

                     [1mhq     [22mUnspecified driver dependent high-quality scaling, slow.

                     [1mnla    non-linear anamorphic scaling[0m

              [1m--vo-vaapi-scaled-osd=<yes|no>[0m
                     If  enabled,  then the OSD is rendered at video resolution and scaled to display resolution. By de‚Äê
                     fault, this is disabled, and the OSD is rendered at display resolution if the driver supports it.

       [1mnull   [22mProduces no video output. Useful for benchmarking.

              Usually, it's better to disable video with [1m--no-video [22minstead.

              The following global options are supported by this video output:

              [1m--vo-null-fps=<value>[0m
                     Simulate display FPS. This artificially limits how many frames the VO accepts per second.

       [1mcaca   [22mColor ASCII art video output driver that works on a text console.

              [1mNOTE:[0m
                 This driver is a joke.

       [1mtct    [22mColor Unicode art video output driver that works on a text console.  By default depends on support of true
              color by modern terminals to display the images at full color range, but 256-colors output  is  also  sup‚Äê
              ported (see below). On Windows it requires an ansi terminal such as mintty.

              Since mpv 0.30.0, you may need to use [1m--profile=sw-fast [22mto get decent performance.

              Note: the TCT image output is not synchronized with other terminal output from mpv, which can lead to bro‚Äê
              ken images. The options [1m--no-terminal [22mor [1m--really-quiet [22mcan help with that.

              [1m--vo-tct-algo=<algo>[0m
                     Select how to write the pixels to the terminal.

                     [1mhalf-blocks[0m
                            Uses unicode LOWER HALF BLOCK character to achieve higher vertical resolution. (Default.)

                     [1mplain  [22mUses  spaces.  Causes  vertical  resolution  to  drop  twofolds, but in theory works in more
                            places.

              [1m--vo-tct-width=<width> --vo-tct-height=<height>[0m
                     Assume the terminal has the specified character width and/or height.  These default to 80x25 if the
                     terminal size cannot be determined.

              [1m--vo-tct-256=<yes|no> (default: no)[0m
                     Use 256 colors - for terminals which don't support true color.

       [1mkitty  [22mGraphical output for the terminal, using the kitty graphics protocol.  Tested with kitty and Konsole.

              You may need to use [1m--profile=sw-fast [22mto get decent performance.

              Kitty size and alignment options:

              [1m--vo-kitty-cols=<columns>, --vo-kitty-rows=<rows> (default: 0)[0m
                     Specify the terminal size in character cells, otherwise (0) read it from the terminal, or fall back
                     to 80x25.

              [1m--vo-kitty-width=<width>, --vo-kitty-height=<height> (default: 0)[0m
                     Specify the available size in pixels, otherwise (0) read it from the  terminal,  or  fall  back  to
                     320x240.

              [1m--vo-kitty-left=<col>, --vo-kitty-top=<row> (default: 0)[0m
                     Specify the position in character cells where the image starts (1 is the first column or row). If 0
                     (default) then try to automatically determine it according to the other values and the image aspect
                     ratio and zoom.

              [1m--vo-kitty-config-clear=<yes|no> (default: yes)[0m
                     Whether  or  not  to  clear  the terminal whenever the output is reconfigured (e.g. when video size
                     changes).

              [1m--vo-kitty-alt-screen=<yes|no> (default: yes)[0m
                     Whether or not to use the alternate screen buffer and return the terminal to its previous state  on
                     exit.  When  set  to no, the last kitty image stays on screen after quit, with the cursor following
                     it.

              [1m--vo-kitty-use-shm=<yes|no> (default: no)[0m
                     Use shared memory objects to transfer image data to the terminal.  This is much faster than sending
                     the data as escape codes, but is not supported by as many terminals. It also only works on the  lo‚Äê
                     cal machine and not via e.g. SSH connections.

                     This option is not implemented on Windows.

       [1msixel  [22mGraphical output for the terminal, using sixels. Tested with [1mmlterm [22mand [1mxterm[22m.

              Note:  the  Sixel  image output is not synchronized with other terminal output from mpv, which can lead to
              broken images.  The option [1m--really-quiet [22mcan help with that, and is recommended.  On some platforms,  us‚Äê
              ing the [1m--vo-sixel-buffered [22moption may work as well.

              You may need to use [1m--profile=sw-fast [22mto get decent performance.

              Note:  at  the  time of writing, [1mxterm [22mdoes not enable sixel by default - launching it as [1mxterm -ti 340 [22mis
              one way to enable it. Also, [1mxterm [22mdoes not display images bigger than 1000x1000 pixels by default.

              To render and align sixel images correctly, mpv needs to know the terminal size both in cells and in  pix‚Äê
              els.  By  default  it  tries to use values which the terminal reports, however, due to differences between
              terminals this is an error-prone process which cannot be automated with certainty - some terminals  report
              the  size  in  pixels  including the padding - e.g. [1mxterm[22m, while others report the actual usable number of
              pixels - like [1mmlterm[22m.  Additionally, they may behave differently when maximized or in fullscreen, and  mpv
              cannot detect this state using standard methods.

              Sixel size and alignment options:

              [1m--vo-sixel-cols=<columns>, --vo-sixel-rows=<rows> (default: 0)[0m
                     Specify the terminal size in character cells, otherwise (0) read it from the terminal, or fall back
                     to  80x25.  Note  that  mpv doesn't use the the last row with sixel because this seems to result in
                     scrolling.

              [1m--vo-sixel-width=<width>, --vo-sixel-height=<height> (default: 0)[0m
                     Specify the available size in pixels, otherwise (0) read it from the  terminal,  or  fall  back  to
                     320x240.  Other than excluding the last line, the height is also further rounded down to a multiple
                     of 6 (sixel unit height) to avoid overflowing below the designated size.

              [1m--vo-sixel-left=<col>, --vo-sixel-top=<row> (default: 0)[0m
                     Specify the position in character cells where the image starts (1 is the first column or row). If 0
                     (default) then try to automatically determine it according to the other values and the image aspect
                     ratio and zoom.

              [1m--vo-sixel-pad-x=<pad_x>, --vo-sixel-pad-y=<pad_y> (default: -1)[0m
                     Used only when mpv reads the size in pixels from the terminal.  Specify the number of padding  pix‚Äê
                     els  (on  one side) which are included at the size which the terminal reports. If -1 (default) then
                     the number of pixels is rounded down to a multiple of number of cells (per axis), to take into  ac‚Äê
                     count  padding  at  the  report  -  this  only works correctly when the overall padding per axis is
                     smaller than the number of cells.

              [1m--vo-sixel-config-clear=<yes|no> (default: yes)[0m
                     Whether or not to clear the terminal whenever the output is  reconfigured  (e.g.  when  video  size
                     changes).

              [1m--vo-sixel-alt-screen=<yes|no> (default: yes)[0m
                     Whether  or not to use the alternate screen buffer and return the terminal to its previous state on
                     exit. When set to no, the last sixel image stays on screen after quit, with  the  cursor  following
                     it.

                     [1m--vo-sixel-exit-clear [22mis a deprecated alias for this option and may be removed in the future.

              [1m--vo-sixel-buffered=<yes|no> (default: no)[0m
                     Buffers  the  full output sequence before writing it to the terminal.  On POSIX platforms, this can
                     help prevent interruption (including from other applications) and thus broken images, but may  come
                     at a performance cost with some terminals and is subject to implementation details.

              Sixel image quality options:

              [1m--vo-sixel-dither=<algo>[0m
                     Selects the dither algorithm which libsixel should apply.  Can be one of the below list as per lib‚Äê
                     sixel's documentation.

                     [1mauto (Default)[0m
                            Let libsixel choose the dithering method.

                     [1mnone   [22mDon't diffuse

                     [1matkinson[0m
                            Diffuse with Bill Atkinson's method.

                     [1mfs     [22mDiffuse with Floyd-Steinberg method

                     [1mjajuni [22mDiffuse with Jarvis, Judice & Ninke method

                     [1mstucki [22mDiffuse with Stucki's method

                     [1mburkes [22mDiffuse with Burkes' method

                     [1marithmetic[0m
                            Positionally stable arithmetic dither

                     [1mxor    [22mPositionally stable arithmetic xor based dither

              [1m--vo-sixel-fixedpalette=<yes|no> (default: yes)[0m
                     Use  libsixel's  built-in  static palette using the XTERM256 profile for dither. Fixed palette uses
                     256 colors for dithering. Note that using [1mno [22m(at the time of writing) will slow down [1mxterm[22m.

              [1m--vo-sixel-reqcolors=<colors> (default: 256)[0m
                     Has no effect with fixed palette. Set up libsixel to use required  number  of  colors  for  dynamic
                     palette.  This  value  depends on the terminal emulator as well. Xterm supports 256 colors. Can set
                     this to a lower value for faster performance.

              [1m--vo-sixel-threshold=<threshold> (default: -1)[0m
                     Has no effect with fixed palette. Defines the threshold to change the palette -  as  percentage  of
                     the  number  of  colors,  e.g. 20 will change the palette when the number of colors changed by 20%.
                     It's a simple measure to reduce the number of palette changes, because it can be slow in some  ter‚Äê
                     minals ([1mxterm[22m). The default (-1) will choose a palette on every frame and will have better quality.

       [1mimage  [22mOutput  each  frame  into  an image file in the current directory. Each file takes the frame number padded
              with leading zeros as name.

              The following global options are supported by this video output:

              [1m--vo-image-format=<format>[0m
                     Select the image file format.

                     [1mjpg    [22mJPEG files, extension .jpg. (Default.)

                     [1mjpeg   [22mJPEG files, extension .jpeg.

                     [1mpng    [22mPNG files.

                     [1mwebp   [22mWebP files.

              [1m--vo-image-png-compression=<0-9>[0m
                     PNG compression factor (speed vs. file size tradeoff) (default: 7)

              [1m--vo-image-png-filter=<0-5>[0m
                     Filter applied prior to PNG compression (0 = none; 1 = sub; 2 = up; 3 = average; 4  =  Paeth;  5  =
                     mixed) (default: 5)

              [1m--vo-image-jpeg-quality=<0-100>[0m
                     JPEG quality factor (default: 90)

              [1m--vo-image-jpeg-optimize=<0-100>[0m
                     JPEG optimization factor (default: 100)

              [1m--vo-image-webp-lossless=<yes|no>[0m
                     Enable writing lossless WebP files (default: no)

              [1m--vo-image-webp-quality=<0-100>[0m
                     WebP quality (default: 75)

              [1m--vo-image-webp-compression=<0-6>[0m
                     WebP compression factor (default: 4)

              [1m--vo-image-outdir=<dirname>[0m
                     Specify the directory to save the image files to (default: [1m./[22m).

       [1mlibmpv [22mFor  use  with libmpv direct embedding. As a special case, on macOS it is used like a normal VO within mpv
              (cocoa-cb). Otherwise useless in any other contexts.  (See [1m<mpv/render.h>[22m.)

              This also supports many of the options the [1mgpu [22mVO has, depending on the backend.

       [1mrpi (Raspberry Pi)[0m
              Native video output on the Raspberry Pi using the MMAL API.

              The following global options are supported by this video output:

              [1m--rpi-display=<number>[0m
                     Select the display number on which the video overlay should be shown (default: 0).

              [1m--rpi-layer=<number>[0m
                     Select the dispmanx layer on which the video overlay should be shown (default: -10). Note that  mpv
                     will  also  use the 2 layers above the selected layer, to handle the window background and OSD. Ac‚Äê
                     tual video rendering will happen on the layer above the selected layer.

              [1m--rpi-background=<yes|no>[0m
                     Whether to render a black background behind the video (default: no).  Normally it's better to  kill
                     the console framebuffer instead, which gives better performance.

              [1m--rpi-osd=<yes|no>[0m
                     Enabled by default. If disabled with [1mno[22m, no OSD layer is created.  This also means there will be no
                     subtitles rendered.

       [1mdrm (Direct Rendering Manager)[0m
              Video output driver using Kernel Mode Setting / Direct Rendering Manager.  Should be used when one doesn't
              want  to  install full-blown graphical environment (e.g. no X). Does not support hardware acceleration (if
              you need this, check the [1mdrm [22mbackend for [1mgpu [22mVO).

              Since mpv 0.30.0, you may need to use [1m--profile=sw-fast [22mto get decent performance.

              The following global options are supported by this video output:

              [1m--drm-connector=<name>[0m
                     Select the connector to use (usually this is a monitor.) If [1m<name> [22mis empty or  [1mauto[22m,  mpv  renders
                     the  output  on  the first available connector. Use [1m--drm-connector=help [22mto get a list of available
                     connectors. (default: empty)

              [1m--drm-device=<path>[0m
                     Select the DRM device file to use. If specified this overrides automatic card selection.  (default:
                     empty)

              [1m--drm-mode=<preferred|highest|N|WxH[@R]>[0m
                     Mode to use (resolution and frame rate).  Possible values:

                     [1mpreferred[0m
                            Use the preferred mode for the screen on the selected connector. (default)

                     [1mhighest[0m
                            Use the mode with the highest resolution available on the selected connector.

                     [1mN      [22mSelect mode by index.

                     [1mWxH[@R][0m
                            Specify  mode  by  width, height, and optionally refresh rate.  In case several modes match,
                            selects the mode that comes first in the EDID list of modes.

                     Use [1m--drm-mode=help [22mto get a list of available modes for all active connectors.

              [1m--drm-draw-plane=<primary|overlay|N>[0m
                     Select the DRM plane to which video and OSD is drawn to, under normal circumstances. The plane  can
                     be  specified  as  [1mprimary[22m, which will pick the first applicable primary plane; [1moverlay[22m, which will
                     pick the first applicable overlay plane; or by index. The index is zero based, and related  to  the
                     CRTC.  (default: primary)

                     When  using  this  option with the drmprime-overlay hwdec interop, only the OSD is rendered to this
                     plane.

              [1m--drm-drmprime-video-plane=<primary|overlay|N>[0m
                     Select the DRM plane to use for video with the drmprime-overlay hwdec interop  (used  by  e.g.  the
                     rkmpp  hwdec on RockChip SoCs, and v4l2 hwdec:s on various other SoC:s). The plane is unused other‚Äê
                     wise. This option accepts the same values as [1m--drm-draw-plane[22m. (default: overlay)

                     To  be  able  to  successfully  play  4K  video  on  various   SoCs   you   might   need   to   set
                     [1m--drm-draw-plane=overlay    --drm-drmprime-video-plane=primary    [22mand    setting    [1m--drm-draw-sur‚Äê[0m
                     [1mface-size=1920x1080[22m, to render the OSD at a lower resolution (the video when handled by  the  hwdec
                     will be on the drmprime-video plane and at full 4K resolution)

              [1m--drm-format=<xrgb8888|xrgb2101010>[0m
                     Select  the  DRM  format to use (default: xrgb8888). This allows you to choose the bit depth of the
                     DRM mode. xrgb8888 is your usual 24 bit per pixel/8 bits per channel packed RGB format with 8  bits
                     of padding.  xrgb2101010 is a packed 30 bits per pixel/10 bits per channel packed RGB format with 2
                     bits of padding.

                     There  are  cases  when xrgb2101010 will work with the [1mdrm [22mVO, but not with the [1mdrm [22mbackend for the
                     [1mgpu [22mVO. This is because with the [1mgpu [22mVO, in addition to requiring support in your DRM  driver,  re‚Äê
                     quires support for xrgb2101010 in your EGL driver

              [1m--drm-draw-surface-size=<[WxH]>[0m
                     Sets  the size of the surface used on the draw plane. The surface will then be upscaled to the cur‚Äê
                     rent screen resolution. This option can be useful when  used  together  with  the  drmprime-overlay
                     hwdec  interop  at  high  resolutions, as it allows scaling the draw plane (which in this case only
                     handles the OSD) down to a size the GPU can handle.

                     When used without the drmprime-overlay hwdec interop this option will just cause the video  to  get
                     rendered at a different resolution and then scaled to screen size.

                     (default: display resolution)

              [1m--drm-vrr-enabled=<no|yes|auto>[0m
                     Toggle use of Variable Refresh Rate (VRR), aka Freesync or Adaptive Sync on compatible systems. VRR
                     allows for the display to be refreshed at any rate within a range (usually ~40Hz-60Hz for 60Hz dis‚Äê
                     plays). This can help with playback of 24/25/50fps content. Support depends on the use of a compat‚Äê
                     ible monitor, GPU, and a sufficiently new kernel with drivers that support the feature.

                     [1mno     [22mDo not attempt to enable VRR. (default)

                     [1myes    [22mAttempt to enable VRR, whether the capability is reported or not.

                     [1mauto   [22mAttempt to enable VRR if support is reported.

       [1mmediacodec_embed (Android)[0m
              Renders  [1mIMGFMT_MEDIACODEC  [22mframes  directly  to an [1mandroid.view.Surface[22m.  Requires [1m--hwdec=mediacodec [22mfor
              hardware decoding, along with [1m--vo=mediacodec_embed [22mand [1m--wid=(intptr_t)(*android.view.Surface)[22m.

              Since this video output driver uses native decoding and rendering routines, many of mpv's features (subti‚Äê
              tle rendering, OSD/OSC, video filters, etc) are not available with this driver.

              To use hardware decoding with [1m--vo=gpu [22minstead,  use  [1m--hwdec=mediacodec  [22mor  [1mmediacodec-copy  [22malong  with
              [1m--gpu-context=android[22m.

       [1mwlshm (Wayland only)[0m
              Shared memory video output driver without hardware acceleration that works whenever Wayland is present.

              Since mpv 0.30.0, you may need to use [1m--profile=sw-fast [22mto get decent performance.

              [1mNOTE:[0m
                 This is a fallback only, and should not be normally used.

[1mAUDIO FILTERS[0m
       Audio filters allow you to modify the audio stream and its properties. The syntax is:

       [1m--af=...[0m
              Setup a chain of audio filters. See [1m--vf [22m([4mVIDEO[24m [4mFILTERS[24m) for the full syntax.

       [1mNOTE:[0m
          To get a full list of available audio filters, see [1m--af=help[22m.

          Also,  keep  in  mind  that most actual filters are available via the [1mlavfi [22mwrapper, which gives you access to
          most of libavfilter's filters. This includes all filters that have been ported from MPlayer to libavfilter.

          The [1m--vf [22mdescription describes how libavfilter can be used and how to workaround deprecated mpv filters.

       See [1m--vf [22mgroup of options for info on how [1m--af-add[22m, [1m--af-pre[22m, [1m--af-clr[22m, and possibly others work.

       Available filters are:

       [1mlavcac3enc[=options][0m
              Encode multi-channel audio to AC-3 at runtime using libavcodec. Supports 16-bit native-endian  input  for‚Äê
              mat,  maximum  6  channels. The output is big-endian when outputting a raw AC-3 stream, native-endian when
              outputting to S/PDIF. If the input sample rate is not 48 kHz, 44.1 kHz or 32 kHz, it will be resampled  to
              48 kHz.

              [1mtospdif=<yes|no>[0m
                     Output raw AC-3 stream if [1mno[22m, output to S/PDIF for pass-through if [1myes [22m(default).

              [1mbitrate=<rate>[0m
                     The bitrate use for the AC-3 stream. Set it to 384 to get 384 kbps.

                     The default is 640. Some receivers might not be able to handle this.

                     Valid  values:  32,  40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 448, 512, 576,
                     640.

                     The special value [1mauto [22mselects a default bitrate based on the input channel number:

                     [1m1ch    [22m96

                     [1m2ch    [22m192

                     [1m3ch    [22m224

                     [1m4ch    [22m384

                     [1m5ch    [22m448

                     [1m6ch    [22m448

              [1mminch=<n>[0m
                     If the input channel number is less than [1m<minch>[22m, the filter will detach itself (default: 3).

              [1mencoder=<name>[0m
                     Select the libavcodec encoder used. Currently, this should be an AC-3 encoder,  and  using  another
                     codec will fail horribly.

       [1mformat=format:srate:channels:out-srate:out-channels[0m
              Does  not do any format conversion itself. Rather, it may cause the filter system to insert necessary con‚Äê
              version filters before or after this filter if needed. It is primarily useful for  controlling  the  audio
              format  going into other filters. To specify the format for audio output, see [1m--audio-format[22m, [1m--audio-sam‚Äê[0m
              [1mplerate[22m, and [1m--audio-channels[22m. This filter is able to force a particular format, whereas [1m--audio-* [22mmay  be
              overridden by the ao based on output compatibility.

              All  parameters  are optional. The first 3 parameters restrict what the filter accepts as input. They will
              therefore cause conversion filters to be inserted before this one.  The [1mout- [22mparameters tell  the  filters
              or audio outputs following this filter how to interpret the data without actually doing a conversion. Set‚Äê
              ting  these  will probably just break things unless you really know you want this for some reason, such as
              testing or dealing with broken media.

              [1m<format>[0m
                     Force conversion to this format. Use [1m--af=format=format=help [22mto get a list of valid formats.

              [1m<srate>[0m
                     Force conversion to a specific sample rate. The rate is an integer, 48000 for example.

              [1m<channels>[0m
                     Force mixing to a specific channel layout. See [1m--audio-channels [22moption for possible values.

              [1m<out-srate>[0m

              [1m<out-channels>[0m

              [4mNOTE[24m: this filter used to be named [1mforce[22m. The old [1mformat [22mfilter used to do conversion itself, unlike  this
              one which lets the filter system handle the conversion.

       [1mscaletempo[=option1:option2:...][0m
              Scales audio tempo without altering pitch, optionally synced to playback speed.

              This  works  by playing 'stride' ms of audio at normal speed then consuming 'stride*scale' ms of input au‚Äê
              dio. It pieces the strides together by blending 'overlap'% of stride with  audio  following  the  previous
              stride.  It optionally performs a short statistical analysis on the next 'search' ms of audio to determine
              the best overlap position.

              [1mscale=<amount>[0m
                     Nominal amount to scale tempo. Scales this amount in addition to speed. (default: 1.0)

              [1mstride=<amount>[0m
                     Length in milliseconds to output each stride. Too high of a value will cause  noticeable  skips  at
                     high  scale  amounts and an echo at low scale amounts. Very low values will alter pitch. Increasing
                     improves performance. (default: 60)

              [1moverlap=<factor>[0m
                     Factor of stride to overlap. Decreasing improves performance.  (default: .20)

              [1msearch=<amount>[0m
                     Length in milliseconds to  search  for  best  overlap  position.  Decreasing  improves  performance
                     greatly. On slow systems, you will probably want to set this very low. (default: 14)

              [1mspeed=<tempo|pitch|both|none>[0m
                     Set response to speed change.

                     [1mtempo  [22mScale tempo in sync with speed (default).

                     [1mpitch  [22mReverses effect of filter. Scales pitch without altering tempo.  Add this to your [1minput.conf[0m
                            to step by musical semi-tones:

                               [ multiply speed 0.9438743126816935
                               ] multiply speed 1.059463094352953

                            [1mWARNING:[0m
                               Loses sync with video.

                     [1mboth   [22mScale both tempo and pitch.

                     [1mnone   [22mIgnore speed changes.

                 Examples

                 [1mmpv --af=scaletempo --speed=1.2 media.ogg[0m
                        Would play media at 1.2x normal speed, with audio at normal pitch. Changing playback speed would
                        change audio tempo to match.

                 [1mmpv --af=scaletempo=scale=1.2:speed=none --speed=1.2 media.ogg[0m
                        Would  play  media at 1.2x normal speed, with audio at normal pitch, but changing playback speed
                        would have no effect on audio tempo.

                 [1mmpv --af=scaletempo=stride=30:overlap=.50:search=10 media.ogg[0m
                        Would tweak the quality and performance parameters.

                 [1mmpv --af=scaletempo=scale=1.2:speed=pitch audio.ogg[0m
                        Would play media at 1.2x normal speed, with audio at  normal  pitch.   Changing  playback  speed
                        would change pitch, leaving audio tempo at 1.2x.

       [1mscaletempo2[=option1:option2:...][0m
              Scales  audio  tempo  without altering pitch.  The algorithm is ported from chromium and uses the Waveform
              Similarity Overlap-and-add (WSOLA) method.  It seems to achieves higher audio quality than scaletempo, and
              rubberband R2 engine, or [1mengine=faster[22m. This filter is inserted  automatically  if  [1maudio-pitch-correction[0m
              option is used (on by default) when the playback speed is changed.

              By default, the [1msearch-interval [22mand [1mwindow-size [22mparameters have the same values as in chromium.

              [1mmin-speed=<speed>[0m
                     Mute audio if the playback speed is below [1m<speed>[22m. (default: 0.25)

              [1mmax-speed=<speed>[0m
                     Mute audio if the playback speed is above [1m<speed> [22mand [1m<speed> != 0[22m. (default: 8.0)

              [1msearch-interval=<amount>[0m
                     Length in milliseconds to search for best overlap position. (default: 40)

              [1mwindow-size=<amount>[0m
                     Length in milliseconds of the overlap-and-add window. (default: 12)

       [1mrubberband[0m
              High quality pitch correction with librubberband. This can be used in place of [1mscaletempo [22mand [1mscaletempo2[22m,
              and will be used to adjust audio pitch when playing at speed different from normal. It can also be used to
              adjust audio pitch without changing playback speed.

              [1mpitch-scale=<amount>[0m
                     Sets the pitch scaling factor. Frequencies are multiplied by this value.  (default: 1.0)

              [1mengine=<faster|finer>[0m
                     Select the core Rubberband engine to be used. There are two available:

                     [1mFaster [22mThis is the Rubberband R2 engine. It uses significantly less CPU than the Finer (R3) engine.

                     [1mFiner  [22mThis is the Rubberband R3 engine. This engine is only available with librubberband version 3
                            or  newer.  This produces significantly higher quality output, at the cost of higher CPU us‚Äê
                            age. (Default if available)

              This filter has a number of additional sub-options. You can list them with [1mmpv --af=rubberband=help[22m.  This
              will  also  show the default values for each option. The options are not documented here, because they are
              merely passed to librubberband. Look at the librubberband documentation to learn what  each  option  does:
              [4mhttps://breakfastquay.com/rubberband/code-doc/classRubberBand_1_1RubberBandStretcher.html[24m   Do  note  that
              certain options are only applicable to one of R2 (faster) and R3 (finer) engines.  (The mapping of the mpv
              rubberband filter sub-option names and values to those of librubberband follows a simple pattern: [1m"Option"[0m
              [1m+ Name + Value[22m.)

              This filter supports the following [1maf-command [22mcommands:

              [1mset-pitch[0m
                     Set the [1m<pitch-scale> [22margument dynamically. This can be used to change the playback pitch  at  run‚Äê
                     time. Note that speed is controlled using the standard [1mspeed [22mproperty, not [1maf-command[22m.

              [1mmultiply-pitch <factor>[0m
                     Multiply the current value of [1m<pitch-scale> [22mdynamically.  For example: 0.5 to go down by an octave,
                     1.5 to go up by a perfect fifth.  If you want to go up or down by semi-tones, use 1.059463094352953
                     and 0.9438743126816935

       [1mlavfi=graph[0m
              Filter audio using FFmpeg's libavfilter.

              [1m<graph>[0m
                     Libavfilter graph. See [1mlavfi [22mvideo filter for details - the graph syntax is the same.

                     [1mWARNING:[0m
                        Don't forget to quote libavfilter graphs as described in the lavfi video filter section.

              [1mo=<string>[0m
                     AVOptions.

              [1mfix-pts=<yes|no>[0m
                     Determine  PTS  based  on  sample count (default: no). If this is enabled, the player won't rely on
                     libavfilter passing through PTS accurately.  Instead, it pass a sample count as PTS to libavfilter,
                     and compute the PTS used by mpv based on that and the input PTS. This helps with filters which out‚Äê
                     put a recomputed PTS instead of the original PTS (including filters which require the PTS to  start
                     at  0).  mpv normally expects filters to not touch the PTS (or only to the extent of changing frame
                     boundaries), so this is not the default, but it will be needed to use broken filters. In  practice,
                     these  broken filters will either cause slow A/V desync over time (with some files), or break play‚Äê
                     back completely if you seek or start playback from the middle of a file.

       [1mdrop   [22mThis filter drops or repeats audio frames to adapt to playback speed. It always  operates  on  full  audio
              frames,  because it was made to handle SPDIF (compressed audio passthrough). This is used automatically if
              the [1m--video-sync=display-adrop [22moption is used. Do not use this filter (or the given option); they are  ex‚Äê
              tremely low quality.

[1mVIDEO FILTERS[0m
       Video  filters  allow you to modify the video stream and its properties. All of the information described in this
       section applies to audio filters as well (generally using the prefix [1m--af [22minstead of [1m--vf[22m).

       The exact syntax is:

       [1m--vf=<filter1[=parameter1:parameter2:...],filter2,...>[0m
              Setup a chain of video filters. This consists on the filter name, and an option list of  parameters  after
              [1m=[22m. The parameters are separated by [1m: [22m(not [1m,[22m, as that starts a new filter entry).

              Before  the filter name, a label can be specified with [1m@name:[22m, where name is an arbitrary user-given name,
              which identifies the filter. This is only needed if you want to toggle the filter at runtime.

              A [1m! [22mbefore the filter name means the filter is disabled by default. It will be skipped on filter creation.
              This is also useful for runtime filter toggling.

              See the [1mvf [22mcommand (and [1mtoggle [22msub-command) for further explanations and examples.

              The general filter entry syntax is:
                 [1m["@"<label-name>":"] ["!"] <filter-name> [ "=" <filter-parameter-list> ][0m

              or for the special "toggle" syntax (see [1mvf [22mcommand):
                 [1m"@"<label-name>[0m

              and the [1mfilter-parameter-list[22m:
                 [1m<filter-parameter> | <filter-parameter> "," <filter-parameter-list>[0m

              and [1mfilter-parameter[22m:
                 [1m( <param-name> "=" <param-value> ) | <param-value>[0m

              [1mparam-value [22mcan further be quoted in [1m[ [22m/ [1m] [22min case the value contains characters like [1m, [22mor [1m=[22m. This is used
              in particular with the [1mlavfi [22mfilter, which uses a very similar syntax as  mpv  (MPlayer  historically)  to
              specify filters and their parameters.

       [1mNOTE:[0m
          [1m--vf  [22mcan  only  take a single track as input, even if the filter supports dynamic input. Filters that require
          multiple inputs can't be used.  Use [1m--lavfi-complex [22mfor such a use case. This also applies for [1m--af[22m.

       Filters can be manipulated at run time. You can use [1m@ [22mlabels as described above in combination with the  [1mvf  [22mcom‚Äê
       mand (see [4mCOMMAND[24m [4mINTERFACE[24m) to get more control over this. Initially disabled filters with [1m! [22mare useful for this
       as well.

       [1mNOTE:[0m
          To get a full list of available video filters, see [1m--vf=help [22mand [4mhttps://ffmpeg.org/ffmpeg-filters.html[24m .

          Also,  keep  in  mind  that most actual filters are available via the [1mlavfi [22mwrapper, which gives you access to
          most of libavfilter's filters. This includes all filters that have been ported from MPlayer to libavfilter.

          Most builtin filters are deprecated in some ways, unless they're only available in mpv (such as filters  which
          deal with mpv specifics, or which are implemented in mpv only).

          If  a  filter  is not builtin, the [1mlavfi-bridge [22mwill be automatically tried. This bridge does not support help
          output, and does not verify parameters before the filter is actually used. Although the mpv syntax  is  rather
          similar  to  libavfilter's, it's not the same. (Which means not everything accepted by vf_lavfi's [1mgraph [22moption
          will be accepted by [1m--vf[22m.)

          You can also prefix the filter name with [1mlavfi- [22mto force the wrapper.  This is helpful if the filter name col‚Äê
          lides with a deprecated mpv builtin filter. For example [1m--vf=lavfi-scale=args [22mwould  use  libavfilter's  [1mscale[0m
          filter over mpv's deprecated builtin one.

       Video filters are managed in lists. There are a few commands to manage the filter list.

       [1m--vf-append=filter[0m
              Appends the filter given as arguments to the filter list.

       [1m--vf-add=filter[0m
              Appends  the  filter  given  as arguments to the filter list. (Passing multiple filters is currently still
              possible, but deprecated.)

       [1m--vf-pre=filter[0m
              Prepends the filters given as arguments to the filter list. (Passing multiple filters is  currently  still
              possible, but deprecated.)

       [1m--vf-remove=filter[0m
              Deletes the filter from the list. The filter can be either given the way it was added (filter name and its
              full argument list), or by label (prefixed with [1m@[22m). Matching of filters works as follows: if either of the
              compared  filters  has a label set, only the labels are compared. If none of the filters have a label, the
              filter name, arguments, and argument order are compared. (Passing multiple filters is currently still pos‚Äê
              sible, but deprecated.)

       [1m-vf-toggle=filter[0m
              Add the given filter to the list if it was not present yet, or remove it from the list if it was  present.
              Matching of filters works as described in [1m--vf-remove[22m.

       [1m--vf-clr[0m
              Completely empties the filter list.

       With filters that support it, you can access parameters by their name.

       [1m--vf=<filter>=help[0m
              Prints the parameter names and parameter value ranges for a particular filter.

       Available mpv-only filters are:

       [1mformat=fmt=<value>:colormatrix=<value>:...[0m
              Applies  video parameter overrides, with optional conversion. By default, this overrides the video's para‚Äê
              meters without conversion (except for the [1mfmt [22mparameter), but can be made to perform an  appropriate  con‚Äê
              version with [1mconvert=yes [22mfor parameters for which conversion is supported.

              [1m<fmt>  [22mImage format name, e.g. rgb15, bgr24, 420p, etc. (default: don't change).

                     This filter always performs conversion to the given format.

                     [1mNOTE:[0m
                        For a list of available formats, use [1m--vf=format=fmt=help[22m.

                     [1mNOTE:[0m
                        Conversion between hardware formats is supported in some cases.  eg: [1mcuda [22mto [1mvulkan[22m, or [1mvaapi [22mto
                        [1mvulkan[22m.

              [1m<convert=yes|no>[0m
                     Force conversion of color parameters (default: no).

                     If this is disabled (the default), the only conversion that is possibly performed is format conver‚Äê
                     sion if [1m<fmt> [22mis set. All other parameters (like [1m<colormatrix>[22m) are forced without conversion. This
                     mode is typically useful when files have been incorrectly tagged.

                     If  this  is enabled, libswscale or zimg is used if any of the parameters mismatch. zimg is used of
                     the input/output image formats are supported by mpv's zimg wrapper, and if [1m--sws-allow-zimg=yes  [22mis
                     used. Both libraries may not support all kinds of conversions. This typically results in silent in‚Äê
                     correct conversion. zimg has in many cases a better chance of performing the conversion correctly.

                     In  both cases, the color parameters are set on the output stage of the image format conversion (if
                     [1mfmt [22mwas set). The difference is that with [1mconvert=no[22m, the color parameters are not passed on to the
                     converter.

                     If input and output video parameters are the same, conversion is always skipped.

                     When converting between hardware formats, this parameter has no effect,  and  the  only  conversion
                     that is done is the format conversion.

                        Examples

                        [1mmpv test.mkv --vf=format:colormatrix=ycgco[0m
                               Results in incorrect colors (if test.mkv was tagged correctly).

                        [1mmpv test.mkv --vf=format:colormatrix=ycgco:convert=yes --sws-allow-zimg[0m
                               Results in true conversion to [1mycgco[22m, assuming the renderer supports it ([1m--vo=gpu [22mnormally
                               does).  You  can  add  [1m--vo=xv  [22mto force a VO which definitely does not support it, which
                               should show incorrect colors as confirmation.

                               Using [1m--sws-allow-zimg=no [22m(or disabling zimg at build time) will  use  libswscale,  which
                               cannot perform this conversion as of this writing.

              [1m<colormatrix>[0m
                     Controls  the  YUV  to  RGB color space conversion when playing video. There are various standards.
                     Normally, BT.601 should be used for SD video, and BT.709 for HD video. (This is done  by  default.)
                     Using incorrect color space results in slightly under or over saturated and shifted colors.

                     These options are not always supported. Different video outputs provide varying degrees of support.
                     The  [1mgpu [22mand [1mvdpau [22mvideo output drivers usually offer full support. The [1mxv [22moutput can set the color
                     space if the system video driver supports it, but not input and output levels. The [1mscale [22mvideo fil‚Äê
                     ter can configure color space and input levels, but only if the output format is RGB (if the  video
                     output driver supports RGB output, you can force this with [1m-vf scale,format=rgba[22m).

                     If this option is set to [1mauto [22m(which is the default), the video's color space flag will be used. If
                     that  flag  is  unset,  the color space will be selected automatically. This is done using a simple
                     heuristic that attempts to distinguish SD and HD video. If the video is larger than  1279x576  pix‚Äê
                     els, BT.709 (HD) will be used; otherwise BT.601 (SD) is selected.

                     Available color spaces are:

                     [1mauto   [22mautomatic selection (default)

                     [1mbt.601 [22mITU-R BT.601 (SD)

                     [1mbt.709 [22mITU-R BT.709 (HD)

                     [1mbt.2020-ncl[0m
                            ITU-R BT.2020 non-constant luminance system

                     [1mbt.2020-cl[0m
                            ITU-R BT.2020 constant luminance system

                     [1msmpte-240m[0m
                            SMPTE-240M

              [1m<colorlevels>[0m
                     YUV color levels used with YUV to RGB conversion. This option is only necessary when playing broken
                     files  which  do not follow standard color levels or which are flagged wrong. If the video does not
                     specify its color range, it is assumed to be limited range.

                     The same limitations as with [1m<colormatrix> [22mapply.

                     Available color ranges are:

                     [1mauto   [22mautomatic selection (normally limited range) (default)

                     [1mlimited[0m
                            limited range (16-235 for luma, 16-240 for chroma)

                     [1mfull   [22mfull range (0-255 for both luma and chroma)

              [1m<primaries>[0m
                     RGB primaries the source file was encoded with. Normally this should be set in the file header, but
                     when playing broken or mistagged files this can be used to override the setting.

                     This option only affects video output drivers that perform color management, for example  [1mgpu  [22mwith
                     the [1mtarget-prim [22mor [1micc-profile [22msuboptions set.

                     If  this  option is set to [1mauto [22m(which is the default), the video's primaries flag will be used. If
                     that flag is unset, the color space will be selected automatically, using the following heuristics:
                     If the [1m<colormatrix> [22mis set or determined as BT.2020 or BT.709,  the  corresponding  primaries  are
                     used.  Otherwise, if the video height is exactly 576 (PAL), BT.601-625 is used. If it's exactly 480
                     or 486 (NTSC), BT.601-525 is used. If the video resolution is anything else, BT.709 is used.

                     Available primaries are:

                     [1mauto   [22mautomatic selection (default)

                     [1mbt.601-525[0m
                            ITU-R BT.601 (SD) 525-line systems (NTSC, SMPTE-C)

                     [1mbt.601-625[0m
                            ITU-R BT.601 (SD) 625-line systems (PAL, SECAM)

                     [1mbt.709 [22mITU-R BT.709 (HD) (same primaries as sRGB)

                     [1mbt.2020[0m
                            ITU-R BT.2020 (UHD)

                     [1mapple  [22mApple RGB

                     [1madobe  [22mAdobe RGB (1998)

                     [1mprophoto[0m
                            ProPhoto RGB (ROMM)

                     [1mcie1931[0m
                            CIE 1931 RGB

                     [1mdci-p3 [22mDCI-P3 (Digital Cinema)

                     [1mv-gamut[0m
                            Panasonic V-Gamut primaries

              [1m<gamma>[0m
                     Gamma function the source file was encoded with. Normally this should be set in  the  file  header,
                     but when playing broken or mistagged files this can be used to override the setting.

                     This option only affects video output drivers that perform color management.

                     If  this  option  is set to [1mauto [22m(which is the default), the gamma will be set to BT.1886 for YCbCr
                     content, sRGB for RGB content and Linear for XYZ content.

                     Available gamma functions are:

                     [1mauto   [22mautomatic selection (default)

                     [1mbt.1886[0m
                            ITU-R BT.1886 (EOTF corresponding to BT.601/BT.709/BT.2020)

                     [1msrgb   [22mIEC 61966-2-4 (sRGB)

                     [1mlinear [22mLinear light

                     [1mgamma1.8[0m
                            Pure power curve (gamma 1.8)

                     [1mgamma2.0[0m
                            Pure power curve (gamma 2.0)

                     [1mgamma2.2[0m
                            Pure power curve (gamma 2.2)

                     [1mgamma2.4[0m
                            Pure power curve (gamma 2.4)

                     [1mgamma2.6[0m
                            Pure power curve (gamma 2.6)

                     [1mgamma2.8[0m
                            Pure power curve (gamma 2.8)

                     [1mprophoto[0m
                            ProPhoto RGB (ROMM) curve

                     [1mpq     [22mITU-R BT.2100 PQ (Perceptual quantizer) curve

                     [1mhlg    [22mITU-R BT.2100 HLG (Hybrid Log-gamma) curve

                     [1mv-log  [22mPanasonic V-Log transfer curve

                     [1ms-log1 [22mSony S-Log1 transfer curve

                     [1ms-log2 [22mSony S-Log2 transfer curve

              [1m<sig-peak>[0m
                     Reference peak illumination for the video file, relative to the  signal's  reference  white  level.
                     This is mostly interesting for HDR, but it can also be used tone map SDR content to simulate a dif‚Äê
                     ferent exposure. Normally inferred from tags such as MaxCLL or mastering metadata.

                     The default of 0.0 will default to the source's nominal peak luminance.

              [1m<light>[0m
                        Light  type  of the scene. This is mostly correctly inferred based on the gamma function, but it
                        can be useful to override this when viewing raw camera footage (e.g. V-Log), which  is  normally
                        scene-referred instead of display-referred.

                        Available light types are:

                     [1mauto   [22mAutomatic selection (default)

                     [1mdisplay[0m
                            Display-referred light (most content)

                     [1mhlg    [22mScene-referred using the HLG OOTF (e.g. HLG content)

                     [1m709-1886[0m
                            Scene-referred using the BT709+BT1886 interaction

                     [1mgamma1.2[0m
                            Scene-referred using a pure power OOTF (gamma=1.2)

              [1m<dolbyvision=yes|no>[0m
                     Whether or not to include Dolby Vision metadata (default: yes). If disabled, any Dolby Vision meta‚Äê
                     data will be stripped from frames.

              [1m<film-grain=yes|no>[0m
                     Whether  or not to include film grain metadata (default: yes). If disabled, any film grain metadata
                     will be stripped from frames.

              [1m<stereo-in>[0m
                     Set the stereo mode the video is assumed to be encoded in. Use [1m--vf=format:stereo-in=help  [22mto  list
                     all available modes. Check with the [1mstereo3d [22mfilter documentation to see what the names mean.

              [1m<stereo-out>[0m
                     Set  the  stereo  mode the video should be displayed as. Takes the same values as the [1mstereo-in [22mop‚Äê
                     tion.

              [1m<rotate>[0m
                     Set the rotation the video is assumed to be encoded with in degrees.  The special value [1m-1 [22muses the
                     input format.

              [1m<w>, <h>[0m
                     If not 0, perform conversion to the given size. Ignored if [1mconvert=yes [22mis not set.

              [1m<dw>, <dh>[0m
                     Set the display size. Note that setting the display size such that the video is scaled in both  di‚Äê
                     rections  instead  of  just changing the aspect ratio is an implementation detail, and might change
                     later.

              [1m<dar>  [22mSet the display aspect ratio of the video frame. This is a float, but values such as [1m[16:9] [22mcan  be
                     passed too ([1m[...] [22mfor quoting to prevent the option parser from interpreting the [1m: [22mcharacter).

              [1m<force-scaler=auto|zimg|sws>[0m
                     Force a specific scaler backend, if applicable. This is a debug option and could go away any time.

              [1m<alpha=auto|straight|premul>[0m
                     Set  the  kind  of  alpha the video uses. Undefined effect if the image format has no alpha channel
                     (could be ignored or cause an error, depending on how mpv internals evolve). Setting  this  may  or
                     may  not  cause  downstream image processing to treat alpha differently, depending on support. With
                     [1mconvert [22mand zimg used, this will convert the alpha.  libswscale and other  FFmpeg  components  com‚Äê
                     pletely ignore this.

       [1mlavfi=graph[:sws-flags[:o=opts]][0m
              Filter video using FFmpeg's libavfilter.

              [1m<graph>[0m
                     The libavfilter graph string. The filter must have a single video input pad and a single video out‚Äê
                     put pad.

                     See [4mhttps://ffmpeg.org/ffmpeg-filters.html[24m for syntax and available filters.

                     [1mWARNING:[0m
                        If  you  want to use the full filter syntax with this option, you have to quote the filter graph
                        in order to prevent mpv's syntax and the filter graph syntax from clashing. To prevent a quoting
                        and escaping mess, consider using [1m--lavfi-complex [22mif you know which video track you want to  use
                        from the input file. (There is only one video track for nearly all video files anyway.)

                        Examples

                        [1m--vf=lavfi=[gradfun=20:30,vflip][0m
                               [1mgradfun  [22mfilter  with nonsense parameters, followed by a [1mvflip [22mfilter. (This demonstrates
                               how libavfilter takes a graph and not just a single filter.) The filter graph  string  is
                               quoted  with  [1m[  [22mand  [1m][22m. This requires no additional quoting or escaping with some shells
                               (like bash), while others (like zsh)  require  additional  [1m"  [22mquotes  around  the  option
                               string.

                        [1m'--vf=lavfi="gradfun=20:30,vflip"'[0m
                               Same  as before, but uses quoting that should be safe with all shells. The outer [1m' [22mquotes
                               make sure that the shell does not remove the [1m" [22mquotes needed by mpv.

                        [1m'--vf=lavfi=graph="gradfun=radius=30:strength=20,vflip"'[0m
                               Same as before, but uses named parameters for everything.

              [1m<sws-flags>[0m
                     If libavfilter inserts filters for pixel format conversion,  this  option  gives  the  flags  which
                     should  be  passed  to  libswscale. This option is numeric and takes a bit-wise combination of [1mSWS_[0m
                     flags.

                     See [1mhttps://git.videolan.org/?p=ffmpeg.git;a=blob;f=libswscale/swscale.h[22m.

              [1m<o>    [22mSet AVFilterGraph options. These should be documented by FFmpeg.

                        Example

                        [1m'--vf=lavfi=yadif:o="threads=2,thread_type=slice"'[0m
                               forces a specific threading configuration.

       [1msub=[=bottom-margin:top-margin][0m
              Moves subtitle rendering to an arbitrary point in the filter chain, or force  subtitle  rendering  in  the
              video filter as opposed to using video output OSD support.

              [1m<bottom-margin>[0m
                     Adds  a black band at the bottom of the frame. The SSA/ASS renderer can place subtitles there (with
                     [1m--sub-use-margins[22m).

              [1m<top-margin>[0m
                     Black band on the top for toptitles  (with [1m--sub-use-margins[22m).

                 Examples

                 [1m--vf=sub,eq[0m
                        Moves sub rendering before the eq filter. This will put both subtitle colors and video under the
                        influence of the video equalizer settings.

       [1mvapoursynth=file:buffered-frames:concurrent-frames[0m
              Loads a VapourSynth filter script. This is intended for  streamed  processing:  mpv  actually  provides  a
              source  filter,  instead  of using a native VapourSynth video source. The mpv source will answer frame re‚Äê
              quests only  within  a  small  window  of  frames  (the  size  of  this  window  is  controlled  with  the
              [1mbuffered-frames  [22mparameter),  and  requests outside of that will return errors. As such, you can't use the
              full power of VapourSynth, but you can use certain filters.

              [1mWARNING:[0m
                 Do not use this filter, unless you have expert knowledge in VapourSynth, and know how to  fix  bugs  in
                 the mpv VapourSynth wrapper code.

              If  you  just  want to play video generated by VapourSynth (i.e. using a native VapourSynth video source),
              it's better to use [1mvspipe [22mand a pipe or FIFO to feed the video to mpv. The  same  applies  if  the  filter
              script requires random frame access (see [1mbuffered-frames [22mparameter).

              [1mfile   [22mFilename  of the script source. Currently, this is always a python script ([1m.vpy [22min VapourSynth con‚Äê
                     vention).

                     The variable [1mvideo_in [22mis set to the mpv video source, and it is  expected  that  the  script  reads
                     video  from  it.  (Otherwise,  mpv  will decode no video, and the video packet queue will overflow,
                     eventually leading to only audio playing, or worse.)

                     The filter graph created by the script is also expected to pass through timestamps using the [1m_Dura‚Äê[0m
                     [1mtionNum [22mand [1m_DurationDen [22mframe properties.

                     See the end of the option list for a full list of script variables defined by mpv.

                        Example:

                            import vapoursynth as vs
                            from vapoursynth import core
                            core.std.AddBorders(video_in, 10, 10, 20, 20).set_output()

                     [1mWARNING:[0m
                        The script will be reloaded on every seek. This is done to reset the filter properly on  discon‚Äê
                        tinuities.

              [1mbuffered-frames[0m
                     Maximum number of decoded video frames that should be buffered before the filter (default: 4). This
                     specifies the maximum number of frames the script can request in backward direction.

                     E.g.  if  [1mbuffered-frames=5[22m, and the script just requested frame 15, it can still request frame 10,
                     but frame 9 is not available anymore.  If it requests frame 30, mpv will decode 15 more frames, and
                     keep only frames 25-30.

                     The only reason why this buffer exists is to serve the random access requests the VapourSynth  fil‚Äê
                     ter can make.

                     The VapourSynth API has a [1mgetFrameAsync [22mfunction, which takes an absolute frame number. Source fil‚Äê
                     ters  must  respond  to all requests. For example, a source filter can request frame 2432, and then
                     frame 3.  Source filters  typically implement this by pre-indexing the entire file.

                     mpv on the other hand is stream oriented, and does not allow filters to seek.  (And  it  would  not
                     make  sense  to  allow  it,  because it would ruin performance.) Filters get frames sequentially in
                     playback direction, and cannot request them out of order.

                     To compensate for this mismatch, mpv allows the filter to access frames within  a  certain  window.
                     [1mbuffered-frames  [22mcontrols  the  size  of  this window. Most VapourSynth filters happen to work with
                     this, because mpv requests frames sequentially increasing from it, and most  filters  only  require
                     frames "close" to the requested frame.

                     If  the filter requests a frame that has a higher frame number than the highest buffered frame, new
                     frames will be decoded until the requested frame  number  is  reached.  Excessive  frames  will  be
                     flushed out in a FIFO manner (there are only at most [1mbuffered-frames [22min this buffer).

                     If  the  filter  requests a frame that has a lower frame number than the lowest buffered frame, the
                     request cannot be satisfied, and an error is returned to the filter. This kind of error is not sup‚Äê
                     posed to happen in a "proper" VapourSynth environment. What exactly happens depends on the  filters
                     involved.

                     Increasing  this  buffer  will not improve performance. Rather, it will waste memory, and slow down
                     seeks (when enough frames to fill the buffer need to be decoded at once). It is only needed to pre‚Äê
                     vent the error described in the previous paragraph.

                     How many frames a filter requires depends on filter implementation details, and mpv has no  way  of
                     knowing. A scale filter might need only 1 frame, an interpolation filter may require a small number
                     of frames, and the [1mReverse [22mfilter will require an infinite number of frames.

                     If you want reliable operation to the full extend VapourSynth is capable, use [1mvspipe[22m.

                     The  actual  number  of  buffered frames also depends on the value of the [1mconcurrent-frames [22moption.
                     Currently, both option values are multiplied to get the final buffer size.

              [1mconcurrent-frames[0m
                     Number of frames that should be requested in parallel. The level of concurrency depends on the fil‚Äê
                     ter and how quickly mpv can decode video to feed the filter. This value should probably be  propor‚Äê
                     tional to the number of cores on your machine. Most time, making it higher than the number of cores
                     can actually make it slower.

                     Technically,  mpv  will call the VapourSynth [1mgetFrameAsync [22mfunction in a loop, until there are [1mcon‚Äê[0m
                     [1mcurrent-frames [22mframes that have not been returned by the filter yet. This  also  assumes  that  the
                     rest  of the mpv filter chain reads the output of the [1mvapoursynth [22mfilter quickly enough. (For exam‚Äê
                     ple, if you pause the player, filtering will stop very soon, because the filtered frames are  wait‚Äê
                     ing in a queue.)

                     Actual concurrency depends on many other factors.

                     By default, this uses the special value [1mauto[22m, which sets the option to the number of detected logi‚Äê
                     cal CPU cores.

              The following [1m.vpy [22mscript variables are defined by mpv:

              [1mvideo_in[0m
                     The  mpv  video source as vapoursynth clip. Note that this has an incorrect (very high) length set,
                     which confuses many filters. This is necessary, because the true number of frames is  unknown.  You
                     can use the [1mTrim [22mfilter on the clip to reduce the length.

              [1mvideo_in_dw, video_in_dh[0m
                     Display size of the video. Can be different from video size if the video does not use square pixels
                     (e.g. DVD).

              [1mcontainer_fps[0m
                     FPS  value  as  reported  by  file headers. This value can be wrong or completely broken (e.g. 0 or
                     NaN). Even if the value is correct, if another filter changes the real FPS (by dropping or  insert‚Äê
                     ing  frames), the value of this variable will not be useful. Note that the [1m--container-fps-override[0m
                     command line option overrides this value.

                     Useful for some filters which insist on having a FPS.

              [1mdisplay_fps[0m
                     Refresh rate of the current display. Note that this value can be 0.

              [1mdisplay_res[0m
                     Resolution of the current display. This is an integer array with the first entry  corresponding  to
                     the  width  and  the second entry coresponding to the height. These values can be 0. Note that this
                     will not respond to monitor changes and may not work on all platforms.

       [1mvavpp  [22mVA-API video post processing. Requires the system to support  VA-API,  i.e.  Linux/BSD  only.  Works  with
              [1m--vo=vaapi  [22mand  [1m--vo=gpu [22monly.  Currently deinterlaces. This filter is automatically inserted if deinter‚Äê
              lacing is requested (either using the [1md [22mkey, by default mapped to the command [1mcycle  deinterlace[22m,  or  the
              [1m--deinterlace [22moption).

              [1mdeint=<method>[0m
                     Select the deinterlacing algorithm.

                     [1mno     [22mDon't perform deinterlacing.

                     [1mauto   [22mSelect the best quality deinterlacing algorithm (default). This goes by the order of the op‚Äê
                            tions as documented, with [1mmotion-compensated [22mbeing considered best quality.

                     [1mfirst-field[0m
                            Show only first field.

                     [1mbob    [22mbob deinterlacing.

                     [1mweave, motion-adaptive, motion-compensated[0m
                            Advanced  deinterlacing algorithms. Whether these actually work depends on the GPU hardware,
                            the GPU drivers, driver bugs, and mpv bugs.

              [1m<interlaced-only>[0m

                     [1mno     [22mDeinterlace all frames (default).

                     [1myes    [22mOnly deinterlace frames marked as interlaced.

              [1mreversal-bug=<yes|no>[0m

                     [1mno     [22mUse the API as it was interpreted by older Mesa drivers. While this interpretation was  more
                            obvious and intuitive, it was apparently wrong, and not shared by Intel driver developers.

                     [1myes    [22mUse Intel interpretation of surface forward and backwards references (default). This is what
                            Intel drivers and newer Mesa drivers expect. Matters only for the advanced deinterlacing al‚Äê
                            gorithms.

       [1mvdpaupp[0m
              VDPAU  video  post  processing.  Works with [1m--vo=vdpau [22mand [1m--vo=gpu [22monly. This filter is automatically in‚Äê
              serted if deinterlacing is requested (either using the [1md [22mkey, by default mapped to the command [1mcycle dein‚Äê[0m
              [1mterlace[22m, or the [1m--deinterlace [22moption). When enabling deinterlacing, it is always preferred  over  software
              deinterlacer  filters if the [1mvdpau [22mVO is used, and also if [1mgpu [22mis used and hardware decoding was activated
              at least once (i.e. vdpau was loaded).

              [1msharpen=<-1-1>[0m
                     For positive values, apply a sharpening algorithm to the video, for negative values a blurring  al‚Äê
                     gorithm (default: 0).

              [1mdenoise=<0-1>[0m
                     Apply a noise reduction algorithm to the video (default: 0; no noise reduction).

              [1mdeint=<yes|no>[0m
                     Whether  deinterlacing  is  enabled  (default:  no). If enabled, it will use the mode selected with
                     [1mdeint-mode[22m.

              [1mdeint-mode=<first-field|bob|temporal|temporal-spatial>[0m
                     Select deinterlacing mode (default: temporal).

                     Note that there's currently a mechanism that allows the  [1mvdpau  [22mVO  to  change  the  [1mdeint-mode  [22mof
                     auto-inserted  [1mvdpaupp [22mfilters. To avoid confusion, it's recommended not to use the [1m--vo=vdpau [22msub‚Äê
                     options related to filtering.

                     [1mfirst-field[0m
                            Show only first field.

                     [1mbob    [22mBob deinterlacing.

                     [1mtemporal[0m
                            Motion-adaptive temporal deinterlacing. May lead to A/V  desync  with  slow  video  hardware
                            and/or high resolution.

                     [1mtemporal-spatial[0m
                            Motion-adaptive  temporal  deinterlacing  with edge-guided spatial interpolation. Needs fast
                            video hardware.

              [1mchroma-deint[0m
                     Makes temporal deinterlacers operate both on luma and chroma  (default).   Use  no-chroma-deint  to
                     solely use luma and speed up advanced deinterlacing. Useful with slow video memory.

              [1mpullup [22mTry to apply inverse telecine, needs motion adaptive temporal deinterlacing.

              [1minterlaced-only=<yes|no>[0m
                     If [1myes[22m, only deinterlace frames marked as interlaced (default: no).

              [1mhqscaling=<0-9>[0m

                     [1m0      [22mUse default VDPAU scaling (default).

                     [1m1-9    [22mApply high quality VDPAU scaling (needs capable hardware).

       [1md3d11vpp[0m
              Direct3D 11 video post processing. Currently requires D3D11 hardware decoding for use.

              [1mdeint=<yes|no>[0m
                     Whether deinterlacing is enabled (default: no).

              [1minterlaced-only=<yes|no>[0m
                     If [1myes[22m, only deinterlace frames marked as interlaced (default: no).

              [1mmode=<blend|bob|adaptive|mocomp|ivctc|none>[0m
                     Tries  to select a video processor with the given processing capability.  If a video processor sup‚Äê
                     ports multiple capabilities, it is not clear which algorithm  is  actually  selected.  [1mnone  [22malways
                     falls  back.  On  most  if  not all hardware, this option will probably do nothing, because a video
                     processor usually supports all modes or none.

       [1mfingerprint=...[0m
              Compute video frame fingerprints and provide them as metadata. Actually, it currently barely  deserved  to
              be called [1mfingerprint[22m, because it does not compute "proper" fingerprints, only tiny downscaled images (but
              which can be used to compute image hashes or for similarity matching).

              The main purpose of this filter is to support the [1mskip-logo.lua [22mscript.  If this script is dropped, or mpv
              ever  gains  a way to load user-defined filters (other than VapourSynth), this filter will be removed. Due
              to the "special" nature of this filter, it will be removed without warning.

              The intended way to read from the filter is using [1mvf-metadata [22m(also see [1mclear-on-query [22mfilter  parameter).
              The property will return a list of key/value pairs as follows:

                 fp0.pts = 1.2345
                 fp0.hex = 1234abcdef...bcde
                 fp1.pts = 1.4567
                 fp1.hex = abcdef1234...6789
                 ...
                 fpN.pts = ...
                 fpN.hex = ...
                 type = gray-hex-16x16

              Each  [1mfp<N>  [22mentry  is  for a frame. The [1mpts [22mentry specifies the timestamp of the frame (within the filter
              chain; in simple cases this is the same as the display timestamp). The [1mhex [22mfield is the hex  encoded  fin‚Äê
              gerprint,  whose  size and meaning depend on the [1mtype [22mfilter option.  The [1mtype [22mfield has the same value as
              the option the filter was created with.

              This returns the frames that were filtered since the last query of the property. If [1mclear-on-query=no  [22mwas
              set, a query doesn't reset the list of frames. In both cases, a maximum of 10 frames is returned. If there
              are more frames, the oldest frames are discarded. Frames are returned in filter order.

              (This  doesn't return a structured list for the per-frame details because the internals of the [1mvf-metadata[0m
              mechanism suck. The returned format may change in the future.)

              This filter uses zimg for speed and profit. However, it will fallback to libswscale in a number of  situa‚Äê
              tions:  lesser  pixel  formats, unaligned data pointers or strides, or if zimg fails to initialize for un‚Äê
              known reasons. In these cases, the filter will use more CPU. Also, it will output different  fingerprints,
              because  libswscale  cannot  perform  the  full range expansion we normally request from zimg. As a conse‚Äê
              quence, the filter may be slower and not work correctly in random situations.

              [1mtype=...[0m
                     What fingerprint to compute. Available types are:

                     [1mgray-hex-8x8[0m
                            grayscale, 8 bit, 8x8 size

                     [1mgray-hex-16x16[0m
                            grayscale, 8 bit, 16x16 size (default)

                     Both types simply remove all colors, downscale the image, concatenate all pixel values  to  a  byte
                     array, and convert the array to a hex string.

              [1mclear-on-query=yes|no[0m
                     Clear  the  list  of frame fingerprints if the [1mvf-metadata [22mproperty for this filter is queried (de‚Äê
                     fault: yes). This requires some care by the user. Some types of accesses  might  query  the  filter
                     multiple times, which leads to lost frames.

              [1mprint=yes|no[0m
                     Print  computed  fingerprints  to  the terminal (default: no). This is mostly for testing and such.
                     Scripts should use [1mvf-metadata [22mto read information from this filter instead.

       [1mgpu=...[0m
              Convert video to RGB using the OpenGL renderer normally used with [1m--vo=gpu[22m. This requires that the EGL im‚Äê
              plementation supports off-screen rendering on the default display. (This is the case with Mesa.)

              Sub-options:

              [1mw=<pixels>, h=<pixels>[0m
                     Size of the output in pixels (default: 0). If not positive, this will use the  size  of  the  first
                     filtered input frame.

              [1mWARNING:[0m
                 This  is  highly  experimental. Performance is bad, and it will not work everywhere in the first place.
                 Some features are not supported.

              [1mWARNING:[0m
                 This does not do OSD rendering. If you see OSD, then it has been rendered by the VO backend. (Subtitles
                 are rendered by the [1mgpu [22mfilter, if possible.)

              [1mWARNING:[0m
                 If you use this with encoding mode, keep in mind that encoding mode will convert the RGB filter's  out‚Äê
                 put  back  to yuv420p in software, using the configured software scaler. Using [1mzimg [22mmight improve this,
                 but in any case it might go against your goals when using this filter.

              [1mWARNING:[0m
                 Do not use this with [1m--vo=gpu[22m. It will apply filtering twice, since most [1m--vo=gpu [22moptions are  uncondi‚Äê
                 tionally applied to the [1mgpu [22mfilter. There is no mechanism in mpv to prevent this.

[1mENCODING[0m
       You can encode files from one format/codec to another using this facility.

       [1m--o=<filename>[0m
              Enables encoding mode and specifies the output file name.

       [1m--of=<format>[0m
              Specifies  the  output format (overrides autodetection by the file name extension of the file specified by
              [1m-o[22m). See [1m--of=help [22mfor a full list of supported formats.

       [1m--ofopts=<options>[0m
              Specifies the output format options for libavformat.  See [1m--ofopts=help [22mfor a full list of  supported  op‚Äê
              tions.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

              [1m--ofopts-add=<option>[0m
                     Appends the option given as an argument to the options list. (Passing multiple options is currently
                     still possible, but deprecated.)

              [1m--ofopts=""[0m
                     Completely empties the options list.

       [1m--oac=<codec>[0m
              Specifies the output audio codec. See [1m--oac=help [22mfor a full list of supported codecs.

       [1m--oacopts=<options>[0m
              Specifies  the output audio codec options for libavcodec.  See [1m--oacopts=help [22mfor a full list of supported
              options.

                 Example

                 [1m"--oac=libmp3lame --oacopts=b=128000"[0m
                        selects 128 kbps MP3 encoding.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

              [1m--oacopts-add=<option>[0m
                     Appends the option given as an argument to the options list. (Passing multiple options is currently
                     still possible, but deprecated.)

              [1m--oacopts=""[0m
                     Completely empties the options list.

       [1m--ovc=<codec>[0m
              Specifies the output video codec. See [1m--ovc=help [22mfor a full list of supported codecs.

       [1m--ovcopts=<options>[0m
              Specifies the output video codec options for libavcodec.  See --ovcopts=help for a full list of  supported
              options.

                 Examples

                 [1m"--ovc=mpeg4 --ovcopts=qscale=5"[0m
                        selects constant quantizer scale 5 for MPEG-4 encoding.

                 [1m"--ovc=libx264 --ovcopts=crf=23"[0m
                        selects VBR quality factor 23 for H.264 encoding.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

              [1m--ovcopts-add=<option>[0m
                     Appends the option given as an argument to the options list. (Passing multiple options is currently
                     still possible, but deprecated.)

              [1m--ovcopts=""[0m
                     Completely empties the options list.

       [1m--orawts[0m
              Copies  input  pts to the output video (not supported by some output container formats, e.g. AVI). In this
              mode, discontinuities are not fixed and all pts are passed through as-is. Never seek backwards or use mul‚Äê
              tiple input files in this mode!

       [1m--no-ocopy-metadata[0m
              Turns off copying of metadata from input files to output files when encoding  (which  is  enabled  by  de‚Äê
              fault).

       [1m--oset-metadata=<metadata-tag[,metadata-tag,...]>[0m
              Specifies  metadata  to include in the output file.  Supported keys vary between output formats. For exam‚Äê
              ple, Matroska (MKV) and FLAC allow almost arbitrary keys, while support in MP4 and MP3 is more limited.

              This is a key/value list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                 [1m"--oset-metadata=title="Output title",comment="Another tag""[0m
                        adds a title and a comment to the output file.

       [1m--oremove-metadata=<metadata-tag[,metadata-tag,...]>[0m
              Specifies metadata to exclude from the output file when copying from the input file.

              This is a string list option. See [4mList[24m [4mOptions[24m for details.

                 Example

                 [1m"--oremove-metadata=comment,genre"[0m
                        excludes copying of the the comment and genre tags to the output file.

[1mCOMMAND INTERFACE[0m
       The mpv core can be controlled with commands and properties. A number of ways to interact  with  the  player  use
       them:  key  bindings  ([1minput.conf[22m), OSD (showing information with properties), JSON IPC, the client API ([1mlibmpv[22m),
       and the classic slave mode.

   [1minput.conf[0m
       The input.conf file consists of a list of key bindings, for example:

          s screenshot      # take a screenshot with the s key
          LEFT seek 15      # map the left-arrow key to seeking forward by 15 seconds

       Each line maps a key to an input command. Keys are specified with their literal value  (upper  case  if  combined
       with  [1mShift[22m),  or  a  name for special keys. For example, [1ma [22mmaps to the [1ma [22mkey without shift, and [1mA [22mmaps to [1ma [22mwith
       shift.

       The file is located in the mpv configuration directory (normally at [1m~/.config/mpv/input.conf [22mdepending  on  plat‚Äê
       form). The default bindings are defined here:

          https://github.com/mpv-player/mpv/blob/master/etc/input.conf

       A list of special keys can be obtained with
          [1mmpv --input-keylist[0m

       In general, keys can be combined with [1mShift[22m, [1mCtrl [22mand [1mAlt[22m:

          ctrl+q quit

       [1mmpv  [22mcan be started in input test mode, which displays key bindings and the commands they're bound to on the OSD,
       instead of executing the commands:

          mpv --input-test --force-window --idle

       (Only closing the window will make [1mmpv [22mexit, pressing normal keys will merely display the binding, even if mapped
       to quit.)

       Also see [4mKey[24m [4mnames[24m.

   [1minput.conf syntax[0m
       [1m[Shift+][Ctrl+][Alt+][Meta+]<key> [{<section>}] <command> ( ; <command> )*[0m

       Note that by default, the right Alt key can be used to create special characters, and thus does not register as a
       modifier. The option [1m--no-input-right-alt-gr [22mchanges this behavior.

       Newlines always start a new binding. [1m# [22mstarts a comment (outside of quoted string arguments). To bind commands to
       the [1m# [22mkey, [1mSHARP [22mcan be used.

       [1m<key> [22mis either the literal character the key produces (ASCII or Unicode  character),  or  a  symbolic  name  (as
       printed by [1m--input-keylist[22m).

       [1m<section> [22m(braced with [1m{ [22mand [1m}[22m) is the input section for this command.

       [1m<command>  [22mis the command itself. It consists of the command name and multiple (or none) arguments, all separated
       by whitespace. String arguments should be quoted, typically with [1m"[22m. See [1mFlat command syntax[22m.

       You can bind multiple commands to one key. For example:
       a show-text "command 1" ; show-text "command 2"

       It's also possible to bind a command to a sequence of keys:
       a-b-c show-text "command run after a, b, c have been pressed"

       (This is not shown in the general command syntax.)

       If [1ma [22mor [1ma-b [22mor [1mb [22mare already bound, this will run the first command that matches, and the multi-key command  will
       never  be called. Intermediate keys can be remapped to [1mignore [22min order to avoid this issue. The maximum number of
       (non-modifier) keys for combinations is currently 4.

   [1mKey names[0m
       All mouse and keyboard input is to converted to mpv-specific key names. Key names  are  either  special  symbolic
       identifiers  representing  a  physical  key, or a text key names, which are unicode code points encoded as UTF-8.
       These are what keyboard input would normally produce, for example [1ma [22mfor the A key. As a consequence, mpv uses in‚Äê
       put translated by the current OS keyboard layout, rather than physical scan codes.

       Currently there is the hardcoded assumption that every text key can be represented as a single unicode code point
       (in NFKC form).

       All key names can be combined with the modifiers [1mShift[22m, [1mCtrl[22m, [1mAlt[22m, [1mMeta[22m. They must be prefixed to the actual  key
       name, where each modifier is followed by a [1m+ [22m(for example [1mctrl+q[22m).

       The [1mShift [22mmodifier requires some attention. For instance [1mShift+2 [22mshould usually be specified as key-name [1m@ [22mat [1min‚Äê[0m
       [1mput.conf[22m, and similarly the combination [1mAlt+Shift+2 [22mis usually [1mAlt+@[22m, etc. Special key names like [1mShift+LEFT [22mwork
       as expected. If in doubt - use [1m--input-test [22mto check how a key/combination is seen by mpv.

       Symbolic  key  names  and modifier names are case-insensitive. Unicode key names are case-sensitive because input
       bindings typically respect the shift key.

       Another type of key names are hexadecimal key names, that serve as fallback for special  keys  that  are  neither
       unicode, nor have a special mpv defined name.  They will break as soon as mpv adds proper names for them, but can
       enable you to use a key at all if that does not happen.

       All  symbolic  names  are  listed by [1m--input-keylist[22m. [1m--input-test [22mis a special mode that prints all input on the
       OSD.

       Comments on some symbolic names:

       [1mKP*    [22mKeypad names. Behavior varies by backend (whether they implement this, and on how they treat numlock), but
              typically, mpv tries to map keys on the keypad to separate names, even if they produce the  same  text  as
              normal keys.

       [1mMOUSE_BTN*, MBTN*[0m
              Various mouse buttons.

              Depending  on  backend, the mouse wheel might also be represented as a button.  In addition, [1mMOUSE_BTN3 [22mto
              [1mMOUSE_BTN6 [22mare deprecated aliases for [1mWHEEL_UP[22m, [1mWHEEL_DOWN[22m, [1mWHEEL_LEFT[22m, [1mWHEEL_RIGHT[22m.

              [1mMBTN* [22mare aliases for [1mMOUSE_BTN*[22m.

       [1mWHEEL_*[0m
              Mouse wheels (typically).

       [1mAXIS_* [22mDeprecated aliases for [1mWHEEL_*[22m.

       [1m*_DBL  [22mMouse button double clicks.

       [1mMOUSE_MOVE, MOUSE_ENTER, MOUSE_LEAVE[0m
              Emitted by mouse move events. Enter/leave happens when the mouse enters or leave the mpv  window  (or  the
              current mouse region, using the deprecated mouse region input section mechanism).

       [1mCLOSE_WIN[0m
              Pseudo  key  emitted when closing the mpv window using the OS window manager (for example, by clicking the
              close button in the window title bar).

       [1mGAMEPAD_*[0m
              Keys emitted by the SDL gamepad backend.

       [1mUNMAPPED[0m
              Pseudo-key that matches any unmapped key. (You should probably avoid this if possible,  because  it  might
              change behavior or get removed in the future.)

       [1mANY_UNICODE[0m
              Pseudo-key  that  matches any key that produces text. (You should probably avoid this if possible, because
              it might change behavior or get removed in the future.)

   [1mFlat command syntax[0m
       This is the syntax used in input.conf, and referred to "input.conf syntax" in a number of other places.

       [1m<command>  ::= [<prefixes>] <command_name> (<argument>)*[0m
       [1m<argument> ::= (<unquoted> | " <double_quoted> " | ' <single_quoted> ' | `X <custom_quoted> X`)[0m

       [1mcommand_name [22mis an unquoted string with the command name itself. See [4mList[24m [4mof[24m [4mInput[24m [4mCommands[24m for a list.

       Arguments are separated by whitespaces even if the command expects only one argument. Arguments with  whitespaces
       or other special characters must be quoted, or the command cannot be parsed correctly.

       Double  quotes  interpret  JSON/C-style escaping, like [1m\t [22mor [1m\" [22mor [1m\\[22m.  JSON escapes according to RFC 8259, minus
       surrogate pair escapes. This is the only form which allows newlines at the value - as [1m\n[22m.

       Single quotes take the content literally, and cannot include the single-quote character at the value.

       Custom quotes also take the content literally, but are more flexible  than  single  quotes.  They  start  with  [1m`[0m
       (back-quote)  followed by any ASCII character, and end at the first occurrence of the same pair in reverse order,
       e.g.  [1m`-foo-` [22mor [1m``bar``[22m. The final pair sequence is not allowed at the value - in these examples [1m-` [22mand  [1m``  [22mre‚Äê
       spectively. In the second example the last character of the value also can't be a back-quote.

       Mixed quoting at the same argument, like [1m'foo'"bar"[22m, is not supported.

       Note that argument parsing and property expansion happen at different stages.  First, arguments are determined as
       described  above,  and then, where applicable, properties are expanded - regardless of argument quoting. However,
       expansion can still be prevented with the [1mraw [22mprefix or [1m$>[22m. See [4mInput[24m [4mCommand[24m [4mPrefixes[24m and [4mProperty[24m [4mExpansion[24m.

   [1mCommands specified as arrays[0m
       This applies to certain APIs, such as [1mmp.commandv() [22mor [1mmp.command_native() [22m(with array parameters) in Lua script‚Äê
       ing, or [1mmpv_command() [22mor [1mmpv_command_node() [22m(with MPV_FORMAT_NODE_ARRAY) in the C libmpv client API.

       The command as well as all arguments are passed as a single array. Similar to the [4mFlat[24m [4mcommand[24m  [4msyntax[24m,  you  can
       first  pass prefixes as strings (each as separate array item), then the command name as string, and then each ar‚Äê
       gument as string or a native value.

       Since these APIs pass arguments as separate strings or native values, they do not expect quotes, and  do  support
       escaping.  Technically, there is the input.conf parser, which first splits the command string into arguments, and
       then invokes argument parsers for each argument. The input.conf parser normally handles quotes and escaping.  The
       array  command  APIs  mentioned  above pass strings directly to the argument parsers, or can sidestep them by the
       ability to pass non-string values.

       Property expansion is disabled by default for these APIs. This can be changed with the [1mexpand-properties  [22mprefix.
       See [4mInput[24m [4mCommand[24m [4mPrefixes[24m.

       Sometimes  commands  have  string  arguments,  that  in turn are actually parsed by other components (e.g. filter
       strings with [1mvf add[22m) - in these cases, you you would have to double-escape in input.conf, but not with the  array
       APIs.

       For complex commands, consider using [4mNamed[24m [4marguments[24m instead, which should give slightly more compatibility. Some
       commands do not support named arguments and inherently take an array, though.

   [1mNamed arguments[0m
       This  applies  to certain APIs, such as [1mmp.command_native() [22m(with tables that have string keys) in Lua scripting,
       or [1mmpv_command_node() [22m(with MPV_FORMAT_NODE_MAP) in the C libmpv client API.

       The name of the command is provided with a [1mname [22mstring field. The name of each command is defined in each command
       description in the [4mList[24m [4mof[24m [4mInput[24m [4mCommands[24m. [1m--input-cmdlist [22malso lists them. See the [1msubprocess [22mcommand for an ex‚Äê
       ample.

       Some commands do not support named arguments (e.g. [1mrun [22mcommand). You need to use APIs that pass arguments as  ar‚Äê
       rays.

       Named  arguments are not supported in the "flat" input.conf syntax, which means you cannot use them for key bind‚Äê
       ings in input.conf at all.

       Property expansion is disabled by default for these APIs. This can be changed with the [1mexpand-properties  [22mprefix.
       See [4mInput[24m [4mCommand[24m [4mPrefixes[24m.

   [1mList of Input Commands[0m
       Commands  with  parameters have the parameter name enclosed in [1m< [22m/ [1m>[22m.  Don't add those to the actual command. Op‚Äê
       tional arguments are enclosed in [1m[ [22m/ [1m][22m. If you don't pass them, they will be set to a default value.

       Remember to quote string arguments in input.conf (see [4mFlat[24m [4mcommand[24m [4msyntax[24m).

       [1mignore [22mUse this to "block" keys that should be unbound, and do nothing. Useful for  disabling  default  bindings,
              without disabling all bindings with [1m--no-input-default-bindings[22m.

       [1mseek <target> [<flags>][0m
              Change the playback position. By default, seeks by a relative amount of seconds.

              The second argument consists of flags controlling the seek mode:

              [1mrelative (default)[0m
                     Seek relative to current position (a negative value seeks backwards).

              [1mabsolute[0m
                     Seek to a given time (a negative value starts from the end of the file).

              [1mabsolute-percent[0m
                     Seek to a given percent position.

              [1mrelative-percent[0m
                     Seek relative to current position in percent.

              [1mkeyframes[0m
                     Always restart playback at keyframe boundaries (fast).

              [1mexact  [22mAlways do exact/hr/precise seeks (slow).

              Multiple flags can be combined, e.g.: [1mabsolute+keyframes[22m.

              By  default,  [1mkeyframes [22mis used for [1mrelative[22m, [1mrelative-percent[22m, and [1mabsolute-percent [22mseeks, while [1mexact [22mis
              used for [1mabsolute [22mseeks.

              Before mpv 0.9, the [1mkeyframes [22mand [1mexact [22mflags had to be passed as 3rd parameter (essentially using a space
              instead of [1m+[22m). The 3rd parameter is still parsed, but is considered deprecated.

       [1mrevert-seek [<flags>][0m
              Undoes the [1mseek [22mcommand, and some other commands that seek (but not necessarily all of them). Calling this
              command once will jump to the playback position before the seek. Calling it a second time undoes  the  [1mre‚Äê[0m
              [1mvert-seek [22mcommand itself. This only works within a single file.

              The first argument is optional, and can change the behavior:

              [1mmark   [22mMark  the  current time position. The next normal [1mrevert-seek [22mcommand will seek back to this point,
                     no matter how many seeks happened since last time.

              [1mmark-permanent[0m
                     If set, mark the current position, and do not change the mark position before the next  [1mrevert-seek[0m
                     command that has [1mmark [22mor [1mmark-permanent [22mset (or playback of the current file ends). Until this hap‚Äê
                     pens, [1mrevert-seek [22mwill always seek to the marked point. This flag cannot be combined with [1mmark[22m.

              Using it without any arguments gives you the default behavior.

       [1mframe-step[0m
              Play one frame, then pause. Does nothing with audio-only playback.

       [1mframe-back-step[0m
              Go  back by one frame, then pause. Note that this can be very slow (it tries to be precise, not fast), and
              sometimes fails to behave as expected. How well this works depends on whether precise seeking  works  cor‚Äê
              rectly  (e.g.  see the [1m--hr-seek-demuxer-offset [22moption). Video filters or other video post-processing that
              modifies timing of frames (e.g. deinterlacing) should usually work, but might make  backstepping  silently
              behave  incorrectly in corner cases. Using [1m--hr-seek-framedrop=no [22mshould help, although it might make pre‚Äê
              cise seeking slower.

              This does not work with audio-only playback.

       [1mset <name> <value>[0m
              Set the given property or option to the given value.

       [1mdel <name>[0m
              Delete the given property. Most properties cannot be deleted.

       [1madd <name> [<value>][0m
              Add the given value to the property or option. On overflow or underflow, clamp the property to  the  maxi‚Äê
              mum. If [1m<value> [22mis omitted, assume [1m1[22m.

       [1mcycle <name> [<value>][0m
              Cycle  the  given property or option. The second argument can be [1mup [22mor [1mdown [22mto set the cycle direction. On
              overflow, set the property back to the minimum, on underflow set it to the maximum. If [1mup [22mor [1mdown [22mis omit‚Äê
              ted, assume [1mup[22m.

              Whether or not key-repeat is enabled by default depends on the property.  Currently properties  with  con‚Äê
              tinuous values are repeatable by default (like [1mvolume[22m), while discrete values are not (like [1mosd-level[22m).

       [1mmultiply <name> <value>[0m
              Similar to [1madd[22m, but multiplies the property or option with the numeric value.

       [1mscreenshot <flags>[0m
              Take a screenshot.

              Multiple flags are available (some can be combined with [1m+[22m):

              [1m<subtitles> (default)[0m
                     Save the video image, in its original resolution, and with subtitles.  Some video outputs may still
                     include the OSD in the output under certain circumstances.

              [1m<video>[0m
                     Like  [1msubtitles[22m, but typically without OSD or subtitles. The exact behavior depends on the selected
                     video output.

              [1m<window>[0m
                     Save the contents of the mpv window. Typically scaled, with OSD and subtitles. The  exact  behavior
                     depends on the selected video output.

              [1m<each-frame>[0m
                     Take  a  screenshot  each frame. Issue this command again to stop taking screenshots. Note that you
                     should disable frame-dropping when using this mode - or you might receive duplicate images in cases
                     when a frame was dropped. This flag can be combined with the other flags, e.g. [1mvideo+each-frame[22m.

              Older mpv versions required passing [1msingle [22mand [1meach-frame [22mas second argument (and  did  not  have  flags).
              This syntax is still understood, but deprecated and might be removed in the future.

              If  you combine this command with another one using [1m;[22m, you can use the [1masync [22mflag to make encoding/writing
              the image file asynchronous. For normal standalone commands, this is always asynchronous, and the flag has
              no effect. (This behavior changed with mpv 0.29.0.)

              On success, returns a [1mmpv_node [22mwith a [1mfilename [22mfield set to the saved screenshot location.

       [1mscreenshot-to-file <filename> <flags>[0m
              Take a screenshot and save it to a given file. The format of the file will be  guessed  by  the  extension
              (and [1m--screenshot-format [22mis ignored - the behavior when the extension is missing or unknown is arbitrary).

              The second argument is like the first argument to [1mscreenshot [22mand supports [1msubtitles[22m, [1mvideo[22m, [1mwindow[22m.

              If the file already exists, it's overwritten.

              Like  all input command parameters, the filename is subject to property expansion as described in [4mProperty[0m
              [4mExpansion[24m.

       [1mplaylist-next <flags>[0m
              Go to the next entry on the playlist.

              First argument:

              [1mweak (default)[0m
                     If the last file on the playlist is currently played, do nothing.

              [1mforce  [22mTerminate playback if there are no more files on the playlist.

       [1mplaylist-prev <flags>[0m
              Go to the previous entry on the playlist.

              First argument:

              [1mweak (default)[0m
                     If the first file on the playlist is currently played, do nothing.

              [1mforce  [22mTerminate playback if the first file is being played.

       [1mplaylist-next-playlist[0m
              Go to the next entry on the playlist with a different [1mplaylist-path[22m.

       [1mplaylist-prev-playlist[0m
              Go to the first of the previous entries on the playlist with a different [1mplaylist-path[22m.

       [1mplaylist-play-index <integer|current|none>[0m
              Start (or restart) playback of the given playlist index. In addition to the 0-based playlist entry  index,
              it supports the following values:

              [1m<current>[0m
                     The  current  playlist entry (as in [1mplaylist-current-pos[22m) will be played again (unload and reload).
                     If none is set, playback is stopped.   (In  corner  cases,  [1mplaylist-current-pos  [22mcan  point  to  a
                     playlist entry even if playback is currently inactive,

              [1m<none> [22mPlayback  is  stopped. If idle mode ([1m--idle[22m) is enabled, the player will enter idle mode, otherwise
                     it will exit.

              This command is similar to [1mloadfile [22min that it only manipulates the state of what to  play  next,  without
              waiting until the current file is unloaded, and the next one is loaded.

              Setting  [1mplaylist-pos  [22mor similar properties can have a similar effect to this command. However, it's more
              explicit, and guarantees that playback is restarted if for example the new playlist entry is the  same  as
              the previous one.

       [1mloadfile <url> [<flags> [<options>]][0m
              Load  the  given file or URL and play it. Technically, this is just a playlist manipulation command (which
              either replaces the playlist or appends an entry to it). Actual file loading  happens  independently.  For
              example,  a [1mloadfile [22mcommand that replaces the current file with a new one returns before the current file
              is stopped, and the new file even begins loading.

              Second argument:

              [1m<replace> (default)[0m
                     Stop playback of the current file, and play the new file immediately.

              [1m<append>[0m
                     Append the file to the playlist.

              [1m<append-play>[0m
                     Append the file, and if nothing is currently playing, start  playback.   (Always  starts  with  the
                     added file, even if the playlist was not empty before running this command.)

              The third argument is a list of options and values which should be set while the file is playing. It is of
              the  form  [1mopt1=value1,opt2=value2,..[22m.  When using the client API, this can be a [1mMPV_FORMAT_NODE_MAP [22m(or a
              Lua table), however the values themselves must be strings currently. These options are  set  during  play‚Äê
              back, and restored to the previous value at end of playback (see [4mPer-File[24m [4mOptions[24m).

       [1mloadlist <url> [<flags>][0m
              Load the given playlist file or URL (like [1m--playlist[22m).

              Second argument:

              [1m<replace> (default)[0m
                     Stop playback and replace the internal playlist with the new one.

              [1m<append>[0m
                     Append the new playlist at the end of the current internal playlist.

              [1m<append-play>[0m
                     Append  the  new playlist, and if nothing is currently playing, start playback. (Always starts with
                     the new playlist, even if the internal playlist was not empty before running this command.)

       [1mplaylist-clear[0m
              Clear the playlist, except the currently played file.

       [1mplaylist-remove <index>[0m
              Remove the playlist entry at the given index. Index values start counting with 0. The special  value  [1mcur‚Äê[0m
              [1mrent  [22mremoves the current entry. Note that removing the current entry also stops playback and starts play‚Äê
              ing the next entry.

       [1mplaylist-move <index1> <index2>[0m
              Move the playlist entry at index1, so that it takes the place of the  entry  index2.  (Paradoxically,  the
              moved  playlist  entry  will not have the index value index2 after moving if index1 was lower than index2,
              because index2 refers to the target entry, not the index the entry will have after moving.)

       [1mplaylist-shuffle[0m
              Shuffle the playlist. This is similar to what is done on start if the [1m--shuffle [22moption is used.

       [1mplaylist-unshuffle[0m
              Attempt to revert the previous  [1mplaylist-shuffle  [22mcommand.  This  works  only  once  (multiple  successive
              [1mplaylist-unshuffle  [22mcommands  do  nothing).   May  not work correctly if new recursive playlists have been
              opened since a [1mplaylist-shuffle [22mcommand.

       [1mrun <command> [<arg1> [<arg2> [...]]][0m
              Run the given command. Unlike in MPlayer/mplayer2 and earlier versions of  mpv  (0.2.x  and  older),  this
              doesn't  call  the shell. Instead, the command is run directly, with each argument passed separately. Each
              argument is expanded like in [4mProperty[24m [4mExpansion[24m.

              This command has a variable number of arguments, and cannot be used with named arguments.

              The program is run in a detached way. mpv doesn't wait until the command is completed, but continues play‚Äê
              back right after spawning it.

              To get the old behavior, use [1m/bin/sh [22mand [1m-c [22mas the first two arguments.

                 Example

                        [1mrun "/bin/sh" "-c" "echo ${title} > /tmp/playing"[0m

                        This is not a particularly good example, because it doesn't handle  escaping,  and  a  specially
                        prepared  file might allow an attacker to execute arbitrary shell commands. It is recommended to
                        write a small shell script, and call that with [1mrun[22m.

       [1msubprocess[0m
              Similar to [1mrun[22m, but gives more control about process execution to the caller, and does does not detach the
              process.

              You can avoid blocking until the process terminates by running this command asynchronously.  (For  example
              [1mmp.command_native_async() [22min Lua scripting.)

              This  has  the  following  named arguments. The order of them is not guaranteed, so you should always call
              them with named arguments, see [4mNamed[24m [4marguments[24m.

              [1margs (MPV_FORMAT_NODE_ARRAY[MPV_FORMAT_STRING])[0m
                     Array of strings with the command as first argument, and subsequent command line arguments  follow‚Äê
                     ing. This is just like the [1mrun [22mcommand argument list.

                     The first array entry is either an absolute path to the executable, or a filename with no path com‚Äê
                     ponents,  in which case the executable is searched in the directories in the [1mPATH [22menvironment vari‚Äê
                     able. On Unix, this is equivalent to [1mposix_spawnp [22mand [1mexecvp [22mbehavior.

              [1mplayback_only (MPV_FORMAT_FLAG)[0m
                     Boolean indicating whether the process should be killed when playback of the current playlist entry
                     terminates (optional, default: true). If enabled, stopping playback  will  automatically  kill  the
                     process, and you can't start it outside of playback.

              [1mcapture_size (MPV_FORMAT_INT64)[0m
                     Integer  setting the maximum number of stdout plus stderr bytes that can be captured (optional, de‚Äê
                     fault: 64MB). If the number of bytes exceeds this, capturing is stopped. The limit is per  captured
                     stream.

              [1mcapture_stdout (MPV_FORMAT_FLAG)[0m
                     Capture  all  data the process outputs to stdout and return it once the process ends (optional, de‚Äê
                     fault: no).

              [1mcapture_stderr (MPV_FORMAT_FLAG)[0m
                     Same as [1mcapture_stdout[22m, but for stderr.

              [1mdetach (MPV_FORMAT_FLAG)[0m
                     Whether to run the process in detached mode (optional, default: no). In this mode, the  process  is
                     run  in  a new process session, and the command does not wait for the process to terminate. If nei‚Äê
                     ther [1mcapture_stdout [22mnor [1mcapture_stderr [22mhave been set to true, the command returns immediately after
                     the new process has been started, otherwise the command will read as long as the pipes are open.

              [1menv (MPV_FORMAT_NODE_ARRAY[MPV_FORMAT_STRING])[0m
                     Set a list of environment variables for the new process (default: empty).   If  an  empty  list  is
                     passed,  the  environment of the mpv process is used instead. (Unlike the underlying OS mechanisms,
                     the mpv command cannot start a process with empty environment. Fortunately, that is completely use‚Äê
                     less.) The format of the list is as in the [1mexecle() [22msyscall. Each string item defines  an  environ‚Äê
                     ment variable as in [1mNAME=VALUE[22m.

                     On  Lua,  you  may  use [1mutils.get_env_list() [22mto retrieve the current environment if you e.g. simply
                     want to add a new variable.

              [1mstdin_data (MPV_FORMAT_STRING)[0m
                     Feed the given string to the new process' stdin. Since this is a string, you cannot pass  arbitrary
                     binary data. If the process terminates or closes the pipe before all data is written, the remaining
                     data is silently discarded. Probably does not work on win32.

              [1mpassthrough_stdin (MPV_FORMAT_FLAG)[0m
                     If  enabled, wire the new process' stdin to mpv's stdin (default: no).  Before mpv 0.33.0, this ar‚Äê
                     gument did not exist, but the behavior was as if this was set to true.

              The command returns the following result (as [1mMPV_FORMAT_NODE_MAP[22m):

              [1mstatus (MPV_FORMAT_INT64)[0m
                     Typically this is the process exit code (0 or positive) if the process terminates normally, or neg‚Äê
                     ative for other errors (failed to start, terminated by mpv, and others).  The meaning  of  negative
                     values  is undefined, other than meaning error (and does not correspond to OS low level exit status
                     values).

                     On Windows, it can happen that a negative return value is returned even if the  process  terminates
                     normally,  because  the  win32  [1mUINT  [22mexit  code is assigned to an [1mint [22mvariable before being set as
                     [1mint64_t [22mfield in the result map. This might be fixed later.

              [1mstdout (MPV_FORMAT_BYTE_ARRAY)[0m
                     Captured stdout stream, limited to [1mcapture_size[22m.

              [1mstderr (MPV_FORMAT_BYTE_ARRAY)[0m
                     Same as [1mstdout[22m, but for stderr.

              [1merror_string (MPV_FORMAT_STRING)[0m
                     Empty string if the process terminated normally. The string [1mkilled [22mif the process was terminated in
                     an unusual way. The string [1minit [22mif the process could not be started.

                     On Windows, [1mkilled [22mis only returned when the process has been killed by mpv as a  result  of  [1mplay‚Äê[0m
                     [1mback_only [22mbeing set to true.

              [1mkilled_by_us (MPV_FORMAT_FLAG)[0m
                     Whether  the  process has been killed by mpv, for example as a result of [1mplayback_only [22mbeing set to
                     true, aborting the command (e.g. by [1mmp.abort_async_command()[22m), or if the player is about to exit.

              Note that the command itself will always return success as long as the parameters are correct. Whether the
              process could be spawned or whether it was somehow killed or returned an error status has  to  be  queried
              from the result value.

              This  command  can  be asynchronously aborted via API. Also see [4mAsynchronous[24m [4mcommand[24m [4mdetails[24m. Only the [1mrun[0m
              command can start processes in a truly detached way.

              [1mNOTE:[0m
                 The subprocess will always be terminated on player exit if it wasn't started in detached mode, even  if
                 [1mplayback_only [22mis false.

                 Warning

                        Don't  forget  to  set the [1mplayback_only [22mfield to false if you want the command to run while the
                        player is in idle mode, or if you don't want the end of playback to kill the command.

                 Example

                     local r = mp.command_native({
                         name = "subprocess",
                         playback_only = false,
                         capture_stdout = true,
                         args = {"cat", "/proc/cpuinfo"},
                     })
                     if r.status == 0 then
                         print("result: " .. r.stdout)
                     end

                 This is a fairly useless Lua example, which demonstrates how to run a process in a blocking manner, and
                 retrieving its stdout output.

       [1mquit [<code>][0m
              Exit the player. If an argument is given, it's used as process exit code.

       [1mquit-watch-later [<code>][0m
              Exit player, and store current playback position. Playing that file later will seek to the previous  posi‚Äê
              tion on start. The (optional) argument is exactly as in the [1mquit [22mcommand. See [4mRESUMING[24m [4mPLAYBACK[24m.

       [1msub-add <url> [<flags> [<title> [<lang>]]][0m
              Load the given subtitle file or stream. By default, it is selected as current subtitle  after loading.

              The [1mflags [22margument is one of the following values:

              <select>
                 Select the subtitle immediately (default).

              <auto>
                 Don't  select  the subtitle. (Or in some special situations, let the default stream selection mechanism
                 decide.)

              <cached>
                 Select the subtitle. If a subtitle with the same filename was already added, that one is selected,  in‚Äê
                 stead  of loading a duplicate entry.  (In this case, title/language are ignored, and if the was changed
                 since it was loaded, these changes won't be reflected.)

              The [1mtitle [22margument sets the track title in the UI.

              The [1mlang [22margument sets the track language, and can also influence stream selection with [1mflags [22mset to [1mauto[22m.

       [1msub-remove [<id>][0m
              Remove the given subtitle track. If the [1mid [22margument is missing, remove the current track. (Works on exter‚Äê
              nal subtitle files only.)

       [1msub-reload [<id>][0m
              Reload the given subtitle tracks. If the [1mid [22margument is missing, reload the current track. (Works  on  ex‚Äê
              ternal subtitle files only.)

              This works by unloading and re-adding the subtitle track.

       [1msub-step <skip> <flags>[0m
              Change  subtitle  timing such, that the subtitle event after the next [1m<skip> [22msubtitle events is displayed.
              [1m<skip> [22mcan be negative to step backwards.

              Secondary argument:

              [1mprimary (default)[0m
                     Steps through the primary subtitles.

              [1msecondary[0m
                     Steps through the secondary subtitles.

       [1msub-seek <skip> <flags>[0m
              Seek to the next (skip set to 1) or the previous (skip set to -1) subtitle.  This is similar to  [1msub-step[22m,
              except that it seeks video and audio instead of adjusting the subtitle delay.

              Secondary argument:

              [1mprimary (default)[0m
                     Seeks through the primary subtitles.

              [1msecondary[0m
                     Seeks through the secondary subtitles.

              For  embedded  subtitles (like with Matroska), this works only with subtitle events that have already been
              displayed, or are within a short prefetch range.

       [1mprint-text <text>[0m
              Print text to stdout. The string can contain properties (see [4mProperty[24m [4mExpansion[24m). Take care to put the ar‚Äê
              gument in quotes.

       [1mshow-text <text> [<duration>|-1 [<level>]][0m
              Show text on the OSD. The string can contain properties, which are expanded as described in  [4mProperty[24m  [4mEx‚Äê[0m
              [4mpansion[24m.  This  can  be used to show playback time, filename, and so on. [1mno-osd [22mhas no effect on this com‚Äê
              mand.

              [1m<duration>[0m
                     The time in ms to show the message for. By default, it uses the same value as [1m--osd-duration[22m.

              [1m<level>[0m
                     The minimum OSD level to show the text at (see [1m--osd-level[22m).

       [1mexpand-text <string>[0m
              Property-expand the argument and return the expanded string. This can be used only through the client  API
              or from a script using [1mmp.command_native[22m. (see [4mProperty[24m [4mExpansion[24m).

       [1mexpand-path "<string>"[0m
              Expand a path's double-tilde placeholders into a platform-specific path.  As [1mexpand-text[22m, this can only be
              used through the client API or from a script using [1mmp.command_native[22m.

                 Example

                        [1mmp.osd_message(mp.command_native({"expand-path", "~~home/"}))[0m

                        This line of Lua would show the location of the user's mpv configuration directory on the OSD.

       [1mshow-progress[0m
              Show  the  progress bar, the elapsed time and the total duration of the file on the OSD. [1mno-osd [22mhas no ef‚Äê
              fect on this command.

       [1mwrite-watch-later-config[0m
              Write the resume config file that the [1mquit-watch-later [22mcommand writes, but continue playback normally.

       [1mdelete-watch-later-config [<filename>][0m
              Delete any existing resume config file that was written by [1mquit-watch-later  [22mor  [1mwrite-watch-later-config[22m.
              If  a  filename  is  specified, then the deleted config is for that file; otherwise, it is the same one as
              would be written by [1mquit-watch-later [22mor [1mwrite-watch-later-config [22min the current circumstance.

       [1mstop [<flags>][0m
              Stop playback and clear playlist. With default settings, this is essentially like  [1mquit[22m.  Useful  for  the
              client API: playback can be stopped without terminating the player.

              The first argument is optional, and supports the following flags:

              [1mkeep-playlist[0m
                     Do not clear the playlist.

       [1mmouse <x> <y> [<button> [<mode>]][0m
              Send a mouse event with given coordinate ([1m<x>[22m, [1m<y>[22m).

              Second argument:

              [1m<button>[0m
                     The  button  number  of  clicked mouse button. This should be one of 0-19.  If [1m<button> [22mis omitted,
                     only the position will be updated.

              Third argument:

              [1m<single> (default)[0m
                     The mouse event represents regular single click.

              [1m<double>[0m
                     The mouse event represents double-click.

       [1mkeypress <name>[0m
              Send a key event through mpv's input handler, triggering whatever behavior is configured to that key. [1mname[0m
              uses the [1minput.conf [22mnaming scheme for keys and modifiers. Useful for the client API:  key  events  can  be
              sent to libmpv to handle internally.

       [1mkeydown <name>[0m
              Similar  to  [1mkeypress[22m,  but  sets the [1mKEYDOWN [22mflag so that if the key is bound to a repeatable command, it
              will be run repeatedly with mpv's key repeat timing until the [1mkeyup [22mcommand is called.

       [1mkeyup [<name>][0m
              Set the [1mKEYUP [22mflag, stopping any repeated behavior that had been triggered. [1mname [22mis optional. If  [1mname  [22mis
              not  given  or is an empty string, [1mKEYUP [22mwill be set on all keys. Otherwise, [1mKEYUP [22mwill only be set on the
              key specified by [1mname[22m.

       [1mkeybind <name> <command>[0m
              Binds a key to an input command. [1mcommand [22mmust be a complete command containing all the  desired  arguments
              and flags. Both [1mname [22mand [1mcommand [22muse the [1minput.conf [22mnaming scheme. This is primarily useful for the client
              API.

       [1maudio-add <url> [<flags> [<title> [<lang>]]][0m
              Load the given audio file. See [1msub-add [22mcommand.

       [1maudio-remove [<id>][0m
              Remove the given audio track. See [1msub-remove [22mcommand.

       [1maudio-reload [<id>][0m
              Reload the given audio tracks. See [1msub-reload [22mcommand.

       [1mvideo-add <url> [<flags> [<title> [<lang> [<albumart>]]]][0m
              Load the given video file. See [1msub-add [22mcommand for common options.

              [1malbumart (MPV_FORMAT_FLAG)[0m
                     If enabled, mpv will load the given video as album art.

       [1mvideo-remove [<id>][0m
              Remove the given video track. See [1msub-remove [22mcommand.

       [1mvideo-reload [<id>][0m
              Reload the given video tracks. See [1msub-reload [22mcommand.

       [1mrescan-external-files [<mode>][0m
              Rescan  external  files  according  to the current [1m--sub-auto[22m, [1m--audio-file-auto [22mand [1m--cover-art-auto [22mset‚Äê
              tings. This can be used to auto-load external files [4mafter[24m the file was loaded.

              The [1mmode [22margument is one of the following:

              [1m<reselect> (default)[0m
                     Select the default audio and subtitle streams, which typically  selects  external  files  with  the
                     highest preference. (The implementation is not perfect, and could be improved on request.)

              [1m<keep-selection>[0m
                     Do not change current track selections.

   [1mInput Commands that are Possibly Subject to Change[0m
       [1maf <operation> <value>[0m
              Change audio filter chain. See [1mvf [22mcommand.

       [1mvf <operation> <value>[0m
              Change video filter chain.

              The semantics are exactly the same as with option parsing (see [4mVIDEO[24m [4mFILTERS[24m). As such the text below is a
              redundant and incomplete summary.

              The first argument decides what happens:

              [1m<set>  [22mOverwrite the previous filter chain with the new one.

              [1m<add>  [22mAppend the new filter chain to the previous one.

              [1m<toggle>[0m
                     Check  if the given filter (with the exact parameters) is already in the video chain. If it is, re‚Äê
                     move the filter. If it isn't, add the filter.  (If several filters are passed to the command,  this
                     is done for each filter.)

                     A special variant is combining this with labels, and using [1m@name [22mwithout filter name and parameters
                     as filter entry. This toggles the enable/disable flag.

              [1m<remove>[0m
                     Like [1mtoggle[22m, but always remove the given filter from the chain.

              [1m<clr>  [22mRemove  all filters. Note that like the other sub-commands, this does not control automatically in‚Äê
                     serted filters.

              The argument is always needed. E.g. in case of [1mclr [22muse [1mvf clr ""[22m.

              You can assign labels to filter by prefixing them with [1m@name: [22m(where [1mname [22mis a user-chosen arbitrary iden‚Äê
              tifier). Labels can be used to refer to filters by name in all of the filter chain modification  commands.
              For [1madd[22m, using an already used label will replace the existing filter.

              The  [1mvf  [22mcommand  shows  the list of requested filters on the OSD after changing the filter chain. This is
              roughly equivalent to [1mshow-text ${vf}[22m. Note that auto-inserted filters for format conversion are not shown
              on the list, only what was requested by the user.

              Normally, the commands will check whether the video chain is recreated successfully, and will undo the op‚Äê
              eration on failure. If the command is run before video is configured (can happen if the command is run im‚Äê
              mediately after opening a file and before a video frame is decoded), this check can't be run. Then it  can
              happen that creating the video chain fails.

                 Example for input.conf

                 ‚Ä¢ [1ma vf set vflip [22mturn the video upside-down on the [1ma [22mkey

                 ‚Ä¢ [1mb vf set "" [22mremove all video filters on [1mb[0m

                 ‚Ä¢ [1mc vf toggle gradfun [22mtoggle debanding on [1mc[0m

                 Example how to toggle disabled filters at runtime

                 ‚Ä¢ Add  something  like  [1mvf-add=@deband:!gradfun  [22mto [1mmpv.conf[22m.  The [1m@deband: [22mis the label, an arbitrary,
                   user-given name for this filter entry. The [1m! [22mbefore the filter name disables the filter  by  default.
                   Everything  after  this  is the normal filter name and possibly filter parameters, like in the normal
                   [1m--vf [22msyntax.

                 ‚Ä¢ Add [1ma vf toggle @deband [22mto [1minput.conf[22m. This toggles the "disabled" flag for the filter with the label
                   [1mdeband [22mwhen the [1ma [22mkey is hit.

       [1mcycle-values [<"!reverse">] <property> <value1> [<value2> [...]][0m
              Cycle through a list of values. Each invocation of the command will set the given  property  to  the  next
              value  in the list. The command will use the current value of the property/option, and use it to determine
              the current position in the list of values. Once it has found it, it will set the next value in  the  list
              (wrapping around to the first item if needed).

              This command has a variable number of arguments, and cannot be used with named arguments.

              The  special  argument [1m!reverse [22mcan be used to cycle the value list in reverse. The only advantage is that
              you don't need to reverse the value list yourself when adding a second key binding for cycling backwards.

       [1menable-section <name> [<flags>][0m
              This command is deprecated, except for mpv-internal uses.

              Enable all key bindings in the named input section.

              The enabled input sections form a stack. Bindings in sections on the top of the  stack  are  preferred  to
              lower  sections.  This  command  puts  the  section on top of the stack. If the section was already on the
              stack, it is implicitly removed beforehand. (A section cannot be on the stack more than once.)

              The [1mflags [22mparameter can be a combination (separated by [1m+[22m) of the following flags:

              [1m<exclusive>[0m
                     All sections enabled before the newly enabled section are disabled.  They  will  be  re-enabled  as
                     soon  as all exclusive sections above them are removed. In other words, the new section shadows all
                     previous sections.

              [1m<allow-hide-cursor>[0m
                     This feature can't be used through the public API.

              [1m<allow-vo-dragging>[0m
                     Same.

       [1mdisable-section <name>[0m
              This command is deprecated, except for mpv-internal uses.

              Disable the named input section. Undoes [1menable-section[22m.

       [1mdefine-section <name> <contents> [<flags>][0m
              This command is deprecated, except for mpv-internal uses.

              Create a named input section, or replace the contents of an already existing input section.  The  [1mcontents[0m
              parameter  uses  the same syntax as the [1minput.conf [22mfile (except that using the section syntax in it is not
              allowed), including the need to separate bindings with a newline character.

              If the [1mcontents [22mparameter is an empty string, the section is removed.

              The section with the name [1mdefault [22mis the normal input section.

              In general, input sections have to be enabled with the [1menable-section [22mcommand, or they are ignored.

              The last parameter has the following meaning:

              [1m<default> (also used if parameter omitted)[0m
                     Use a key binding defined by this section only if the user hasn't already bound this key to a  com‚Äê
                     mand.

              [1m<force>[0m
                     Always bind a key. (The input section that was made active most recently wins if there are ambigui‚Äê
                     ties.)

              This command can be used to dispatch arbitrary keys to a script or a client API user. If the input section
              defines [1mscript-binding [22mcommands, it is also possible to get separate events on key up/down, and relatively
              detailed  information about the key state. The special key name [1munmapped [22mcan be used to match any unmapped
              key.

       [1moverlay-add <id> <x> <y> <file> <offset> <fmt> <w> <h> <stride>[0m
              Add an OSD overlay sourced from raw data. This might be useful for scripts  and  applications  controlling
              mpv, and which want to display things on top of the video window.

              Overlays  are usually displayed in screen resolution, but with some VOs, the resolution is reduced to that
              of the video's. You can read the [1mosd-width [22mand [1mosd-height [22mproperties. At least with [1m--vo-xv [22mand anamorphic
              video (such as DVD), [1mosd-par [22mshould be read as well, and the overlay should be aspect-compensated.

              This has the following named arguments. The order of them is not guaranteed, so  you  should  always  call
              them with named arguments, see [4mNamed[24m [4marguments[24m.

              [1mid  [22mis  an  integer  between  0 and 63 identifying the overlay element. The ID can be used to add multiple
              overlay parts, update a part by using this command with an already existing ID, or to remove a  part  with
              [1moverlay-remove[22m. Using a previously unused ID will add a new overlay, while reusing an ID will update it.

              [1mx [22mand [1my [22mspecify the position where the OSD should be displayed.

              [1mfile  [22mspecifies  the file the raw image data is read from. It can be either a numeric UNIX file descriptor
              prefixed with [1m@ [22m(e.g. [1m@4[22m), or a filename. The file will be mapped into memory with [1mmmap()[22m, copied, and un‚Äê
              mapped before the command returns (changed in mpv 0.18.1).

              It is also possible to pass a raw memory address for use as bitmap memory by passing a memory  address  as
              integer prefixed with an [1m& [22mcharacter.  Passing the wrong thing here will crash the player. This mode might
              be  useful  for  use  with  libmpv.  The [1moffset [22mparameter is simply added to the memory address (since mpv
              0.8.0, ignored before).

              [1moffset [22mis the byte offset of the first pixel in the  source  file.   (The  current  implementation  always
              mmap's  the whole file from position 0 to the end of the image, so large offsets should be avoided. Before
              mpv 0.8.0, the offset was actually passed directly to [1mmmap[22m, but it was changed to make using it easier.)

              [1mfmt [22mis a string identifying the image format. Currently, only [1mbgra [22mis defined. This format has 4 bytes per
              pixels, with 8 bits per component.  The least significant 8 bits are blue, and the most significant 8 bits
              are alpha (in little endian, the components are B-G-R-A, with B as first byte).  This  uses  premultiplied
              alpha:  every color component is already multiplied with the alpha component. This means the numeric value
              of each component is equal to or smaller than the alpha component. (Violating this rule will lead to  dif‚Äê
              ferent  results  with different VOs: numeric overflows resulting from blending broken alpha values is con‚Äê
              sidered something that shouldn't happen, and consequently implementations don't ensure that you  get  pre‚Äê
              dictable behavior in this case.)

              [1mw[22m,  [1mh[22m,  and  [1mstride  [22mspecify  the size of the overlay. [1mw [22mis the visible width of the overlay, while [1mstride[0m
              gives the width in bytes in memory. In the simple case, and with the [1mbgra [22mformat,  [1mstride==4*w[22m.   In  gen‚Äê
              eral, the total amount of memory accessed is [1mstride * h[22m.  (Technically, the minimum size would be [1mstride *[0m
              [1m(h - 1) + w * 4[22m, but for simplicity, the player will access all [1mstride * h [22mbytes.)

              [1mNOTE:[0m
                 Before  mpv  0.18.1,  you  had to do manual "double buffering" when updating an overlay by replacing it
                 with a different memory buffer. Since mpv 0.18.1, the memory is simply copied and doesn't reference any
                 of the memory indicated by the command's arguments after the command returns.  If you want to use  this
                 command before mpv 0.18.1, reads the old docs to see how to handle this correctly.

       [1moverlay-remove <id>[0m
              Remove an overlay added with [1moverlay-add [22mand the same ID. Does nothing if no overlay with this ID exists.

       [1mosd-overlay[0m
              Add/update/remove an OSD overlay.

              (Although  this  sounds similar to [1moverlay-add[22m, [1mosd-overlay [22mis for text overlays, while [1moverlay-add [22mis for
              bitmaps. Maybe [1moverlay-add [22mwill be merged into [1mosd-overlay [22mto remove this oddity.)

              You can use this to add text overlays in ASS format. ASS has  advanced  positioning  and  rendering  tags,
              which can be used to render almost any kind of vector graphics.

              This command accepts the following parameters:

              [1mid     [22mArbitrary  integer that identifies the overlay. Multiple overlays can be added by calling this com‚Äê
                     mand with different [1mid [22mparameters. Calling this command with the same [1mid  [22mreplaces  the  previously
                     set overlay.

                     There  is  a separate namespace for each libmpv client (i.e. IPC connection, script), so IDs can be
                     made up and assigned by the API user without conflicting with other API users.

                     If the libmpv client is destroyed, all overlays associated with it are also deleted. In particular,
                     connecting via [1m--input-ipc-server[22m, adding an overlay, and disconnecting will remove the overlay im‚Äê
                     mediately again.

              [1mformat [22mString that gives the type of the overlay. Accepts the following values (HTML rendering of this  is
                     broken, view the generated manpage instead, or the raw RST source):

                     [1mass-events[0m
                            The  [1mdata [22mparameter is a string. The string is split on the newline character. Every line is
                            turned into the [1mText [22mpart of a [1mDialogue [22mASS event. Timing is unused (but behavior of  timing
                            dependent ASS tags may change in future mpv versions).

                            Note  that it's better to put multiple lines into [1mdata[22m, instead of adding multiple OSD over‚Äê
                            lays.

                            This provides 2 ASS [1mStyles[22m. [1mOSD [22mcontains the text style as defined by the current  [1m--osd-...[0m
                            options.  [1mDefault [22mis similar, and contains style that [1mOSD [22mwould have if all options were set
                            to the default.

                            In addition, the [1mres_x [22mand [1mres_y [22moptions specify the value of the ASS [1mPlayResX [22mand  [1mPlayResY[0m
                            header  fields.  If [1mres_y [22mis set to 0, [1mPlayResY [22mis initialized to an arbitrary default value
                            (but note that the default for this command is 720, not 0).  If [1mres_x [22mis set to 0,  [1mPlayResX[0m
                            is set based on [1mres_y [22msuch that a virtual ASS pixel has a square pixel aspect ratio.

                     [1mnone   [22mSpecial  value that causes the overlay to be removed. Most parameters other than [1mid [22mand [1mfor‚Äê[0m
                            [1mmat [22mare mostly ignored.

              [1mdata   [22mString defining the overlay contents according to the [1mformat [22mparameter.

              [1mres_x, res_y[0m
                     Used if [1mformat [22mis set to [1mass-events [22m(see description there).  Optional, defaults to 0/720.

              [1mz      [22mThe Z order of the overlay. Optional, defaults to 0.

                     Note that Z order between different overlays of different formats is static, and cannot be  changed
                     (currently, this means that bitmap overlays added by [1moverlay-add [22mare always on top of the ASS over‚Äê
                     lays  added  by  [1mosd-overlay[22m).  In addition, the builtin OSD components are always below any of the
                     custom OSD. (This includes subtitles of any kind as well as text rendered by [1mshow-text[22m.)

                     It's possible that future mpv versions will randomly change how Z order between different OSD  for‚Äê
                     mats and builtin OSD is handled.

              [1mhidden [22mIf set to true, do not display this (default: false).

              [1mcompute_bounds[0m
                     If set to true, attempt to determine bounds and write them to the command's result value as [1mx0[22m, [1mx1[22m,
                     [1my0[22m,  [1my1 [22mrectangle (default: false). If the rectangle is empty, not known, or somehow degenerate, it
                     is not set. [1mx1[22m/[1my1 [22mis the coordinate of the bottom exclusive corner of the rectangle.

                     The result value may depend on the VO window size, and is based on the last known  window  size  at
                     the time of the call. This means the results may be different from what is actually rendered.

                     For  [1mass-events[22m, the result rectangle is recomputed to [1mPlayRes [22mcoordinates ([1mres_x[22m/[1mres_y[22m). If window
                     size is not known, a fallback is chosen.

                     You should be aware that this mechanism is very inefficient, as it renders  the  full  result,  and
                     then uses the bounding box of the rendered bitmap list (even if [1mhidden [22mis set). It will flush vari‚Äê
                     ous caches.  Its results also depend on the used libass version.

                     This feature is experimental, and may change in some way again.

              [1mNOTE:[0m
                 Always  use  named  arguments  ([1mmpv_command_node()[22m). Lua scripts should use the [1mmp.create_osd_overlay()[0m
                 helper instead of invoking this command directly.

       [1mscript-message [<arg1> [<arg2> [...]]][0m
              Send a message to all clients, and pass it the following list of arguments.  What this message means,  how
              many  arguments  it  takes,  and what the arguments mean is fully up to the receiver and the sender. Every
              client receives the message, so be careful about name clashes (or use [1mscript-message-to[22m).

              This command has a variable number of arguments, and cannot be used with named arguments.

       [1mscript-message-to <target> [<arg1> [<arg2> [...]]][0m
              Same as [1mscript-message[22m, but send it only to the client named [1m<target>[22m. Each client (scripts  etc.)  has  a
              unique  name. For example, Lua scripts can get their name via [1mmp.get_script_name()[22m. Note that client names
              only consist of alphanumeric characters and [1m_[22m.

              This command has a variable number of arguments, and cannot be used with named arguments.

       [1mscript-binding <name>[0m
              Invoke a script-provided key binding. This can be used to remap key  bindings  provided  by  external  Lua
              scripts.

              The argument is the name of the binding.

              It  can  optionally  be  prefixed  with  the name of the script, using [1m/ [22mas separator, e.g. [1mscript-binding[0m
              [1mscriptname/bindingname[22m. Note that script names only consist of alphanumeric characters and [1m_[22m.

              For completeness, here is how this command works internally. The details could change  any  time.  On  any
              matching key event, [1mscript-message-to [22mor [1mscript-message [22mis called (depending on whether the script name is
              included), with the following arguments:

              1. The string [1mkey-binding[22m.

              2. The name of the binding (as established above).

              3. The key state as string (see below).

              4. The key name (since mpv 0.15.0).

              5. The text the key would produce, or empty string if not applicable.

              The  5th  argument  is only set if no modifiers are present (using the shift key with a letter is normally
              not emitted as having a modifier, and results in upper case text instead, but some backends may mess up).

              The key state consists of 2 characters:

              1. One of [1md [22m(key was pressed down), [1mu [22m(was released), [1mr [22m(key is still down, and was repeated; only if  key
                 repeat is enabled for this binding), [1mp [22m(key was pressed; happens if up/down can't be tracked).

              2. Whether the event originates from the mouse, either [1mm [22m(mouse button) or [1m- [22m(something else).

              Future versions can add more arguments and more key state characters to support more input peculiarities.

       [1mab-loop[0m
              Cycle through A-B loop states. The first command will set the [1mA [22mpoint (the [1mab-loop-a [22mproperty); the second
              the [1mB [22mpoint, and the third will clear both points.

       [1mdrop-buffers[0m
              Drop  audio/video/demuxer buffers, and restart from fresh. Might help with unseekable streams that are go‚Äê
              ing out of sync.  This command might be changed or removed in the future.

       [1mscreenshot-raw [<flags>][0m
              Return a screenshot in memory. This can be used only through the client API. The  MPV_FORMAT_NODE_MAP  re‚Äê
              turned  by  this  command  has the [1mw[22m, [1mh[22m, [1mstride [22mfields set to obvious contents. The [1mformat [22mfield is set to
              [1mbgr0 [22mby default. This format is organized as [1mB8G8R8X8 [22m(where [1mB [22mis the LSB). The contents of the padding  [1mX[0m
              are  undefined.  The  [1mdata [22mfield is of type MPV_FORMAT_BYTE_ARRAY with the actual image data. The image is
              freed as soon as the result mpv_node is freed. As usual with client API semantics, you are not allowed  to
              write to the image data.

              The  [1mstride  [22mis  the  number  of  bytes from a pixel at [1m(x0, y0) [22mto the pixel at [1m(x0, y0 + 1)[22m. This can be
              larger than [1mw * 4 [22mif the image was cropped, or if there is padding. This number can be negative  as  well.
              You access a pixel with [1mbyte_index = y * stride + x * 4 [22m(assuming the [1mbgr0 [22mformat).

              The [1mflags [22margument is like the first argument to [1mscreenshot [22mand supports [1msubtitles[22m, [1mvideo[22m, [1mwindow[22m.

       [1mvf-command <label> <command> <argument> [<target>][0m
              Send  a  command  to  the filter. Note that currently, this only works with the [1mlavfi [22mfilter. Refer to the
              libavfilter documentation for the list of supported commands for each filter.

              [1m<label> [22mis a mpv filter label, use [1mall [22mto send it to all filters at once.

              [1m<command> [22mand [1m<argument> [22mare filter-specific strings.

              [1m<target> [22mis a filter or filter instance name and defaults to [1mall[22m.  Note that the target is  an  additional
              specifier for filters that support them, such as complex [1mlavfi [22mfilter chains.

       [1maf-command <label> <command> <argument> [<target>][0m
              Same as [1mvf-command[22m, but for audio filters.

       [1mapply-profile <name> [<mode>][0m
              Apply  the  contents  of a named profile. This is like using [1mprofile=name [22min a config file, except you can
              map it to a key binding to change it at runtime.

              The mode argument:

              [1mdefault[0m
                     Apply the profile. Default if the argument is omitted.

              [1mrestore[0m
                     Restore options set by a previous [1mapply-profile [22mcommand for this profile. Only works if the profile
                     has [1mprofile-restore [22mset to a relevant mode. Prints a warning if nothing could be done. See  [4mRuntime[0m
                     [4mprofiles[24m for details.

       [1mload-script <filename>[0m
              Load  a script, similar to the [1m--script [22moption. Whether this waits for the script to finish initialization
              or not changed multiple times, and the future behavior is left undefined.

              On success, returns a [1mmpv_node [22mwith a [1mclient_id [22mfield set to the return value of the  [1mmpv_client_id()  [22mAPI
              call of the newly created script handle.

       [1mchange-list <name> <operation> <value>[0m
              This  command changes list options as described in [4mList[24m [4mOptions[24m. The [1m<name> [22mparameter is the normal option
              name, while [1m<operation> [22mis the suffix or action used on the option.

              Some operations take no value, but the command still requires the value parameter.  In  these  cases,  the
              value must be an empty string.

                 Example

                        [1mchange-list glsl-shaders append file.glsl[0m

                        Add  a  filename  to  the  [1mglsl-shaders  [22mlist. The command line equivalent is [1m--glsl-shaders-ap‚Äê[0m
                        [1mpend=file.glsl [22mor alternatively [1m--glsl-shader=file.glsl[22m.

       [1mdump-cache <start> <end> <filename>[0m
              Dump the current cache to the given filename. The [1m<filename> [22mfile is overwritten  if  it  already  exists.
              [1m<start> [22mand [1m<end> [22mgive the time range of what to dump. If no data is cached at the given time range, noth‚Äê
              ing may be dumped (creating a file with no packets).

              Dumping a larger part of the cache will freeze the player. No effort was made to fix this, as this feature
              was meant mostly for creating small excerpts.

              See [1m--stream-record [22mfor various caveats that mostly apply to this command too, as both use the same under‚Äê
              lying code for writing the output file.

              If [1m<filename> [22mis an empty string, an ongoing [1mdump-cache [22mis stopped.

              If  [1m<end>  [22mis [1mno[22m, then continuous dumping is enabled. Then, after dumping the existing parts of the cache,
              anything read from network is appended to the cache as well. This behaves similar to [1m--stream-record  [22m(al‚Äê
              though it does not conflict with that option, and they can be both active at the same time).

              If the [1m<end> [22mtime is after the cache, the command will _not_ wait and write newly received data to it.

              The  end  of  the  resulting file may be slightly damaged or incomplete at the end. (Not enough effort was
              made to ensure that the end lines up properly.)

              Note that this command will finish only once dumping ends. That means it works similar to  the  [1mscreenshot[0m
              command,  just  that  it can block much longer. If continuous dumping is used, the command will not finish
              until playback is stopped,  an  error  happens,  another  [1mdump-cache  [22mcommand  is  run,  or  an  API  like
              [1mmp.abort_async_command [22mwas called to explicitly stop the command. See [4mSynchronous[24m [4mvs.[24m [4mAsynchronous[24m.

              [1mNOTE:[0m
                 This  was mostly created for network streams. For local files, there may be much better methods to cre‚Äê
                 ate excerpts and such. There are tons of much more user-friendly Lua scripts, that will re-encode parts
                 of a file by spawning a separate instance of [1mffmpeg[22m. With network streams, this is not that easily pos‚Äê
                 sible, as the stream would have to be downloaded again. Even if [1m--stream-record [22mis used to  record  the
                 stream to the local filesystem, there may be problems, because the recorded file is still written to.

              This command is experimental, and all details about it may change in the future.

       [1mab-loop-dump-cache <filename>[0m
              Essentially  calls  [1mdump-cache  [22mwith  the  current AB-loop points as arguments. Like [1mdump-cache[22m, this will
              overwrite the file at [1m<filename>[22m. Likewise, if the B point is set to [1mno[22m, it will enter continuous  dumping
              after the existing cache was dumped.

              The  author reserves the right to remove this command if enough motivation is found to move this function‚Äê
              ality to a trivial Lua script.

       [1mab-loop-align-cache[0m
              Re-adjust the A/B loop points to the start and end within the cache the  [1mab-loop-dump-cache  [22mcommand  will
              (probably) dump. Basically, it aligns the times on keyframes. The guess might be off especially at the end
              (due  to  granularity issues due to remuxing). If the cache shrinks in the meantime, the points set by the
              command will not be the effective parameters either.

              This command has an even more uncertain future than [1mab-loop-dump-cache [22mand  might  disappear  without  re‚Äê
              placement if the author decides it's useless.

       Undocumented commands: [1mao-reload [22m(experimental/internal).

   [1mList of events[0m
       This  is  a  partial  list  of events. This section describes what [1mmpv_event_to_node() [22mreturns, and which is what
       scripting APIs and the JSON IPC sees. Note that the C API has separate C-level declarations with [1mmpv_event[22m, which
       may be slightly different.

       Note that events are asynchronous: the player core continues running while events are delivered  to  scripts  and
       other clients. In some cases, you can use hooks to enforce synchronous execution.

       All events can have the following fields:

       [1mevent  [22mName as the event (as returned by [1mmpv_event_name()[22m).

       [1mid     [22mThe [1mreply_userdata [22mfield (opaque user value). If [1mreply_userdata [22mis 0, the field is not added.

       [1merror  [22mSet to an error string (as returned by [1mmpv_error_string()[22m). This field is missing if no error happened, or
              the event type does not report error.  Most events leave this unset.

       This list uses the event name field value, and the C API symbol in brackets:

       [1mstart-file (MPV_EVENT_START_FILE)[0m
              Happens  right before a new file is loaded. When you receive this, the player is loading the file (or pos‚Äê
              sibly already done with it).

              This has the following fields:

              [1mplaylist_entry_id[0m
                     Playlist entry ID of the file being loaded now.

       [1mend-file (MPV_EVENT_END_FILE)[0m
              Happens after a file was unloaded. Typically, the player will load the next file right away,  or  quit  if
              this was the last file.

              The event has the following fields:

              [1mreason [22mHas one of these values:

                     [1meof    [22mThe  file  has ended. This can (but doesn't have to) include incomplete files or broken net‚Äê
                            work connections under circumstances.

                     [1mstop   [22mPlayback was ended by a command.

                     [1mquit   [22mPlayback was ended by sending the quit command.

                     [1merror  [22mAn error happened. In this case, an [1merror [22mfield is present with the error string.

                     [1mredirect[0m
                            Happens with playlists and similar. Details see [1mMPV_END_FILE_REASON_REDIRECT [22min the C API.

                     [1munknown[0m
                            Unknown. Normally doesn't happen, unless the Lua API is out of sync with the C  API.  (Like‚Äê
                            wise,  it  could  happen  that your script gets reason strings that did not exist yet at the
                            time your script was written.)

              [1mplaylist_entry_id[0m
                     Playlist entry ID of the file that was being played or attempted to be played. This  has  the  same
                     value as the [1mplaylist_entry_id [22mfield in the corresponding [1mstart-file [22mevent.

              [1mfile_error[0m
                     Set  to  mpv  error string describing the approximate reason why playback failed. Unset if no error
                     known. (In Lua scripting, this value was set on the [1merror [22mfield directly. This is deprecated  since
                     mpv 0.33.0.  In the future, this [1merror [22mfield will be unset for this specific event.)

              [1mplaylist_insert_id[0m
                     If  loading ended, because the playlist entry to be played was for example a playlist, and the cur‚Äê
                     rent playlist entry is replaced with a number of other entries.  This  may  happen  at  least  with
                     MPV_END_FILE_REASON_REDIRECT  (other event types may use this for similar but different purposes in
                     the future). In this case, playlist_insert_id will be set to the playlist entry ID of the first in‚Äê
                     serted entry, and playlist_insert_num_entries to the total number  of  inserted  playlist  entries.
                     Note  this  in  this  specific case, the ID of the last inserted entry is playlist_insert_id+num-1.
                     Beware that depending on circumstances, you may observe the new playlist entries before seeing  the
                     event  (e.g.  reading  the "playlist" property or getting a property change notification before re‚Äê
                     ceiving the event).  If this is 0 in the C API, this field isn't added.

              [1mplaylist_insert_num_entries[0m
                     See playlist_insert_id. Only present if playlist_insert_id is present.

       [1mfile-loaded (MPV_EVENT_FILE_LOADED)[0m
              Happens after a file was loaded and begins playback.

       [1mseek (MPV_EVENT_SEEK)[0m
              Happens on seeking. (This might include cases when the player seeks internally, even without user interac‚Äê
              tion. This includes e.g. segment changes when playing ordered chapters Matroska files.)

       [1mplayback-restart (MPV_EVENT_PLAYBACK_RESTART)[0m
              Start of playback after seek or after file was loaded.

       [1mshutdown (MPV_EVENT_SHUTDOWN)[0m
              Sent when the player quits, and the script should terminate. Normally handled automatically.  See  [4mDetails[0m
              [4mon[24m [4mthe[24m [4mscript[24m [4minitialization[24m [4mand[24m [4mlifecycle[24m.

       [1mlog-message (MPV_EVENT_LOG_MESSAGE)[0m
              Receives messages enabled with [1mmpv_request_log_messages() [22m(Lua: [1mmp.enable_messages[22m).

              This contains, in addition to the default event fields, the following fields:

              [1mprefix [22mThe  module  prefix, identifies the sender of the message. This is what the terminal player puts in
                     front of the message text when using the [1m--v [22moption, and is also what is used for [1m--msg-level[22m.

              [1mlevel  [22mThe log level as string. See [1mmsg.log [22mfor possible log level names.  Note that later versions of mpv
                     might add new levels or remove (undocumented) existing ones.

              [1mtext   [22mThe log message. The text will end with a newline character.  Sometimes  it  can  contain  multiple
                     lines.

              Keep  in  mind  that  these messages are meant to be hints for humans. You should not parse them, and pre‚Äê
              fix/level/text of messages might change any time.

       [1mhook   [22mThe event has the following fields:

              [1mhook_id[0m
                     ID to pass to [1mmpv_hook_continue()[22m. The Lua scripting wrapper provides a better API around this with
                     [1mmp.add_hook()[22m.

       [1mget-property-reply (MPV_EVENT_GET_PROPERTY_REPLY)[0m
              See C API.

       [1mset-property-reply (MPV_EVENT_SET_PROPERTY_REPLY)[0m
              See C API.

       [1mcommand-reply (MPV_EVENT_COMMAND_REPLY)[0m
              This is one of the commands for which the [1m`error [22mfield is meaningful.

              JSON IPC and Lua and possibly other backends treat this specially and may not pass the actual event to the
              user. See C API.

              The event has the following fields:

              [1mresult [22mThe result (on success) of any [1mmpv_node [22mtype, if any.

       [1mclient-message (MPV_EVENT_CLIENT_MESSAGE)[0m
              Lua and possibly other backends treat this specially and may not pass the actual event to the user.

              The event has the following fields:

              [1margs   [22mArray of strings with the message data.

       [1mvideo-reconfig (MPV_EVENT_VIDEO_RECONFIG)[0m
              Happens on video output or filter reconfig.

       [1maudio-reconfig (MPV_EVENT_AUDIO_RECONFIG)[0m
              Happens on audio output or filter reconfig.

       [1mproperty-change (MPV_EVENT_PROPERTY_CHANGE)[0m
              Happens when a property that is being observed changes value.

              The event has the following fields:

              [1mname   [22mThe name of the property.

              [1mdata   [22mThe new value of the property.

       The following events also happen,  but  are  deprecated:  [1midle[22m,  [1mtick  [22mUse  [1mmpv_observe_property()  [22m(Lua:  [1mmp.ob‚Äê[0m
       [1mserve_property()[22m) instead.

   [1mHooks[0m
       Hooks  are  synchronous events between player core and a script or similar. This applies to client API (including
       the Lua scripting interface). Normally, events are supposed to be asynchronous, and the hook API provides an awk‚Äê
       ward and obscure way to handle events that require stricter coordination. There are no API  stability  guarantees
       made.  Not  following the protocol exactly can make the player freeze randomly. Basically, nobody should use this
       API.

       The C API is described in the header files. The Lua API is described in the Lua section.

       Before a hook is actually invoked on an API clients, it will attempt to return new values for all observed  prop‚Äê
       erties  that  were  changed before the hook. This may make it easier for an application to set defined "barriers"
       between property change notifications by registering hooks. (That means these hooks will have an effect, even  if
       you do nothing and make them continue immediately.)

       The following hooks are currently defined:

       [1mon_load[0m
              Called  when  a  file  is to be opened, before anything is actually done.  For example, you could read and
              write the [1mstream-open-filename [22mproperty to redirect an URL to something else (consider support for stream‚Äê
              ing sites which rarely give the user a direct media URL), or you could set per-file options with  by  set‚Äê
              ting the property [1mfile-local-options/<option name>[22m. The player will wait until all hooks are run.

              Ordered after [1mstart-file [22mand before [1mplayback-restart[22m.

       [1mon_load_fail[0m
              Called  after  after a file has been opened, but failed to. This can be used to provide a fallback in case
              native demuxers failed to recognize the file, instead of always running before the  native  demuxers  like
              [1mon_load[22m.  Demux  will only be retried if [1mstream-open-filename [22mwas changed. If it fails again, this hook is
              _not_ called again, and loading definitely fails.

              Ordered after [1mon_load[22m, and before [1mplayback-restart [22mand [1mend-file[22m.

       [1mon_preloaded[0m
              Called after a file has been opened, and before tracks are selected and decoders  are  created.  This  has
              some  usefulness  if  an  API users wants to select tracks manually, based on the set of available tracks.
              It's also useful to initialize [1m--lavfi-complex [22min a specific way by API, without  having  to  "probe"  the
              available streams at first.

              Note that this does not yet apply default track selection. Which operations exactly can be done and not be
              done, and what information is available and what is not yet available yet, is all subject to change.

              Ordered after [1mon_load_fail [22metc. and before [1mplayback-restart[22m.

       [1mon_unload[0m
              Run  before  closing  a  file,  and before actually uninitializing everything. It's not possible to resume
              playback in this state.

              Ordered before [1mend-file[22m. Will also happen in the error case (then after [1mon_load_fail[22m).

       [1mon_before_start_file[0m
              Run before a [1mstart-file [22mevent is sent. (If any client changes the current playlist entry, or sends a  quit
              command  to  the player, the corresponding event will not actually happen after the hook returns.)  Useful
              to drain property changes before a new file is loaded.

       [1mon_after_end_file[0m
              Run after an [1mend-file [22mevent. Useful to drain property changes after a file has finished.

   [1mInput Command Prefixes[0m
       These prefixes are placed between key name and the actual command. Multiple prefixes can be specified.  They  are
       separated by whitespace.

       [1mosd-auto[0m
              Use  the  default  behavior  for  this  command.  This  is  the  default  for  [1minput.conf  [22mcommands.  Some
              libmpv/scripting/IPC APIs do not use this as default, but use [1mno-osd [22minstead.

       [1mno-osd [22mDo not use any OSD for this command.

       [1mosd-bar[0m
              If possible, show a bar with this command. Seek commands will show the  progress  bar,  property  changing
              commands may show the newly set value.

       [1mosd-msg[0m
              If  possible, show an OSD message with this command. Seek command show the current playback time, property
              changing commands show the newly set value as text.

       [1mosd-msg-bar[0m
              Combine osd-bar and osd-msg.

       [1mraw    [22mDo not expand properties in string arguments. (Like [1m"${property-name}"[22m.)  This is  the  default  for  some
              libmpv/scripting/IPC APIs.

       [1mexpand-properties[0m
              All  string arguments are expanded as described in [4mProperty[24m [4mExpansion[24m.  This is the default for [1minput.conf[0m
              commands.

       [1mrepeatable[0m
              For some commands, keeping a key pressed doesn't run the command repeatedly.  This prefix forces  enabling
              key  repeat  in  any  case.  For a list of commands: the first command determines the repeatability of the
              whole list (up to and including version 0.33 - a list was always repeatable).

       [1masync  [22mAllow asynchronous execution (if possible). Note that only a few commands will support this (usually  this
              is explicitly documented). Some commands are asynchronous by default (or rather, their effects might mani‚Äê
              fest  after completion of the command). The semantics of this flag might change in the future. Set it only
              if you don't rely on the effects of this command being fully realized when it returns. See [4mSynchronous[24m [4mvs.[0m
              [4mAsynchronous[24m.

       [1msync   [22mAllow synchronous execution (if possible). Normally, all commands are synchronous by default, but some are
              asynchronous by default for compatibility with older behavior.

       All of the osd prefixes are still overridden by the global [1m--osd-level [22msettings.

   [1mSynchronous vs. Asynchronous[0m
       The [1masync [22mand [1msync [22mprefix matter only for how the issuer of the command waits on the completion of  the  command.
       Normally it does not affect how the command behaves by itself. There are the following cases:

       ‚Ä¢ Normal  input.conf commands are always run asynchronously. Slow running commands are queued up or run in paral‚Äê
         lel.

       ‚Ä¢ "Multi" input.conf commands (1 key binding, concatenated with [1m;[22m) will be executed in order, except for commands
         that are async (either prefixed with [1masync[22m, or async by default for some commands). The async commands are  run
         in a detached manner, possibly in parallel to the remaining sync commands in the list.

       ‚Ä¢ Normal  Lua  and  libmpv commands (e.g. [1mmpv_command()[22m) are run in a blocking manner, unless the [1masync [22mprefix is
         used, or the command is async by default. This means in the sync case the caller will block, even if  the  core
         continues playback. Async mode runs the command in a detached manner.

       ‚Ä¢ Async libmpv command API (e.g. [1mmpv_command_async()[22m) never blocks the caller, and always notify their completion
         with a message. The [1msync [22mand [1masync [22mprefixes make no difference.

       ‚Ä¢ Lua also provides APIs for running async commands, which behave similar to the C counterparts.

       ‚Ä¢ In  all  cases,  async mode can still run commands in a synchronous manner, even in detached mode. This can for
         example happen in cases when a command does not have an  asynchronous  implementation.  The  async  libmpv  API
         still never blocks the caller in these cases.

       Before  mpv 0.29.0, the [1masync [22mprefix was only used by screenshot commands, and made them run the file saving code
       in a detached manner. This is the default now, and [1masync [22mchanges behavior only in the ways mentioned above.

       Currently the following commands have different waiting characteristics with sync vs. async: sub-add,  audio-add,
       sub-reload, audio-reload, rescan-external-files, screenshot, screenshot-to-file, dump-cache, ab-loop-dump-cache.

   [1mAsynchronous command details[0m
       On  the API level, every asynchronous command is bound to the context which started it. For example, an asynchro‚Äê
       nous command started by [1mmpv_command_async [22mis bound to the [1mmpv_handle [22mpassed to the function. Only this [1mmpv_handle[0m
       receives the completion notification ([1mMPV_EVENT_COMMAND_REPLY[22m), and only this handle can abort  a  still  running
       command directly. If the [1mmpv_handle [22mis destroyed, any still running async. commands started by it are terminated.

       The scripting APIs and JSON IPC give each script/connection its own implicit [1mmpv_handle[22m.

       If  the  player  is  closed,  the  core  may  abort  all  pending  async.  commands  on  its  own  (like a forced
       [1mmpv_abort_async_command() [22mcall for each pending command on behalf of the API user). This happens at the same time
       [1mMPV_EVENT_SHUTDOWN [22mis sent, and there is no way to prevent this.

   [1mInput Sections[0m
       Input sections group a set of bindings, and enable or disable them at once.  In [1minput.conf[22m, each key  binding  is
       assigned to an input section, rather than actually having explicit text sections.

       See also: [1menable-section [22mand [1mdisable-section [22mcommands.

       Predefined bindings:

       [1mdefault[0m
              Bindings  without  input  section are implicitly assigned to this section. It is enabled by default during
              normal playback.

       [1mencode [22mSection which is active in encoding mode. It is enabled exclusively, so that bindings in the [1mdefault  [22msec‚Äê
              tions are ignored.

   [1mProperties[0m
       Properties are used to set mpv options during runtime, or to query arbitrary information. They can be manipulated
       with  the  [1mset[22m/[1madd[22m/[1mcycle  [22mcommands,  and retrieved with [1mshow-text[22m, or anything else that uses property expansion.
       (See [4mProperty[24m [4mExpansion[24m.)

       The property name is annotated with RW to indicate whether the property is generally writable.

       If an option is referenced, the property will normally take/return exactly the same  values  as  the  option.  In
       these cases, properties are merely a way to change an option at runtime.

   [1mProperty list[0m
       [1mNOTE:[0m
          Most  options  can  be set at runtime via properties as well. Just remove the leading [1m-- [22mfrom the option name.
          These are not documented below, see [4mOPTIONS[24m instead. Only properties which do not exist  as  option  with  the
          same name, or which have very different behavior from the options are documented below.

          Properties marked as (RW) are writeable, while those that aren't are read-only.

       [1maudio-speed-correction, video-speed-correction[0m
              Factor  multiplied with [1mspeed [22mat which the player attempts to play the file. Usually it's exactly 1. (Dis‚Äê
              play sync mode will make this useful.)

              OSD formatting will display it in the form of [1m+1.23456%[22m, with the number being [1m(raw - 1)  *  100  [22mfor  the
              given raw property value.

       [1mdisplay-sync-active[0m
              Whether [1m--video-sync=display [22mis actually active.

       [1mfilename[0m
              Currently  played  file, with path stripped. If this is an URL, try to undo percent encoding as well. (The
              result is not necessarily correct, but looks better for display purposes. Use the [1mpath [22mproperty to get  an
              unmodified filename.)

              This has a sub-property:

              [1mfilename/no-ext[0m
                     Like  the [1mfilename [22mproperty, but if the text contains a [1m.[22m, strip all text after the last [1m.[22m. Usually
                     this removes the file extension.

       [1mfile-size[0m
              Length in bytes of the source file/stream. (This is the same as  [1m${stream-end}[22m.  For  segmented/multi-part
              files, this will return the size of the main or manifest file, whatever it is.)

       [1mestimated-frame-count[0m
              Total number of frames in current file.

              [1mNOTE:[0m
                 This is only an estimate. (It's computed from two unreliable quantities: fps and stream length.)

       [1mestimated-frame-number[0m
              Number of current frame in current stream.

              [1mNOTE:[0m
                 This is only an estimate. (It's computed from two unreliable quantities: fps and possibly rounded time‚Äê
                 stamps.)

       [1mpid    [22mProcess-id of mpv.

       [1mpath   [22mFull  path  of the currently played file. Usually this is exactly the same string you pass on the mpv com‚Äê
              mand line or the [1mloadfile [22mcommand, even if it's a relative path. If you expect an absolute path, you  will
              have to determine it yourself, for example by using the [1mworking-directory [22mproperty.

       [1mstream-open-filename[0m
              The full path to the currently played media. This is different from [1mpath [22monly in special cases. In partic‚Äê
              ular, if [1m--ytdl=yes [22mis used, and the URL is detected by [1myoutube-dl[22m, then the script will set this property
              to the actual media URL. This property should be set only during the [1mon_load [22mor [1mon_load_fail [22mhooks, other‚Äê
              wise  it  will  have no effect (or may do something implementation defined in the future). The property is
              reset if playback of the current media ends.

       [1mmedia-title[0m
              If the currently played file has a [1mtitle [22mtag, use that.

              Otherwise, return the [1mfilename [22mproperty.

       [1mfile-format[0m
              Symbolic name of the file format. In some cases, this is a comma-separated list of format names, e.g.  mp4
              is [1mmov,mp4,m4a,3gp,3g2,mj2 [22m(the list may grow in the future for any format).

       [1mcurrent-demuxer[0m
              Name of the current demuxer. (This is useless.)

              (Renamed from [1mdemuxer[22m.)

       [1mstream-path[0m
              Filename (full path) of the stream layer filename. (This is probably useless and is almost never different
              from [1mpath[22m.)

       [1mstream-pos[0m
              Raw  byte  position  in  source  stream.  Technically, this returns the position of the most recent packet
              passed to a decoder.

       [1mstream-end[0m
              Raw end position in bytes in source stream.

       [1mduration[0m
              Duration of the current file in seconds. If the duration is unknown, the  property  is  unavailable.  Note
              that the file duration is not always exactly known, so this is an estimate.

              This  replaces the [1mlength [22mproperty, which was deprecated after the mpv 0.9 release. (The semantics are the
              same.)

              This has a sub-property:

              [1mduration/full[0m
                     [1mduration [22mwith milliseconds.

       [1mavsync [22mLast A/V synchronization difference. Unavailable if audio or video is disabled.

       [1mtotal-avsync-change[0m
              Total A-V sync correction done. Unavailable if audio or video is disabled.

       [1mdecoder-frame-drop-count[0m
              Video frames dropped by decoder, because video is too far behind audio (when  using  [1m--framedrop=decoder[22m).
              Sometimes,  this  may  be incremented in other situations, e.g. when video packets are damaged, or the de‚Äê
              coder doesn't follow the usual rules. Unavailable if video is disabled.

       [1mframe-drop-count[0m
              Frames dropped by VO (when using [1m--framedrop=vo[22m).

       [1mmistimed-frame-count[0m
              Number of video frames that were not timed correctly in display-sync mode for  the  sake  of  keeping  A/V
              sync. This does not include external circumstances, such as video rendering being too slow or the graphics
              driver  somehow  skipping a vsync. It does not include rounding errors either (which can happen especially
              with bad source timestamps). For example, using the [1mdisplay-desync [22mmode should  never  change  this  value
              from 0.

       [1mvsync-ratio[0m
              For how many vsyncs a frame is displayed on average. This is available if display-sync is active only. For
              30  FPS  video  on  a  60  Hz screen, this will be 2. This is the moving average of what actually has been
              scheduled, so 24 FPS on 60 Hz will never remain exactly on 2.5, but jitter depending  on  the  last  frame
              displayed.

       [1mvo-delayed-frame-count[0m
              Estimated  number  of frames delayed due to external circumstances in display-sync mode. Note that in gen‚Äê
              eral, mpv has to guess that this is happening, and the guess can be inaccurate.

       [1mpercent-pos (RW)[0m
              Position in current file (0-100). The advantage over using this instead of calculating  it  out  of  other
              properties  is  that it properly falls back to estimating the playback position from the byte position, if
              the file duration is not known.

       [1mtime-pos (RW)[0m
              Position in current file in seconds.

              This has a sub-property:

              [1mtime-pos/full[0m
                     [1mtime-pos [22mwith milliseconds.

       [1mtime-start[0m
              Deprecated. Always returns 0. Before mpv 0.14, this used to return the start time of the file  (could  af‚Äê
              fect e.g. transport streams). See [1m--rebase-start-time [22moption.

       [1mtime-remaining[0m
              Remaining  length of the file in seconds. Note that the file duration is not always exactly known, so this
              is an estimate.

              This has a sub-property:

              [1mtime-remaining/full[0m
                     [1mtime-remaining [22mwith milliseconds.

       [1maudio-pts[0m
              Current audio playback position in current file in seconds. Unlike time-pos, this updates more often  than
              once per frame. For audio-only files, it is mostly equivalent to time-pos, while for video-only files this
              property is not available.

              This has a sub-property:

              [1maudio-pts/full[0m
                     [1maudio-pts [22mwith milliseconds.

       [1mplaytime-remaining[0m
              [1mtime-remaining [22mscaled by the current [1mspeed[22m.

              This has a sub-property:

              [1mplaytime-remaining/full[0m
                     [1mplaytime-remaining [22mwith milliseconds.

       [1mplayback-time (RW)[0m
              Position in current file in seconds. Unlike [1mtime-pos[22m, the time is clamped to the range of the file. (Inac‚Äê
              curate  file durations etc. could make it go out of range. Useful on attempts to seek outside of the file,
              as the seek target time is considered the current position during seeking.)

              This has a sub-property:

              [1mplayback-time/full[0m
                     [1mplayback-time [22mwith milliseconds.

       [1mchapter (RW)[0m
              Current chapter number. The number of the first chapter is 0.

       [1medition (RW)[0m
              Current MKV edition number. Setting this property to a different value will restart playback.  The  number
              of the first edition is 0.

              Before  mpv  0.31.0,  this  showed the actual edition selected at runtime, if you didn't set the option or
              property manually. With mpv 0.31.0 and later, this strictly returns the user-set option or property value,
              and the [1mcurrent-edition [22mproperty was added to return the  runtime  selected  edition  (this  matters  with
              [1m--edition=auto[22m, the default).

       [1mcurrent-edition[0m
              Currently  selected  edition.  This  property is unavailable if no file is loaded, or the file has no edi‚Äê
              tions. (Matroska files make a difference between having no editions and a single edition,  which  will  be
              reflected by the property, although in practice it does not matter.)

       [1mchapters[0m
              Number of chapters.

       [1meditions[0m
              Number of MKV editions.

       [1medition-list[0m
              List of editions, current entry marked. Currently, the raw property value is useless.

              This has a number of sub-properties. Replace [1mN [22mwith the 0-based edition index.

              [1medition-list/count[0m
                     Number of editions. If there are no editions, this can be 0 or 1 (1 if there's a useless dummy edi‚Äê
                     tion).

              [1medition-list/N/id (RW)[0m
                     Edition  ID  as  integer. Use this to set the [1medition [22mproperty.  Currently, this is the same as the
                     edition index.

              [1medition-list/N/default[0m
                     Whether this is the default edition.

              [1medition-list/N/title[0m
                     Edition title as stored in the file. Not always available.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each edition)
                         "id"                MPV_FORMAT_INT64
                         "title"             MPV_FORMAT_STRING
                         "default"           MPV_FORMAT_FLAG

       [1mmetadata[0m
              Metadata key/value pairs.

              If  the  property  is  accessed with Lua's [1mmp.get_property_native[22m, this returns a table with metadata keys
              mapping to metadata values. If it is accessed with the client API,  this  returns  a  [1mMPV_FORMAT_NODE_MAP[22m,
              with tag keys mapping to tag values.

              For OSD, it returns a formatted list. Trying to retrieve this property as a raw string doesn't work.

              This has a number of sub-properties:

              [1mmetadata/by-key/<key>[0m
                     Value of metadata entry [1m<key>[22m.

              [1mmetadata/list/count[0m
                     Number of metadata entries.

              [1mmetadata/list/N/key[0m
                     Key name of the Nth metadata entry. (The first entry is [1m0[22m).

              [1mmetadata/list/N/value[0m
                     Value of the Nth metadata entry.

              [1mmetadata/<key>[0m
                     Old  version  of  [1mmetadata/by-key/<key>[22m.  Use is discouraged, because the metadata key string could
                     conflict with other sub-properties.

              The layout of this property might be subject to change. Suggestions are welcome how exactly this  property
              should work.

              When  querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_MAP
                     (key and string value for each metadata entry)

       [1mfiltered-metadata[0m
              Like [1mmetadata[22m, but includes only fields listed in the [1m--display-tags [22moption. This is the same set of  tags
              that is printed to the terminal.

       [1mchapter-metadata[0m
              Metadata  of  current  chapter. Works similar to [1mmetadata [22mproperty. It also allows the same access methods
              (using sub-properties).

              Per-chapter metadata is very rare. Usually, only the chapter name ([1mtitle[22m) is set.

              For accessing other information, like chapter start, see the [1mchapter-list [22mproperty.

       [1mvf-metadata/<filter-label>[0m
              Metadata added by video filters. Accessed by the filter label, which, if not  explicitly  specified  using
              the [1m@filter-label: [22msyntax, will be [1m<filter-name>NN[22m.

              Works similar to [1mmetadata [22mproperty. It allows the same access methods (using sub-properties).

              An example of this kind of metadata are the cropping parameters added by [1m--vf=lavfi=cropdetect[22m.

       [1maf-metadata/<filter-label>[0m
              Equivalent to [1mvf-metadata/<filter-label>[22m, but for audio filters.

       [1midle-active[0m
              Returns [1myes[22m/true if no file is loaded, but the player is staying around because of the [1m--idle [22moption.

              (Renamed from [1midle[22m.)

       [1mcore-idle[0m
              Whether  the  playback  core is paused. This can differ from [1mpause [22min special situations, such as when the
              player pauses itself due to low network cache.

              This also returns [1myes[22m/true if playback is restarting or if nothing is playing at all. In other words, it's
              only [1mno[22m/false if there's actually video playing. (Behavior since mpv 0.7.0.)

       [1mcache-speed[0m
              Current I/O read speed between the cache and the lower layer (like network).  This gives the number  bytes
              per seconds over a 1 second window (using the type [1mMPV_FORMAT_INT64 [22mfor the client API).

              This is the same as [1mdemuxer-cache-state/raw-input-rate[22m.

       [1mdemuxer-cache-duration[0m
              Approximate duration of video buffered in the demuxer, in seconds. The guess is very unreliable, and often
              the property will not be available at all, even if data is buffered.

       [1mdemuxer-cache-time[0m
              Approximate  time of video buffered in the demuxer, in seconds. Same as [1mdemuxer-cache-duration [22mbut returns
              the last timestamp of buffered data in demuxer.

       [1mdemuxer-cache-idle[0m
              Whether the demuxer is idle, which means that the demuxer cache is filled to the requested amount, and  is
              currently not reading more data.

       [1mdemuxer-cache-state[0m
              Each entry in [1mseekable-ranges [22mrepresents a region in the demuxer cache that can be seeked to, with a [1mstart[0m
              and  [1mend [22mfields containing the respective timestamps. If there are multiple demuxers active, this only re‚Äê
              turns information about the "main" demuxer, but might be changed in future to return  unified  information
              about  all demuxers. The ranges are in arbitrary order. Often, ranges will overlap for a bit, before being
              joined.  In broken corner cases, ranges may overlap all over the place.

              The end of a seek range is usually smaller than the value returned by the [1mdemuxer-cache-time [22mproperty, be‚Äê
              cause that property returns the guessed buffering amount, while the seek  ranges  represent  the  buffered
              data that can actually be used for cached seeking.

              [1mbof-cached  [22mindicates  whether  the  seek  range  with the lowest timestamp points to the beginning of the
              stream (BOF). This implies you cannot seek before this position at all. [1meof-cached [22mindicates  whether  the
              seek  range  with  the  highest  timestamp  points  to the end of the stream (EOF). If both [1mbof-cached [22mand
              [1meof-cached [22mare true, and there's only 1 cache range, the entire stream is cached.

              [1mfw-bytes [22mis the number of bytes of packets buffered in the range starting from the current decoding  posi‚Äê
              tion.  This is a rough estimate (may not account correctly for various overhead), and stops at the demuxer
              position (it ignores seek ranges after it).

              [1mfile-cache-bytes [22mis the number of bytes stored in the file cache. This includes all overhead, and possibly
              unused data  (like  pruned  data).  This  member  is  missing  if  the  file  cache  wasn't  enabled  with
              [1m--cache-on-disk=yes[22m.

              [1mcache-end [22mis [1mdemuxer-cache-time[22m. Missing if unavailable.

              [1mreader-pts [22mis the approximate timestamp of the start of the buffered range. Missing if unavailable.

              [1mcache-duration [22mis [1mdemuxer-cache-duration[22m. Missing if unavailable.

              [1mraw-input-rate  [22mis  the estimated input rate of the network layer (or any other byte-oriented input layer)
              in bytes per second. May be inaccurate or missing.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_MAP
                     "seekable-ranges"   MPV_FORMAT_NODE_ARRAY
                         MPV_FORMAT_NODE_MAP
                             "start"             MPV_FORMAT_DOUBLE
                             "end"               MPV_FORMAT_DOUBLE
                     "bof-cached"        MPV_FORMAT_FLAG
                     "eof-cached"        MPV_FORMAT_FLAG
                     "fw-bytes"          MPV_FORMAT_INT64
                     "file-cache-bytes"  MPV_FORMAT_INT64
                     "cache-end"         MPV_FORMAT_DOUBLE
                     "reader-pts"        MPV_FORMAT_DOUBLE
                     "cache-duration"    MPV_FORMAT_DOUBLE
                     "raw-input-rate"    MPV_FORMAT_INT64

              Other fields (might be changed or removed in the future):

              [1meof    [22mWhether the reader thread has hit the end of the file.

              [1munderrun[0m
                     Whether the reader thread could not satisfy a decoder's request for a new packet.

              [1midle   [22mWhether the thread is currently not reading.

              [1mtotal-bytes[0m
                     Sum  of  packet  bytes (plus some overhead estimation) of the entire packet queue, including cached
                     seekable ranges.

       [1mdemuxer-via-network[0m
              Whether the stream demuxed via the main demuxer is most likely played via network. What constitutes  "net‚Äê
              work"  is  not always clear, might be used for other types of untrusted streams, could be wrong in certain
              cases, and its definition might be changing. Also, external files (like separate audio files  or  streams)
              do not influence the value of this property (currently).

       [1mdemuxer-start-time[0m
              The start time reported by the demuxer in fractional seconds.

       [1mpaused-for-cache[0m
              Whether playback is paused because of waiting for the cache.

       [1mcache-buffering-state[0m
              The   percentage   (0-100)   of  the  cache  fill  status  until  the  player  will  unpause  (related  to
              [1mpaused-for-cache[22m).

       [1meof-reached[0m
              Whether the end of playback was reached. Note that this is usually interesting only if [1m--keep-open [22mis  en‚Äê
              abled, since otherwise the player will immediately play the next file (or exit or enter idle mode), and in
              these cases the [1meof-reached [22mproperty will logically be cleared immediately after it's set.

       [1mseeking[0m
              Whether  the  player is currently seeking, or otherwise trying to restart playback. (It's possible that it
              returns [1myes[22m/true while a file is loaded. This is because the same underlying code is used for seeking  and
              resyncing.)

       [1mmixer-active[0m
              Whether the audio mixer is active.

              This  option  is  relatively  useless. Before mpv 0.18.1, it could be used to infer behavior of the [1mvolume[0m
              property.

       [1mao-volume (RW)[0m
              System volume. This property is available only if mpv audio output is currently active, and  only  if  the
              underlying  implementation supports volume control. What this option does depends on the API. For example,
              on ALSA this usually changes system-wide audio, while with PulseAudio this controls  per-application  vol‚Äê
              ume.

       [1mao-mute (RW)[0m
              Similar to [1mao-volume[22m, but controls the mute state. May be unimplemented even if [1mao-volume [22mworks.

       [1maudio-codec[0m
              Audio codec selected for decoding.

       [1maudio-codec-name[0m
              Audio codec.

       [1maudio-params[0m
              Audio format as output by the audio decoder.  This has a number of sub-properties:

              [1maudio-params/format[0m
                     The sample format as string. This uses the same names as used in other places of mpv.

              [1maudio-params/samplerate[0m
                     Samplerate.

              [1maudio-params/channels[0m
                     The channel layout as a string. This is similar to what the [1m--audio-channels [22maccepts.

              [1maudio-params/hr-channels[0m
                     As  [1mchannels[22m,  but instead of the possibly cryptic actual layout sent to the audio device, return a
                     hopefully more human readable form.  (Usually only [1maudio-out-params/hr-channels [22mmakes sense.)

              [1maudio-params/channel-count[0m
                     Number of audio channels. This is redundant to the [1mchannels [22mfield described above.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_MAP
                     "format"            MPV_FORMAT_STRING
                     "samplerate"        MPV_FORMAT_INT64
                     "channels"          MPV_FORMAT_STRING
                     "channel-count"     MPV_FORMAT_INT64
                     "hr-channels"       MPV_FORMAT_STRING

       [1maudio-out-params[0m
              Same as [1maudio-params[22m, but the format of the data written to the audio API.

       [1mcolormatrix[0m
              Redirects to [1mvideo-params/colormatrix[22m. This parameter (as well as similar ones) can be overridden with the
              [1mformat [22mvideo filter.

       [1mcolormatrix-input-range[0m
              See [1mcolormatrix[22m.

       [1mcolormatrix-primaries[0m
              See [1mcolormatrix[22m.

       [1mhwdec (RW)[0m
              Reflects the [1m--hwdec [22moption.

              Writing  to  it  may change the currently used hardware decoder, if possible.  (Internally, the player may
              reinitialize the decoder, and will perform a seek to refresh the video properly.) You can watch the  other
              hwdec properties to see whether this was successful.

              Unlike  in  mpv  0.9.x  and  before, this does not return the currently active hardware decoder. Since mpv
              0.18.0, [1mhwdec-current [22mis available for this purpose.

       [1mhwdec-current[0m
              The current hardware decoding in use. If decoding is active, return one of the values used  by  the  [1mhwdec[0m
              option/property.  [1mno[22m/false  indicates software decoding. If no decoder is loaded, the property is unavail‚Äê
              able.

       [1mhwdec-interop[0m
              This returns the currently loaded hardware decoding/output interop driver.  This is known only once the VO
              has opened (and possibly later). With some VOs (like [1mgpu[22m), this might be never known in advance, but  only
              when  the  decoder attempted to create the hw decoder successfully. (Using [1m--gpu-hwdec-interop [22mcan load it
              eagerly.) If there are multiple drivers loaded, they will be separated by [1m,[22m.

              If no VO is active or no interop driver is known, this property is unavailable.

              This does not necessarily use the same values as [1mhwdec[22m. There can be multiple interop drivers for the same
              hardware decoder, depending on platform and VO.

       [1mvideo-format[0m
              Video format as string.

       [1mvideo-codec[0m
              Video codec selected for decoding.

       [1mwidth, height[0m
              Video size. This uses the size of the video as decoded, or if no video frame has  been  decoded  yet,  the
              (possibly incorrect) container indicated size.

       [1mvideo-params[0m
              Video parameters, as output by the decoder (with overrides like aspect etc. applied). This has a number of
              sub-properties:

              [1mvideo-params/pixelformat[0m
                     The pixel format as string. This uses the same names as used in other places of mpv.

              [1mvideo-params/hw-pixelformat[0m
                     The underlying pixel format as string. This is relevant for some cases of hardware decoding and un‚Äê
                     available otherwise.

              [1mvideo-params/average-bpp[0m
                     Average  bits-per-pixel  as integer. Subsampled planar formats use a different resolution, which is
                     the reason this value can sometimes be odd or confusing. Can be unavailable with some formats.

              [1mvideo-params/w, video-params/h[0m
                     Video size as integers, with no aspect correction applied.

              [1mvideo-params/dw, video-params/dh[0m
                     Video size as integers, scaled for correct aspect ratio.

              [1mvideo-params/crop-x, video-params/crop-y[0m
                     Crop offset of the source video frame.

              [1mvideo-params/crop-w, video-params/crop-h[0m
                     Video size after cropping.

              [1mvideo-params/aspect[0m
                     Display aspect ratio as float.

              [1mvideo-params/aspect-name[0m
                     Display aspect ratio name as string. The name coresponds to motion picture film format that  intro‚Äê
                     duced given aspect ratio in film.

              [1mvideo-params/par[0m
                     Pixel aspect ratio.

              [1mvideo-params/sar[0m
                     Storage aspect ratio.

              [1mvideo-params/sar-name[0m
                     Storage aspect ratio name as string.

              [1mvideo-params/colormatrix[0m
                     The colormatrix in use as string. (Exact values subject to change.)

              [1mvideo-params/colorlevels[0m
                     The colorlevels as string. (Exact values subject to change.)

              [1mvideo-params/primaries[0m
                     The primaries in use as string. (Exact values subject to change.)

              [1mvideo-params/gamma[0m
                     The gamma function in use as string. (Exact values subject to change.)

              [1mvideo-params/sig-peak (deprecated)[0m
                     The video file's tagged signal peak as float.

              [1mvideo-params/light[0m
                     The light type in use as a string. (Exact values subject to change.)

              [1mvideo-params/chroma-location[0m
                     Chroma location as string. (Exact values subject to change.)

              [1mvideo-params/rotate[0m
                     Intended display rotation in degrees (clockwise).

              [1mvideo-params/stereo-in[0m
                     Source file stereo 3D mode. (See the [1mformat [22mvideo filter's [1mstereo-in [22moption.)

              [1mvideo-params/alpha[0m
                     Alpha  type.  If the format has no alpha channel, this will be unavailable (but in future releases,
                     it could change to [1mno[22m). If alpha is present, this is set to [1mstraight [22mor [1mpremul[22m.

              [1mvideo-params/min-luma[0m
                     Minimum luminance, as reported by HDR10 metadata (in cd/m¬≤)

              [1mvideo-params/max-luma[0m
                     Maximum luminance, as reported by HDR10 metadata (in cd/m¬≤)

              [1mvideo-params/max-cll[0m
                     Maximum content light level, as reported by HDR10 metadata (in cd/m¬≤)

              [1mvideo-params/max-fall[0m
                     Maximum frame average light level, as reported by HDR10 metadata (in cd/m¬≤)

              [1mvideo-params/scene-max-r[0m
                     MaxRGB of a scene for R component, as reported by HDR10+ metadata (in cd/m¬≤)

              [1mvideo-params/scene-max-g[0m
                     MaxRGB of a scene for G component, as reported by HDR10+ metadata (in cd/m¬≤)

              [1mvideo-params/scene-max-b[0m
                     MaxRGB of a scene for B component, as reported by HDR10+ metadata (in cd/m¬≤)

              [1mvideo-params/max-pq-y[0m
                     Maximum PQ luminance of a frame, as reported by peak detection (in PQ, 0-1)

              [1mvideo-params/avg-pq-y[0m
                     Average PQ luminance of a frame, as reported by peak detection (in PQ, 0-1)

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_MAP
                     "pixelformat"       MPV_FORMAT_STRING
                     "hw-pixelformat"    MPV_FORMAT_STRING
                     "w"                 MPV_FORMAT_INT64
                     "h"                 MPV_FORMAT_INT64
                     "dw"                MPV_FORMAT_INT64
                     "dh"                MPV_FORMAT_INT64
                     "aspect"            MPV_FORMAT_DOUBLE
                     "par"               MPV_FORMAT_DOUBLE
                     "colormatrix"       MPV_FORMAT_STRING
                     "colorlevels"       MPV_FORMAT_STRING
                     "primaries"         MPV_FORMAT_STRING
                     "gamma"             MPV_FORMAT_STRING
                     "sig-peak"          MPV_FORMAT_DOUBLE
                     "light"             MPV_FORMAT_STRING
                     "chroma-location"   MPV_FORMAT_STRING
                     "rotate"            MPV_FORMAT_INT64
                     "stereo-in"         MPV_FORMAT_STRING
                     "average-bpp"       MPV_FORMAT_INT64
                     "alpha"             MPV_FORMAT_STRING
                     "min-luma"          MPV_FORMAT_DOUBLE
                     "max-luma"          MPV_FORMAT_DOUBLE
                     "max-cll"           MPV_FORMAT_DOUBLE
                     "max-fall"          MPV_FORMAT_DOUBLE
                     "scene-max-r"       MPV_FORMAT_DOUBLE
                     "scene-max-g"       MPV_FORMAT_DOUBLE
                     "scene-max-b"       MPV_FORMAT_DOUBLE
                     "max-pq-y"          MPV_FORMAT_DOUBLE
                     "avg-pq-y"          MPV_FORMAT_DOUBLE

       [1mdwidth, dheight[0m
              Video  display size. This is the video size after filters and aspect scaling have been applied. The actual
              video window size can still be different from this, e.g. if the user resized the video window manually.

              These have the same values as [1mvideo-out-params/dw [22mand [1mvideo-out-params/dh[22m.

       [1mvideo-dec-params[0m
              Exactly like [1mvideo-params[22m, but no overrides applied.

       [1mvideo-out-params[0m
              Same as [1mvideo-params[22m, but after video filters have been applied. If there are no  video  filters  in  use,
              this  will contain the same values as [1mvideo-params[22m. Note that this is still not necessarily what the video
              window uses, since the user can change the window size, and all real VOs do  their  own  scaling  indepen‚Äê
              dently from the filter chain.

              Has the same sub-properties as [1mvideo-params[22m.

       [1mvideo-frame-info[0m
              Approximate  information  of the current frame. Note that if any of these are used on OSD, the information
              might be off by a few frames due to OSD redrawing and frame display being somewhat disconnected,  and  you
              might have to pause and force a redraw.

              This has a number of sub-properties:

              [1mvideo-frame-info/picture-type[0m
                     The type of the picture. It can be "I" (intra), "P" (predicted), "B" (bi-dir predicted) or unavail‚Äê
                     able.

              [1mvideo-frame-info/interlaced[0m
                     Whether the content of the frame is interlaced.

              [1mvideo-frame-info/tff[0m
                     If the content is interlaced, whether the top field is displayed first.

              [1mvideo-frame-info/repeat[0m
                     Whether the frame must be delayed when decoding.

       [1mcontainer-fps[0m
              Container FPS. This can easily contain bogus values. For videos that use modern container formats or video
              codecs, this will often be incorrect.

              (Renamed from [1mfps[22m.)

       [1mestimated-vf-fps[0m
              Estimated/measured  FPS of the video filter chain output. (If no filters are used, this corresponds to de‚Äê
              coder output.) This uses the average of the 10 past frame durations to calculate the FPS. It will be inac‚Äê
              curate if frame-dropping is involved (such as when framedrop is explicitly enabled, or after precise seek‚Äê
              ing). Files with imprecise timestamps (such as Matroska) might lead to unstable results.

       [1mwindow-scale (RW)[0m
              Window size multiplier. Setting this will resize the video window to the values contained  in  [1mdwidth  [22mand
              [1mdheight [22mmultiplied with the value set with this property. Setting [1m1 [22mwill resize to original video size (or
              to be exact, the size the video filters output). [1m2 [22mwill set the double size, [1m0.5 [22mhalves the size.

              Note  that setting a value identical to its previous value will not resize the window. That's because this
              property mirrors the [1mwindow-scale [22moption, and setting an option to its previous value is ignored. If  this
              value  is set while the window is in a fullscreen, the multiplier is not applied until the window is taken
              out of that state. Writing this property to a maximized window can unmaximize the window depending on  the
              OS  and  window manager. If the window does not unmaximize, the multiplier will be applied if the user un‚Äê
              maximizes the window later.

              See [1mcurrent-window-scale [22mfor the value derived from the actual window size.

              Since mpv 0.31.0, this always returns the previously set value (or the  default  value),  instead  of  the
              value  implied  by the actual window size.  Before mpv 0.31.0, this returned what [1mcurrent-window-scale [22mre‚Äê
              turns now, after the window was created.

       [1mcurrent-window-scale (RW)[0m
              The [1mwindow-scale [22mvalue calculated from the current window size. This has the same value as [1mwindow-scale [22mif
              the window size was not changed since setting the option, and the window size was not restricted in  other
              ways.  If  the  window  is  fullscreened,  this  will  return  the  scale  value  calculated from the last
              non-fullscreen size of the window. The property is unavailable if no video is active.

              When setting this property in the fullscreen or maximized state, the behavior is the same as window-scale.
              In all other cases, setting the value of this property will always resize the window. This does not affect
              the value of [1mwindow-scale[22m.

       [1mfocused[0m
              Whether the window has focus. Might not be supported by all VOs.

       [1mdisplay-names[0m
              Names of the displays that the mpv window covers. On X11, these are the xrandr names (LVDS1,  HDMI1,  DP1,
              VGA1,  etc.).  On Windows, these are the GDI names (\.DISPLAY1, \.DISPLAY2, etc.) and the first display in
              the list will be the one that Windows considers associated with the window (as determined by the  Monitor‚Äê
              FromWindow  API.)  On macOS these are the Display Product Names as used in the System Information and only
              one display name is returned since a window can only be on one screen.

       [1mdisplay-fps[0m
              The refresh rate of the current display. Currently, this is the lowest FPS of any display covered  by  the
              video,  as  retrieved by the underlying system APIs (e.g. xrandr on X11). It is not the measured FPS. It's
              not necessarily available on all platforms. Note that any of the listed facts may change any time  without
              a warning.

       [1mestimated-display-fps[0m
              The  actual rate at which display refreshes seem to occur, measured by system time. Only available if dis‚Äê
              play-sync mode (as selected by [1m--video-sync[22m) is active.

       [1mvsync-jitter[0m
              Estimated deviation factor of the vsync duration.

       [1mdisplay-width, display-height[0m
              The current display's horizontal and vertical resolution in pixels. Whether or not these values update  as
              the  mpv  window  changes  displays depends on the windowing backend. It may not be available on all plat‚Äê
              forms.

       [1mdisplay-hidpi-scale[0m
              The HiDPI scale factor as reported by the windowing backend. If no VO is active, or if the VO does not re‚Äê
              port a value, this property is unavailable.  It may be saner to report an absolute DPI, however,  this  is
              the way HiDPI support is implemented on most OS APIs. See also [1m--hidpi-window-scale[22m.

       [1mosd-width, osd-height[0m
              Last  known  OSD width (can be 0). This is needed if you want to use the [1moverlay-add [22mcommand. It gives you
              the actual OSD/window size (not including decorations drawn by the OS window manager).

              Alias to [1mosd-dimensions/w [22mand [1mosd-dimensions/h[22m.

       [1mosd-par[0m
              Last known OSD display pixel aspect (can be 0).

              Alias to [1mosd-dimensions/osd-par[22m.

       [1mosd-dimensions[0m
              Last known OSD dimensions.

              Has the following sub-properties (which can be read as [1mMPV_FORMAT_NODE  [22mor  Lua  table  with  [1mmp.get_prop‚Äê[0m
              [1merty_native[22m):

              [1mosd-dimensions/w[0m
                     Size  of  the VO window in OSD render units (usually pixels, but may be scaled pixels with VOs like
                     [1mxv[22m).

              [1mosd-dimensions/h[0m
                     Size of the VO window in OSD render units,

              [1mosd-dimensions/par[0m
                     Pixel aspect ratio of the OSD (usually 1).

              [1mosd-dimensions/aspect[0m
                     Display aspect ratio of the VO window. (Computing from the properties above.)

              [1mosd-dimensions/mt, osd-dimensions/mb, osd-dimensions/ml, osd-dimensions/mr[0m
                     OSD to video margins (top, bottom, left, right). This describes the area into which  the  video  is
                     rendered.

              Any of these properties may be unavailable or set to dummy values if the VO window is not created or visi‚Äê
              ble.

       [1mwindow-id[0m
              Read-only  -  mpv's  window id. May not always be available, i.e due to window not being opened yet or not
              being supported by the VO.

       [1mmouse-pos[0m
              Read-only - last known mouse position, normalizd to OSD dimensions.

              Has the following sub-properties (which can be read as [1mMPV_FORMAT_NODE  [22mor  Lua  table  with  [1mmp.get_prop‚Äê[0m
              [1merty_native[22m):

              [1mmouse-pos/x, mouse-pos/y[0m
                     Last known coordinates of the mouse pointer.

              [1mmouse-pos/hover[0m
                     Boolean - whether the mouse pointer hovers the video window. The coordinates should be ignored when
                     this  value  is false, because the video backends update them only when the pointer hovers the win‚Äê
                     dow.

       [1msub-ass-extradata[0m
              The current ASS subtitle track's extradata. There is no formatting done.  The extradata is returned  as  a
              string as-is. This property is not available for non-ASS subtitle tracks.

       [1msub-text[0m
              The  current  subtitle  text  regardless of sub visibility. Formatting is stripped. If the subtitle is not
              text-based (i.e. DVD/BD subtitles), an empty string is returned.

       [1msub-text-ass[0m
              Like [1msub-text[22m, but return the text in ASS format. Text subtitles in other formats are converted.  For  na‚Äê
              tive  ASS  subtitles, events that do not contain any text (but vector drawings etc.) are not filtered out.
              If multiple events match with the current playback time, they are concatenated with line breaks.  Contains
              only the "Text" part of the events.

              This  property  is not enough to render ASS subtitles correctly, because ASS header and per-event metadata
              are not returned. You likely need to do further filtering on the returned string to make it useful.

       [1msecondary-sub-text[0m
              Same as [1msub-text[22m, but for the secondary subtitles.

       [1msub-start[0m
              The current subtitle start time (in seconds). If there's multiple current  subtitles,  returns  the  first
              start time. If no current subtitle is present null is returned instead.

       [1msecondary-sub-start[0m
              Same as [1msub-start[22m, but for the secondary subtitles.

       [1msub-end[0m
              The  current  subtitle  end  time (in seconds). If there's multiple current subtitles, return the last end
              time. If no current subtitle is present, or if it's present but has unknown or incorrect duration, null is
              returned instead.

       [1msecondary-sub-end[0m
              Same as [1msub-end[22m, but for the secondary subtitles.

       [1mplaylist-pos (RW)[0m
              Current position on playlist. The first entry is on position 0. Writing to this property may  start  play‚Äê
              back at the new position.

              In  some cases, this is not necessarily the currently playing file. See explanation of [1mcurrent [22mand [1mplaying[0m
              flags in [1mplaylist[22m.

              If there the playlist is empty, or if it's non-empty, but no entry is "current", this property returns -1.
              Likewise, writing -1 will put the player into idle mode (or exit playback if idle mode is not enabled). If
              an out of range index is written to the property, this behaves as if writing -1.  (Before mpv 0.33.0,  in‚Äê
              stead of returning -1, this property was unavailable if no playlist entry was current.)

              Writing  the  current  value back to the property will have no effect.  Use [1mplaylist-play-index [22mto restart
              the playback of the current entry if desired.

       [1mplaylist-pos-1 (RW)[0m
              Same as [1mplaylist-pos[22m, but 1-based.

       [1mplaylist-current-pos (RW)[0m
              Index of the "current" item on playlist. This usually, but not necessarily,  the  currently  playing  item
              (see  [1mplaylist-playing-pos[22m).  Depending  on  the  exact  internal state of the player, it may refer to the
              playlist item to play next, or the playlist item used to determine what to play next.

              For reading, this is exactly the same as [1mplaylist-pos[22m.

              For writing, this [4monly[24m sets the position of the "current" item, without stopping playback of  the  current
              file (or starting playback, if this is done in idle mode). Use -1 to remove the current flag.

              This  property  is only vaguely useful. If set during playback, it will typically cause the playlist entry
              [4mafter[24m it to be played next. Another possibly odd observable state is that if [1mplaylist-next [22mis  run  during
              playback,  this property is set to the playlist entry to play next (unlike the previous case). There is an
              internal flag that decides whether the current playlist entry or the next one should be played,  and  this
              flag  is  currently  inaccessible  for  API users. (Whether this behavior will kept is possibly subject to
              change.)

       [1mplaylist-playing-pos[0m
              Index of the "playing" item on playlist. A playlist item is "playing" if it's being loaded, actually play‚Äê
              ing, or being unloaded. This  property  is  set  during  the  [1mMPV_EVENT_START_FILE  [22m([1mstart-file[22m)  and  the
              [1mMPV_EVENT_START_END  [22m([1mend-file[22m)  events. Outside of that, it returns -1. If the playlist entry was somehow
              removed during playback, but playback hasn't stopped yet, or is in progress of being stopped, it also  re‚Äê
              turns -1.  (This can happen at least during state transitions.)

              In  the  "playing"  state,  this  is  usually the same as [1mplaylist-pos[22m, except during state changes, or if
              [1mplaylist-current-pos [22mwas written explicitly.

       [1mplaylist-count[0m
              Number of total playlist entries.

       [1mplaylist-path[0m
              The original path of the playlist for the current entry before mpv expanded the  entries.  Unavailable  if
              the file was not originally associated with a playlist in some way.

       [1mplaylist[0m
              Playlist, current entry marked. Currently, the raw property value is useless.

              This has a number of sub-properties. Replace [1mN [22mwith the 0-based playlist entry index.

              [1mplaylist/count[0m
                     Number of playlist entries (same as [1mplaylist-count[22m).

              [1mplaylist/N/filename[0m
                     Filename of the Nth entry.

              [1mplaylist/N/playing[0m
                     [1myes[22m/true  if the [1mplaylist-playing-pos [22mproperty points to this entry, [1mno[22m/false or unavailable other‚Äê
                     wise.

              [1mplaylist/N/current[0m
                     [1myes[22m/true if the [1mplaylist-current-pos [22mproperty points to this entry, [1mno[22m/false or unavailable  other‚Äê
                     wise.

              [1mplaylist/N/title[0m
                     Name  of  the  Nth entry. Available if the playlist file contains such fields and mpv's parser sup‚Äê
                     ports it for the given playlist format, or if the playlist entry has been opened before and  a  me‚Äê
                     dia-title other then then filename has been acquired.

              [1mplaylist/N/id[0m
                     Unique  ID  for this entry. This is an automatically assigned integer ID that is unique for the en‚Äê
                     tire life time of the current  mpv  core  instance.  Other  commands,  events,  etc.  use  this  as
                     [1mplaylist_entry_id [22mfields.

              [1mplaylist/N/playlist-path[0m
                     The  original  path  of the playlist for this entry before mpv expanded it. Unavailable if the file
                     was not originally associated with a playlist in some way.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each playlist entry)
                         "filename"  MPV_FORMAT_STRING
                         "current"   MPV_FORMAT_FLAG (might be missing; since mpv 0.7.0)
                         "playing"   MPV_FORMAT_FLAG (same)
                         "title"     MPV_FORMAT_STRING (optional)
                         "id"        MPV_FORMAT_INT64

       [1mtrack-list[0m
              List of audio/video/sub tracks, current entry marked. Currently, the raw property value is useless.

              This has a number of sub-properties. Replace [1mN [22mwith the 0-based track index.

              [1mtrack-list/count[0m
                     Total number of tracks.

              [1mtrack-list/N/id[0m
                     The  ID  as  it's used for [1m-sid[22m/[1m--aid[22m/[1m--vid[22m. This is unique within tracks of the same type (sub/au‚Äê
                     dio/video), but otherwise not.

              [1mtrack-list/N/type[0m
                     String describing the media type. One of [1maudio[22m, [1mvideo[22m, [1msub[22m.

              [1mtrack-list/N/src-id[0m
                     Track ID as used in the source file. Not always available. (It is missing if the format has no  na‚Äê
                     tive  ID,  if the track is a pseudo-track that does not exist in this way in the actual file, or if
                     the format is handled by libavformat, and the format was not whitelisted as having track IDs.)

              [1mtrack-list/N/title[0m
                     Track title as it is stored in the file. Not always available.

              [1mtrack-list/N/lang[0m
                     Track language as identified by the file. Not always available.

              [1mtrack-list/N/image[0m
                     [1myes[22m/true if this is a video track that consists of a single picture, [1mno[22m/false or unavailable other‚Äê
                     wise. The heuristic used to determine if a stream is an image doesn't attempt to detect  images  in
                     codecs normally used for videos. Otherwise, it is reliable.

              [1mtrack-list/N/albumart[0m
                     [1myes[22m/true  if this is an image embedded in an audio file or external cover art, [1mno[22m/false or unavail‚Äê
                     able otherwise.

              [1mtrack-list/N/default[0m
                     [1myes[22m/true if the track has the default flag set in the file, [1mno[22m/false or unavailable otherwise.

              [1mtrack-list/N/forced[0m
                     [1myes[22m/true if the track has the forced flag set in the file, [1mno[22m/false or unavailable otherwise.

              [1mtrack-list/N/codec[0m
                     The codec name used by this track, for example [1mh264[22m. Unavailable in some rare cases.

              [1mtrack-list/N/external[0m
                     [1myes[22m/true if the track is an external file, [1mno[22m/false or unavailable otherwise. This is set for sepa‚Äê
                     rate subtitle files.

              [1mtrack-list/N/external-filename[0m
                     The filename if the track is from an external file, unavailable otherwise.

              [1mtrack-list/N/selected[0m
                     [1myes[22m/true if the track is currently decoded, [1mno[22m/false or unavailable otherwise.

              [1mtrack-list/N/main-selection[0m
                     It indicates the selection order of tracks for the same type.  If a track is not  selected,  or  is
                     selected  by  the  [1m--lavfi-complex[22m, it is not available. For subtitle tracks, [1m0 [22mrepresents the [1msid[22m,
                     and [1m1 [22mrepresents the [1msecondary-sid[22m.

              [1mtrack-list/N/ff-index[0m
                     The stream index as usually used by the FFmpeg utilities. Note that this can be  potentially  wrong
                     if a demuxer other than libavformat ([1m--demuxer=lavf[22m) is used. For mkv files, the index will usually
                     match even if the default (builtin) demuxer is used, but there is no hard guarantee.

              [1mtrack-list/N/decoder-desc[0m
                     If this track is being decoded, the human-readable decoder name,

              [1mtrack-list/N/demux-w, track-list/N/demux-h[0m
                     Video size hint as indicated by the container. (Not always accurate.)

              [1mtrack-list/N/demux-crop-x, track-list/N/demux-crop-y[0m
                     Crop offset of the source video frame.

              [1mtrack-list/N/demux-crop-w, track-list/N/demux-crop-h[0m
                     Video size after cropping.

              [1mtrack-list/N/demux-channel-count[0m
                     Number  of  audio channels as indicated by the container. (Not always accurate - in particular, the
                     track could be decoded as a different number of channels.)

              [1mtrack-list/N/demux-channels[0m
                     Channel layout as indicated by the container. (Not always accurate.)

              [1mtrack-list/N/demux-samplerate[0m
                     Audio sample rate as indicated by the container. (Not always accurate.)

              [1mtrack-list/N/demux-fps[0m
                     Video FPS as indicated by the container. (Not always accurate.)

              [1mtrack-list/N/demux-bitrate[0m
                     Audio average bitrate, in bits per second. (Not always accurate.)

              [1mtrack-list/N/demux-rotation[0m
                     Video clockwise rotation metadata, in degrees.

              [1mtrack-list/N/demux-par[0m
                     Pixel aspect ratio.

              [1mtrack-list/N/audio-channels (deprecated)[0m
                     Deprecated alias for [1mtrack-list/N/demux-channel-count[22m.

              [1mtrack-list/N/replaygain-track-peak, track-list/N/replaygain-track-gain[0m
                     Per-track replaygain values. Only available for audio tracks with corresponding information  stored
                     in the source file.

              [1mtrack-list/N/replaygain-album-peak, track-list/N/replaygain-album-gain[0m
                     Per-album  replaygain values. If the file has per-track but no per-album information, the per-album
                     values will be copied from the per-track values currently. It's possible that future  mpv  versions
                     will make these properties unavailable instead in this case.

              When  querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each track)
                         "id"                MPV_FORMAT_INT64
                         "type"              MPV_FORMAT_STRING
                         "src-id"            MPV_FORMAT_INT64
                         "title"             MPV_FORMAT_STRING
                         "lang"              MPV_FORMAT_STRING
                         "image"             MPV_FORMAT_FLAG
                         "albumart"          MPV_FORMAT_FLAG
                         "default"           MPV_FORMAT_FLAG
                         "forced"            MPV_FORMAT_FLAG
                         "selected"          MPV_FORMAT_FLAG
                         "main-selection"    MPV_FORMAT_INT64
                         "external"          MPV_FORMAT_FLAG
                         "external-filename" MPV_FORMAT_STRING
                         "codec"             MPV_FORMAT_STRING
                         "ff-index"          MPV_FORMAT_INT64
                         "decoder-desc"      MPV_FORMAT_STRING
                         "demux-w"           MPV_FORMAT_INT64
                         "demux-h"           MPV_FORMAT_INT64
                         "demux-crop-x"      MPV_FORMAT_INT64
                         "demux-crop-y"      MPV_FORMAT_INT64
                         "demux-crop-w"      MPV_FORMAT_INT64
                         "demux-crop-h"      MPV_FORMAT_INT64
                         "demux-channel-count" MPV_FORMAT_INT64
                         "demux-channels"    MPV_FORMAT_STRING
                         "demux-samplerate"  MPV_FORMAT_INT64
                         "demux-fps"         MPV_FORMAT_DOUBLE
                         "demux-bitrate"     MPV_FORMAT_INT64
                         "demux-rotation"    MPV_FORMAT_INT64
                         "demux-par"         MPV_FORMAT_DOUBLE
                         "audio-channels"    MPV_FORMAT_INT64
                         "replaygain-track-peak" MPV_FORMAT_DOUBLE
                         "replaygain-track-gain" MPV_FORMAT_DOUBLE
                         "replaygain-album-peak" MPV_FORMAT_DOUBLE
                         "replaygain-album-gain" MPV_FORMAT_DOUBLE

       [1mcurrent-tracks/...[0m
              This gives access to currently selected tracks. It redirects to the correct entry in [1mtrack-list[22m.

              The following sub-entries are defined: [1mvideo[22m, [1maudio[22m, [1msub[22m, [1msub2[0m

              For example, [1mcurrent-tracks/audio/lang [22mreturns the current audio track's language field (the same value as
              [1mtrack-list/N/lang[22m).

              If tracks of the requested type are selected via [1m--lavfi-complex[22m, the first one is returned.

       [1mchapter-list (RW)[0m
              List of chapters, current entry marked. Currently, the raw property value is useless.

              This has a number of sub-properties. Replace [1mN [22mwith the 0-based chapter index.

              [1mchapter-list/count[0m
                     Number of chapters.

              [1mchapter-list/N/title[0m
                     Chapter title as stored in the file. Not always available.

              [1mchapter-list/N/time[0m
                     Chapter start time in seconds as float.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each chapter)
                         "title" MPV_FORMAT_STRING
                         "time"  MPV_FORMAT_DOUBLE

       [1maf, vf (RW)[0m
              See [1m--vf[22m/[1m--af [22mand the [1mvf[22m/[1maf [22mcommand.

              When  querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each filter entry)
                         "name"      MPV_FORMAT_STRING
                         "label"     MPV_FORMAT_STRING [optional]
                         "enabled"   MPV_FORMAT_FLAG [optional]
                         "params"    MPV_FORMAT_NODE_MAP [optional]
                             "key"   MPV_FORMAT_STRING
                             "value" MPV_FORMAT_STRING

              It's also possible to write the property using this format.

       [1mseekable[0m
              Whether it's generally possible to seek in the current file.

       [1mpartially-seekable[0m
              Whether the current file is considered seekable, but only because the cache is active.  This  means  small
              relative seeks may be fine, but larger seeks may fail anyway. Whether a seek will succeed or not is gener‚Äê
              ally not known in advance.

              If this property returns [1myes[22m/true, so will [1mseekable[22m.

       [1mplayback-abort[0m
              Whether  playback  is  stopped or is to be stopped. (Useful in obscure situations like during [1mon_load [22mhook
              processing, when the user can stop playback, but the script has to explicitly end processing.)

       [1mcursor-autohide (RW)[0m
              See [1m--cursor-autohide[22m. Setting this to a new value will always update the cursor, and reset  the  internal
              timer.

       [1mosd-sym-cc[0m
              Inserts  the  current OSD symbol as opaque OSD control code (cc). This makes sense only with the [1mshow-text[0m
              command or options which set OSD messages.  The control code is implementation specific and is useless for
              anything else.

       [1mosd-ass-cc[0m
              [1m${osd-ass-cc/0} [22mdisables escaping ASS sequences of text in OSD, [1m${osd-ass-cc/1} [22menables it again.  By  de‚Äê
              fault, ASS sequences are escaped to avoid accidental formatting, and this property can disable this behav‚Äê
              ior.  Note that the properties return an opaque OSD control code, which only makes sense for the [1mshow-text[0m
              command or options which set OSD messages.

                 Example

                 ‚Ä¢ [1m--osd-msg3='This is ${osd-ass-cc/0}{\\b1}bold text'[0m

                 ‚Ä¢ [1mshow-text "This is ${osd-ass-cc/0}{\\b1}bold text"[0m

              Any ASS override tags as understood by libass can be used.

              Note that you need to escape the [1m\ [22mcharacter, because the string is processed for C escape  sequences  be‚Äê
              fore passing it to the OSD code. See [4mFlat[24m [4mcommand[24m [4msyntax[24m for details.

              A list of tags can be found here: [4mhttps://aegisub.org/docs/latest/ass_tags/[0m

       [1mvo-configured[0m
              Whether  the  VO is configured right now. Usually this corresponds to whether the video window is visible.
              If the [1m--force-window [22moption is used, this usually always returns [1myes[22m/true.

       [1mvo-passes[0m
              Contains introspection about the VO's active render passes and their execution times. Not  implemented  by
              all VOs.

              This  is  further  subdivided into two frame types, [1mvo-passes/fresh [22mfor fresh frames (which have to be up‚Äê
              loaded, scaled, etc.) and [1mvo-passes/redraw [22mfor redrawn frames (which only have  to  be  re-painted).   The
              number of passes for any given subtype can change from frame to frame, and should not be relied upon.

              Each  frame  type  has  a  number  of further sub-properties. Replace [1mTYPE [22mwith the frame type, [1mN [22mwith the
              0-based pass index, and [1mM [22mwith the 0-based sample index.

              [1mvo-passes/TYPE/count[0m
                     Number of passes.

              [1mvo-passes/TYPE/N/desc[0m
                     Human-friendy description of the pass.

              [1mvo-passes/TYPE/N/last[0m
                     Last measured execution time, in nanoseconds.

              [1mvo-passes/TYPE/N/avg[0m
                     Average execution time of this pass, in nanoseconds. The exact timeframe varies, but it should gen‚Äê
                     erally be a handful of seconds.

              [1mvo-passes/TYPE/N/peak[0m
                     The peak execution time (highest value) within this averaging range, in nanoseconds.

              [1mvo-passes/TYPE/N/count[0m
                     The number of samples for this pass.

              [1mvo-passes/TYPE/N/samples/M[0m
                     The raw execution time of a specific sample for this pass, in nanoseconds.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_MAP
                 "TYPE" MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP
                         "desc"    MPV_FORMAT_STRING
                         "last"    MPV_FORMAT_INT64
                         "avg"     MPV_FORMAT_INT64
                         "peak"    MPV_FORMAT_INT64
                         "count"   MPV_FORMAT_INT64
                         "samples" MPV_FORMAT_NODE_ARRAY
                              MP_FORMAT_INT64

              Note  that  directly  accessing  this  structure  via subkeys is not supported, the only access is through
              aforementioned [1mMPV_FORMAT_NODE[22m.

       [1mperf-info[0m
              Further performance data. Querying this property triggers internal collection of some data, and  may  slow
              down the player. Each query will reset some internal state. Property change notification doesn't and won't
              work.  All of this may change in the future, so don't use this. The builtin [1mstats [22mscript is supposed to be
              the  only user; since it's bundled and built with the source code, it can use knowledge of mpv internal to
              render the information properly. See [1mstats [22mscript description for some details.

       [1mvideo-bitrate, audio-bitrate, sub-bitrate[0m
              Bitrate values calculated on the packet level. This works by dividing the bit size of all packets  between
              two  keyframes by their presentation timestamp distance. (This uses the timestamps are stored in the file,
              so e.g. playback speed does not influence the returned values.) In particular, the video bitrate will  up‚Äê
              date  only  per  keyframe,  and show the "past" bitrate. To make the property more UI friendly, updates to
              these properties are throttled in a certain way.

              The unit is bits per second. OSD formatting turns these values in kilobits (or megabits, if  appropriate),
              which can be prevented by using the raw property value, e.g. with [1m${=video-bitrate}[22m.

              Note  that  the  accuracy  of  these properties is influenced by a few factors.  If the underlying demuxer
              rewrites the packets on demuxing (done for some file formats), the bitrate might be slightly off. If time‚Äê
              stamps are bad or jittery (like in Matroska), even constant bitrate streams  might  show  fluctuating  bi‚Äê
              trate.

              How exactly these values are calculated might change in the future.

              In  earlier versions of mpv, these properties returned a static (but bad) guess using a completely differ‚Äê
              ent method.

       [1mpacket-video-bitrate, packet-audio-bitrate, packet-sub-bitrate[0m
              Old and deprecated properties for [1mvideo-bitrate[22m, [1maudio-bitrate[22m, [1msub-bitrate[22m. They behave exactly the same,
              but return a value in kilobits. Also, they don't have any OSD formatting, though the same can be  achieved
              with e.g. [1m${=video-bitrate}[22m.

              These properties shouldn't be used anymore.

       [1maudio-device-list[0m
              The  list of discovered audio devices. This is mostly for use with the client API, and reflects what [1m--au‚Äê[0m
              [1mdio-device=help [22mwith the command line player returns.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each device entry)
                         "name"          MPV_FORMAT_STRING
                         "description"   MPV_FORMAT_STRING

              The  [1mname  [22mis what is to be passed to the [1m--audio-device [22moption (and often a rather cryptic audio API-spe‚Äê
              cific ID), while [1mdescription [22mis human readable free form text. The description is set to the  device  name
              (minus mpv-specific [1m<driver>/ [22mprefix) if no description is available or the description would have been an
              empty string.

              The  special  entry  with the name set to [1mauto [22mselects the default audio output driver and the default de‚Äê
              vice.

              The property can be watched with the property observation mechanism in the client API and in Lua  scripts.
              (Technically, change notification is enabled the first time this property is read.)

       [1maudio-device (RW)[0m
              Set the audio device. This directly reads/writes the [1m--audio-device [22moption, but on write accesses, the au‚Äê
              dio output will be scheduled for reloading.

              Writing  this  property while no audio output is active will not automatically enable audio. (This is also
              true in the case when audio was disabled due to reinitialization failure after a previous write access  to
              [1maudio-device[22m.)

              This property also doesn't tell you which audio device is actually in use.

              How these details are handled may change in the future.

       [1mcurrent-vo[0m
              Current video output driver (name as used with [1m--vo[22m).

       [1mcurrent-ao[0m
              Current audio output driver (name as used with [1m--ao[22m).

       [1mshared-script-properties (RW)[0m
              This  is  a  key/value  map of arbitrary strings shared between scripts for general use. The player itself
              does not use any data in it (although some builtin scripts may). The  property  is  not  preserved  across
              player restarts.

              This  is  very  primitive, inefficient, and annoying to use. It's a makeshift solution which could go away
              any time (for example, when a better solution becomes available). This is also why this  property  has  an
              annoying name. You should avoid using it, unless you absolutely have to.

              Lua  scripting has helpers starting with [1mutils.shared_script_property_[22m.  They are undocumented because you
              should not use this property. If you still think you must, you should use the helpers instead of the prop‚Äê
              erty directly.

              You are supposed to use the [1mchange-list [22mcommand to modify the contents.  Reading, modifying,  and  writing
              the property manually could data loss if two scripts update different keys at the same time due to lack of
              synchronization. The Lua helpers take care of this.

              (There is no way to ensure synchronization if two scripts try to update the same key at the same time.)

       [1muser-data (RW)[0m
              This is a recursive key/value map of arbitrary nodes shared between clients for general use (i.e. scripts,
              IPC  clients,  host  applications,  etc).   The  player  itself does not use any data in it (although some
              builtin scripts may).  The property is not preserved across player restarts.

              This is a more powerful replacement for [1mshared-script-properties[22m.

              Sub-paths can be accessed directly; e.g. [1muser-data/my-script/state/a [22mcan be read, written, or observed.

              The top-level object itself cannot be written directly; write to sub-paths instead.

              Converting this property or its sub-properties to strings will give a JSON representation. If converting a
              leaf-level object (i.e. not a map or array) and not using raw mode, the underlying content will  be  given
              (e.g. strings will be printed directly, rather than quoted and JSON-escaped).

       [1mworking-directory[0m
              The  working  directory  of  the  mpv  process. Can be useful for JSON IPC users, because the command line
              player usually works with relative paths.

       [1mprotocol-list[0m
              List of protocol prefixes potentially recognized by the player. They are  returned  without  trailing  [1m://[0m
              suffix (which is still always required).  In some cases, the protocol will not actually be supported (con‚Äê
              sider [1mhttps [22mif ffmpeg is not compiled with TLS support).

       [1mdecoder-list[0m
              List of decoders supported. This lists decoders which can be passed to [1m--vd [22mand [1m--ad[22m.

              [1mcodec  [22mCanonical codec name, which identifies the format the decoder can handle.

              [1mdriver [22mThe  name  of the decoder itself. Often, this is the same as [1mcodec[22m.  Sometimes it can be different.
                     It is used to distinguish multiple decoders for the same codec.

              [1mdescription[0m
                     Human readable description of the decoder and codec.

              When querying the property with the client API using [1mMPV_FORMAT_NODE[22m, or with Lua  [1mmp.get_property_native[22m,
              this will return a mpv_node with the following contents:

                 MPV_FORMAT_NODE_ARRAY
                     MPV_FORMAT_NODE_MAP (for each decoder entry)
                         "codec"         MPV_FORMAT_STRING
                         "driver"        MPV_FORMAT_STRING
                         "description"   MPV_FORMAT_STRING

       [1mencoder-list[0m
              List of libavcodec encoders. This has the same format as [1mdecoder-list[22m.  The encoder names ([1mdriver [22mentries)
              can be passed to [1m--ovc [22mand [1m--oac [22m(without the [1mlavc: [22mprefix required by [1m--vd [22mand [1m--ad[22m).

       [1mdemuxer-lavf-list[0m
              List of available libavformat demuxers' names. This can be used to check for support for a specific format
              or use with [1m--demuxer-lavf-format[22m.

       [1minput-key-list[0m
              List of [4mKey[24m [4mnames[24m, same as output by [1m--input-keylist[22m.

       [1mmpv-version[0m
              The mpv version/copyright string. Depending on how the binary was built, it might contain either a release
              version, or just a git hash.

       [1mmpv-configuration[0m
              The configuration arguments that were passed to the build system. If the meson version used to compile mpv
              is older than 1.1.0, then a hardcoded string of a few, arbitrary options is displayed instead.

       [1mffmpeg-version[0m
              The  contents  of the [1mav_version_info() [22mAPI call. This is a string which identifies the build in some way,
              either through a release version number, or a git hash. This applies to Libav as  well  (the  property  is
              still  named  the same.) This property is unavailable if mpv is linked against older FFmpeg and Libav ver‚Äê
              sions.

       [1mlibass-version[0m
              The value of [1mass_library_version()[22m. This is an integer, encoded in a somewhat weird form (apparently  "hex
              BCD"), indicating the release version of the libass library linked to mpv.

       [1mplatform[0m
              Returns a string describing what target platform mpv was built for. The value of this is dependent on what
              the  underlying  build system detects. Some of the most common values are: [1mwindows[22m, [1mdarwin [22m(macos or ios),
              [1mlinux[22m, [1mandroid[22m, and [1mfreebsd[22m. Note that this is not a complete listing.

       [1moptions/<name> (RW)[0m
              The value of option [1m--<name>[22m. Most options can be changed at runtime by writing  to  this  property.  Note
              that  many  options require reloading the file for changes to take effect. If there is an equivalent prop‚Äê
              erty, prefer setting the property instead.

              There shouldn't be any reason to access [1moptions/<name> [22minstead of [1m<name>[22m, except in  situations  in  which
              the properties have different behavior or conflicting semantics.

       [1mfile-local-options/<name> (RW)[0m
              Similar  to  [1moptions/<name>[22m,  but when setting an option through this property, the option is reset to its
              old value once the current file has stopped playing. Trying to write an option while no  file  is  playing
              (or is being loaded) results in an error.

              (Note  that  if  an option is marked as file-local, even [1moptions/ [22mwill access the local value, and the [1mold[0m
              value, which will be restored on end of playback, cannot be read or written until end of playback.)

       [1moption-info/<name>[0m
              Additional per-option information.

              This has a number of sub-properties. Replace [1m<name> [22mwith the name of a top-level option. No  guarantee  of
              stability is given to any of these sub-properties - they may change radically in the feature.

              [1moption-info/<name>/name[0m
                     The name of the option.

              [1moption-info/<name>/type[0m
                     The  name of the option type, like [1mString [22mor [1mInteger[22m. For many complex types, this isn't very accu‚Äê
                     rate.

              [1moption-info/<name>/set-from-commandline[0m
                     Whether the option was set from the mpv command line. What this is set to if  the  option  is  e.g.
                     changed at runtime is left undefined (meaning it could change in the future).

              [1moption-info/<name>/set-locally[0m
                     Whether  the option was set per-file. This is the case with automatically loaded profiles, file-dir
                     configs, and other cases. It means the option value will be restored to the value  before  playback
                     start when playback ends.

              [1moption-info/<name>/default-value[0m
                     The default value of the option. May not always be available.

              [1moption-info/<name>/min, option-info/<name>/max[0m
                     Integer  minimum  and  maximum values allowed for the option. Only available if the options are nu‚Äê
                     meric, and the minimum/maximum has been set internally. It's also possible that only one  of  these
                     is set.

              [1moption-info/<name>/choices[0m
                     If the option is a choice option, the possible choices. Choices that are integers may or may not be
                     included  (they can be implied by [1mmin [22mand [1mmax[22m). Note that options which behave like choice options,
                     but are not actual choice options internally, may not have this info available.

       [1mproperty-list[0m
              The list of top-level properties.

       [1mprofile-list[0m
              The list of profiles and their contents. This is highly implementation-specific, and may change any  time.
              Currently,  it  returns an array of options for each profile. Each option has a name and a value, with the
              value currently always being a string. Note that the options array is not a map, as order matters and  du‚Äê
              plicate entries are possible. Recursive profiles are not expanded, and show up as special [1mprofile [22moptions.

              The  [1mprofile-restore  [22mfield  is currently missing if it holds the default value (either because it was not
              set, or set explicitly to [1mdefault[22m), but in the future it might hold the value [1mdefault[22m.

       [1mcommand-list[0m
              The list of input commands. This returns an array of maps, where each map node represents a command.  This
              map  currently only has a single entry: [1mname [22mfor the name of the command. (This property is supposed to be
              a replacement for [1m--input-cmdlist[22m. The option dumps some more information, but it's a  valid  feature  re‚Äê
              quest to extend this property if needed.)

       [1minput-bindings[0m
              The  list  of  current input key bindings. This returns an array of maps, where each map node represents a
              binding for a single key/command. This map has the following entries:

              [1mkey    [22mThe key name. This is normalized and may look slightly different from how it was specified  in  the
                     source (e.g. in input.conf).

              [1mcmd    [22mThe  command  mapped  to  the  key. (Currently, this is exactly the same string as specified in the
                     source, other than stripping whitespace and comments. It's possible that it will be  normalized  in
                     the future.)

              [1mis_weak[0m
                     If set to true, any existing and active user bindings will take priority.

              [1mowner  [22mIf this entry exists, the name of the script (or similar) which added this binding.

              [1msection[0m
                     Name of the section this binding is part of. This is a rarely used mechanism. This entry may be re‚Äê
                     moved or change meaning in the future.

              [1mpriority[0m
                     A number. Bindings with a higher value are preferred over bindings with a lower value. If the value
                     is  negative,  this  binding is inactive and will not be triggered by input. Note that mpv does not
                     use this value internally, and matching of bindings may work slightly differently in some cases. In
                     addition, this value is dynamic and can change around at runtime.

              [1mcomment[0m
                     If available, the comment following the command on the same line. (For example, the input.conf  en‚Äê
                     try  [1mf  cycle  bla  # toggle bla [22mwould result in an entry with [1mcomment = "toggle bla", cmd = "cycle[0m
                     [1mbla"[22m.)

              This property is read-only, and change notification is not supported.  Currently, there is no mechanism to
              change key bindings at runtime, other than scripts adding or removing their own bindings.

   [1mInconsistencies between options and properties[0m
       You can access (almost) all options as properties, though there are some caveats with  some  properties  (due  to
       historical reasons):

       [1mvid, aid, sid[0m
              While  playback is active, these return the actually active tracks. For example, if you set [1maid=5[22m, and the
              currently played file contains no audio track with ID 5, the [1maid [22mproperty will return [1mno[22m.

              Before mpv 0.31.0, you could set existing tracks at runtime only.

       [1mdisplay-fps[0m
              This inconsistent behavior is deprecated. Post-deprecation, the reported value and the  option  value  are
              cleanly separated ([1moverride-display-fps [22mfor the option value).

       [1mvf, af [22mIf  you set the properties during playback, and the filter chain fails to reinitialize, the option will be
              set, but the runtime filter chain does not change. On the other hand, the next video  to  be  played  will
              fail, because the initial filter chain cannot be created.

              This  behavior  changed  in mpv 0.31.0. Before this, the new value was rejected [4miff[24m a video (for [1mvf[22m) or an
              audio (for [1maf[22m) track was active. If playback was not active, the behavior was the same as the current one.

       [1mplaylist[0m
              The property is read-only and returns the current internal playlist. The option is  for  loading  playlist
              during command line parsing. For client API uses, you should use the [1mloadlist [22mcommand instead.

       [1mprofile, include[0m
              These are write-only, and will perform actions as they are written to, exactly as if they were used on the
              mpv  CLI commandline. Their only use is when using libmpv before [1mmpv_initialize()[22m, which in turn is proba‚Äê
              bly only useful in encoding mode. Normal libmpv users should use other mechanisms, such as the  [1mapply-pro‚Äê[0m
              [1mfile [22mcommand, and the [1mmpv_load_config_file [22mAPI function. Avoid these properties.

   [1mProperty Expansion[0m
       All  string arguments to input commands as well as certain options (like [1m--term-playing-msg[22m) are subject to prop‚Äê
       erty expansion. Note that property expansion does not work in places where e.g. numeric parameters are  expected.
       (For  example,  the [1madd [22mcommand does not do property expansion. The [1mset [22mcommand is an exception and not a general
       rule.)

          Example for input.conf

          [1mi show-text "Filename: ${filename}"[0m
                 shows the filename of the current file when pressing the [1mi [22mkey

       Whether property expansion is enabled by default depends on which API is used (see [4mFlat[24m [4mcommand[24m [4msyntax[24m,  [4mCommands[0m
       [4mspecified[24m  [4mas[24m [4marrays[24m and [4mNamed[24m [4marguments[24m), but it can always be enabled with the [1mexpand-properties [22mprefix or dis‚Äê
       abled with the [1mraw [22mprefix, as described in [4mInput[24m [4mCommand[24m [4mPrefixes[24m.

       The following expansions are supported:

       [1m${NAME}[0m
              Expands to the value of the property [1mNAME[22m. If retrieving the property fails, expand to  an  error  string.
              (Use [1m${NAME:} [22mwith a trailing [1m: [22mto expand to an empty string instead.)  If [1mNAME [22mis prefixed with [1m=[22m, expand
              to the raw value of the property (see section below).

       [1m${NAME:STR}[0m
              Expands to the value of the property [1mNAME[22m, or [1mSTR [22mif the property cannot be retrieved. [1mSTR [22mis expanded re‚Äê
              cursively.

       [1m${?NAME:STR}[0m
              Expands to [1mSTR [22m(recursively) if the property [1mNAME [22mis available.

       [1m${!NAME:STR}[0m
              Expands to [1mSTR [22m(recursively) if the property [1mNAME [22mcannot be retrieved.

       [1m${?NAME==VALUE:STR}[0m
              Expands  to [1mSTR [22m(recursively) if the property [1mNAME [22mexpands to a string equal to [1mVALUE[22m. You can prefix [1mNAME[0m
              with [1m= [22min order to compare the raw value of a property (see section below). If the  property  is  unavail‚Äê
              able,  or  other  errors  happen when retrieving it, the value is never considered equal.  Note that [1mVALUE[0m
              can't contain any of the characters [1m: [22mor [1m}[22m.  Also, it is possible that escaping with [1m" [22mor [1m% [22mmight be added
              in the future, should the need arise.

       [1m${!NAME==VALUE:STR}[0m
              Same as with the [1m? [22mvariant, but [1mSTR [22mis expanded if the value is not equal. (Using the  same  semantics  as
              with [1m?[22m.)

       [1m$$     [22mExpands to [1m$[22m.

       [1m$}     [22mExpands to [1m}[22m. (To produce this character inside recursive expansion.)

       [1m$>     [22mDisable property expansion and special handling of [1m$ [22mfor the rest of the string.

       In places where property expansion is allowed, C-style escapes are often accepted as well. Example:

          ‚Ä¢ [1m\n [22mbecomes a newline character

          ‚Ä¢ [1m\\ [22mexpands to [1m\[0m

   [1mRaw and Formatted Properties[0m
       Normally, properties are formatted as human-readable text, meant to be displayed on OSD or on the terminal. It is
       possible  to  retrieve  an unformatted (raw) value from a property by prefixing its name with [1m=[22m. These raw values
       can be parsed by other programs and follow the same conventions as the options associated with the properties.

          Examples

          ‚Ä¢ [1m${time-pos} [22mexpands to [1m00:14:23 [22m(if playback position is at 14 minutes 23 seconds)

          ‚Ä¢ [1m${=time-pos} [22mexpands to [1m863.4 [22m(same time, plus 400 milliseconds - milliseconds are normally not shown in the
            formatted case)

       Sometimes, the difference in amount of information carried by raw and formatted property  values  can  be  rather
       big. In some cases, raw values have more information, like higher precision than seconds with [1mtime-pos[22m. Sometimes
       it  is  the  other  way around, e.g. [1maid [22mshows track title and language in the formatted case, but only the track
       number if it is raw.

[1mON SCREEN CONTROLLER[0m
       The On Screen Controller (short: OSC) is a minimal GUI integrated with mpv to offer basic  mouse-controllability.
       It is intended to make interaction easier for new users and to enable precise and direct seeking.

       The  OSC  is  enabled  by  default  if  mpv  was compiled with Lua support. It can be disabled entirely using the
       [1m--osc=no [22moption.

   [1mUsing the OSC[0m
       By default, the OSC will show up whenever the mouse is moved inside the player window and will hide if the  mouse
       is not moved outside the OSC for 0.5 seconds or if the mouse leaves the window.

   [1mThe Interface[0m
          +---------+----------+------------------------------------------+----------+
          | pl prev | pl next  |  title                                   |    cache |
          +------+--+---+------+---------+-----------+------+-------+-----+-----+----+
          | play | skip | skip | time    |  seekbar  | time | audio | sub | vol | fs |
          |      | back | frwd | elapsed |           | left |       |     |     |    |
          +------+------+------+---------+-----------+------+-------+-----+-----+----+

       [1mpl prev[0m
                                         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                         ‚îÇ left-click    ‚îÇ play previous file in playlist ‚îÇ
                                         ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                         ‚îÇ right-click   ‚îÇ show playlist                  ‚îÇ
                                         ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                         ‚îÇ shift+L-click ‚îÇ show playlist                  ‚îÇ
                                         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       [1mpl next[0m
                                           ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                           ‚îÇ left-click    ‚îÇ play next file in playlist ‚îÇ
                                           ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                           ‚îÇ right-click   ‚îÇ show playlist              ‚îÇ
                                           ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                           ‚îÇ shift+L-click ‚îÇ show playlist              ‚îÇ
                                           ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       [1mtitle[0m
              Displays current media-title, filename, custom title, or target chapter
              name while hovering the seekbar.

                                     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ left-click  ‚îÇ show  playlist  position  and length and ‚îÇ
                                     ‚îÇ             ‚îÇ full title                               ‚îÇ
                                     ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                     ‚îÇ right-click ‚îÇ show filename                            ‚îÇ
                                     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       [1mcache[0m
              Shows current cache fill status

       [1mplay[0m
                                                 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                                 ‚îÇ left-click ‚îÇ toggle play/pause ‚îÇ
                                                 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       [1mskip back[0m
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      left-click      go to beginning of  chapter  /  previous
                                                      chapter
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      right-click     show chapters
                                    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                                      shift+L-click   show chapters
                                    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mskip frwd                    [22m‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê          ‚îÇ
                                    ‚îÇ          ‚îÇ lef‚îÇt-click    ‚îÇ go to next chapter ‚îÇ          ‚îÇ
                                    ‚îÇ          ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§          ‚îÇ
                                    ‚îÇ          ‚îÇ rig‚îÇht-click   ‚îÇ show chapters      ‚îÇ          ‚îÇ
                                    ‚îÇ          ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§          ‚îÇ
                                    ‚îÇ          ‚îÇ shi‚îÇft+L-click ‚îÇ show chapters      ‚îÇ          ‚îÇ
                                    ‚îÇ          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mtime elapsed                 [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Shows current playback‚îÇposition timest‚îÇamp                                        ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îÇ
                                    ‚îÇ ‚îÇ left-click ‚îÇ‚îÇtoggle  displaying  timecodes  with mil‚Äê ‚îÇ‚îÇ
                                    ‚îÇ ‚îÇ            ‚îÇ‚îÇliseconds                                ‚îÇ‚îÇ
                                    ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekbar                      [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Indicates current play‚îÇback position an‚îÇd position of chapters                     ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê         ‚îÇ
                                    ‚îÇ          ‚îÇ lef‚îÇt-click  ‚îÇ seek to position      ‚îÇ         ‚îÇ
                                    ‚îÇ          ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§         ‚îÇ
                                    ‚îÇ          ‚îÇ mou‚îÇse wheel ‚îÇ seek forward/backward ‚îÇ         ‚îÇ
                                    ‚îÇ          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò         ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mtime left                    [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Shows remaining playba‚îÇck time timestam‚îÇp                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
                                    ‚îÇ ‚îÇ left-click ‚îÇ‚îÇtoggle between total and remaining time ‚îÇ ‚îÇ
                                    ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1maudio and sub                [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Displays selected trac‚îÇk and amount of ‚îÇavailable tracks                           ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ left-click    ‚îÇ cycle audio/sub tracks forward           ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ right-click   ‚îÇ cycle audio/sub tracks backwards         ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ shift+L-click ‚îÇ show available audio/sub tracks          ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ mouse wheel   ‚îÇ cycle audio/sub tracks forward/backwards ‚îÇ
                                    ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mvol                          [22m‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ             ‚îå‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê             ‚îÇ
                                    ‚îÇ             ‚îÇ ‚îÇleft-click  ‚îÇ toggle mute    ‚îÇ             ‚îÇ
                                    ‚îÇ             ‚îú‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§             ‚îÇ
                                    ‚îÇ             ‚îÇ ‚îÇmouse wheel ‚îÇ volume up/down ‚îÇ             ‚îÇ
                                    ‚îÇ             ‚îî‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò             ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mfs                           [22m‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ            ‚îå‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê            ‚îÇ
                                    ‚îÇ            ‚îÇ l‚îÇeft-click ‚îÇ toggle fullscreen ‚îÇ            ‚îÇ
                                    ‚îÇ            ‚îî‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò            ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
   [1mKey Bindings                     [22m‚îÇ               ‚îÇ                                          ‚îÇ
       These key bindings are active‚îÇby default if n‚îÇothing else is already bound to these keys.‚îÇIn  case  of  collision,
       the function needs to be boun‚îÇd to a different‚îÇkey. See the [4mScript[24m [4mCommands[24m section.     ‚îÇ
                                    ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îÇ
                                    ‚îÇ ‚îÇ del ‚îÇ Cycles‚îÇ visibility  between never / auto ‚îÇ       ‚îÇ
                                    ‚îÇ ‚îÇ     ‚îÇ (mouse‚îÇ-move) / always                    ‚îÇ       ‚îÇ
                                    ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
   [1mConfiguration                    [22m‚îÇ               ‚îÇ                                          ‚îÇ
       The OSC offers limited config‚îÇuration through ‚îÇa config file [1mscript-opts/osc.conf [22mplaced  ‚îÇin  mpv's  user  dir  and
       through the [1m--script-opts [22mcom‚îÇmand-line option‚îÇ. Options provided through the command-line‚îÇwill override those from
       the config file.             ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
   [1mConfig Syntax                    [22m‚îÇ               ‚îÇ                                          ‚îÇ
       The config file must exactly ‚îÇfollow the follo‚îÇwing syntax:                               ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
          # this is a comment       ‚îÇ               ‚îÇ                                          ‚îÇ
          optionA=value1            ‚îÇ               ‚îÇ                                          ‚îÇ
          optionB=value2            ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1m# [22mcan only be used at the beg‚îÇinning of a line‚îÇand there may be no spaces around the [1m= [22mor‚îÇanywhere else.
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
   [1mCommand-line Syntax              [22m‚îÇ               ‚îÇ                                          ‚îÇ
       To avoid collisions with othe‚îÇr scripts, all o‚îÇptions need to be prefixed with [1mosc-[22m.      ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       Example:                     ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
          --script-opts=osc-optionA=‚îÇvalue1,osc-optio‚îÇnB=value2                                  ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
   [1mConfigurable Options             [22m‚îÇ               ‚îÇ                                          ‚îÇ
       [1mlayout [22mDefault: bottombar    ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              The  layout  for  the ‚îÇOSC. Currently a‚îÇvailable are: box, slimbox, bottombar and t‚îÇopbar. Default pre-0.21.0
              was 'box'.            ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekbarstyle                 [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: bar          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Sets the style of the ‚îÇplayback positio‚îÇn marker and overall shape of the seekbar: ‚îÇ[1mbar[22m, [1mdiamond [22mor [1mknob[22m.
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekbarhandlesize            [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: 0.6          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Size ratio of the seek‚îÇhandle if [1mseekb[22m‚îÇ[1marstyle [22mis set to [1mdiamond [22mor [1mknob[22m. This  is‚îÇ relative  to  the  full
              height of the seekbar.‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekbarkeyframes             [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: yes          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Controls  the  mode  u‚îÇsed  to  seek wh‚îÇen dragging the seekbar. If set to [1myes[22m, def‚îÇault seeking mode is used
              (usually keyframes, bu‚îÇt player default‚îÇs and heuristics can change it to exact). I‚îÇf set to [1mno[22m, exact  seek‚Äê
              ing  on  mouse drags w‚îÇill be used inst‚îÇead. Keyframes are preferred, but exact see‚îÇks may be useful in cases
              where keyframes cannot‚îÇbe found. Note ‚îÇthat using exact seeks can  potentially  ma‚îÇke  mouse  dragging  much
              slower.               ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekrangestyle               [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: inverted     ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Display seekable range‚îÇs on the seekbar‚îÇ. [1mbar [22mshows them on the full height of the ‚îÇbar, [1mline [22mas a thick line
              and  [1minverted  [22mas  a t‚îÇhin line that is‚îÇinverted over playback position markers. [1mn[22m‚îÇ[1mone [22mwill hide them. Addi‚Äê
              tionally, [1mslider [22mwill ‚îÇshow a permanent‚îÇhandle inside the seekbar with cached rang‚îÇes  marked  inside.  Note
              that  these  will look‚îÇdifferently bas‚îÇed on the seekbarstyle option. Also, [1mslider[22m‚îÇdoes not work with [1mseek‚Äê[0m
              [1mbarstyle [22mset to [1mbar[22m.  ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekrangeseparate            [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: yes          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Controls whether to sh‚îÇow line-style se‚îÇekable ranges on top of the seekbar or sepa‚îÇrately if [1mseekbarstyle [22mis
              set to [1mbar[22m.           ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mseekrangealpha               [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: 200          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Alpha of the seekable ‚îÇranges, 0 (opaqu‚îÇe) to 255 (fully transparent).             ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mdeadzonesize                 [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: 0.5          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Size of the deadzone. ‚îÇThe deadzone is ‚îÇan area that makes the mouse act like leavi‚îÇng the  window.  Movement
              there  won't make the ‚îÇOSC show up and ‚îÇit will hide immediately if the mouse enter‚îÇs it. The deadzone starts
              at the window border o‚îÇpposite to the O‚îÇSC and the size controls how much of the wi‚îÇndow it will span. Values
              between 0.0 and 1.0, w‚îÇhere 0 means the‚îÇOSC will always popup with mouse movement ‚îÇin  the  window,  and  1
              means the OSC will onl‚îÇy show up when t‚îÇhe mouse hovers it. Default pre-0.21.0 was ‚îÇ0.
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mminmousemove                 [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: 0            ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Minimum  amount  of pi‚îÇxels the mouse h‚îÇas to move between ticks to make the OSC sh‚îÇow up. Default pre-0.21.0
              was 3.                ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mshowwindowed                 [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: yes          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Enable the OSC when wi‚îÇndowed          ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1mshowfullscreen               [22m‚îÇ               ‚îÇ                                          ‚îÇ
              Default: yes          ‚îÇ               ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
              Enable the OSC when fu‚îÇllscreen        ‚îÇ                                          ‚îÇ
                                    ‚îÇ               ‚îÇ                                          ‚îÇ
       [1midlescreen[0m
              Default: yes

              Show the mpv logo and message when idle

       [1mscalewindowed[0m
              Default: 1.0

              Scale factor of the OSC when windowed.

       [1mscalefullscreen[0m
              Default: 1.0

              Scale factor of the OSC when fullscreen

       [1mscaleforcedwindow[0m
              Default: 2.0

              Scale factor of the OSC when rendered on a forced (dummy) window

       [1mvidscale[0m
              Default: yes

              Scale the OSC with the video [1mno [22mtries to keep the OSC size constant as much as the window size allows

       [1mvalign [22mDefault: 0.8

              Vertical alignment, -1 (top) to 1 (bottom)

       [1mhalign [22mDefault: 0.0

              Horizontal alignment, -1 (left) to 1 (right)

       [1mbarmargin[0m
              Default: 0

              Margin from bottom (bottombar) or top (topbar), in pixels

       [1mboxalpha[0m
              Default: 80

              Alpha of the background box, 0 (opaque) to 255 (fully transparent)

       [1mhidetimeout[0m
              Default: 500

              Duration in ms until the OSC hides if no mouse movement, must not be negative

       [1mfadeduration[0m
              Default: 200

              Duration of fade out in ms, 0 = no fade

       [1mtitle  [22mDefault: ${media-title}

              String that supports property expansion that will be displayed as OSC title.  ASS tags  are  escaped,  and
              newlines and trailing slashes are stripped.

       [1mtooltipborder[0m
              Default: 1

              Size of the tooltip outline when using bottombar or topbar layouts

       [1mtimetotal[0m
              Default: no

              Show total time instead of time remaining

       [1mremaining_playtime[0m
              Default: yes

              Whether  the time-remaining display takes speed into account.  [1myes [22m- how much playback time remains at the
              current speed.  [1mno [22m- how much video-time remains.

       [1mtimems [22mDefault: no

              Display timecodes with milliseconds

       [1mtcspace[0m
              Default: 100 (allowed: 50-200)

              Adjust space reserved for timecodes (current time and time remaining) in the [1mbottombar [22mand [1mtopbar [22mlayouts.
              The timecode width depends on the font, and with some fonts the spacing near  the  timecodes  becomes  too
              small.  Use values above 100 to increase that spacing, or below 100 to decrease it.

       [1mvisibility[0m
              Default: auto (auto hide/show on mouse move)

              Also supports [1mnever [22mand [1malways[0m

       [1mboxmaxchars[0m
              Default: 80

              Max  chars  for  the  osc title at the box layout. mpv does not measure the text width on screen and so it
              needs to limit it by number of chars. The default is conservative to allow wide fonts to be  used  without
              overflow.  However, with many common fonts a bigger number can be used. YMMV.

       [1mboxvideo[0m
              Default: no

              Whether  to  overlay  the osc over the video ([1mno[22m), or to box the video within the areas not covered by the
              osc ([1myes[22m). If this option is set, the osc may overwrite the [1m--video-margin-ratio-* [22moptions,  even  if  the
              user  has  set  them. (It will not overwrite them if all of them are set to default values.) Additionally,
              [1mvisibility [22mmust be set to [1malways[22m.  Otherwise, this option does nothing.

              Currently, this is supported for the [1mbottombar [22mand [1mtopbar [22mlayout only. The other layouts do not change  if
              this  option is set. Separately, if window controls are present (see below), they will be affected regard‚Äê
              less of which osc layout is in use.

              The border is static and appears even if the OSC is configured to appear only on mouse interaction. If the
              OSC is invisible, the border is simply filled with the background color (black by default).

              This currently still makes the OSC overlap with subtitles (if the [1m--sub-use-margins [22moption is set to  [1myes[22m,
              the default). This may be fixed later.

              This does not work correctly with video outputs like [1m--vo=xv[22m, which render OSD into the unscaled video.

       [1mwindowcontrols[0m
              Default: auto (Show window controls if there is no window border)

              Whether  to  show  window management controls over the video, and if so, which side of the window to place
              them. This may be desirable when the window has no decorations, either because they have  been  explicitly
              disabled ([1mborder=no[22m) or because the current platform doesn't support them (eg: gnome-shell with wayland).

              The  set  of  window controls is fixed, offering [1mminimize[22m, [1mmaximize[22m, and [1mquit[22m. Not all platforms implement
              [1mminimize [22mand [1mmaximize[22m, but [1mquit [22mwill always work.

       [1mwindowcontrols_alignment[0m
              Default: right

              If window controls are shown, indicates which side should they be aligned to.

              Supports [1mleft [22mand [1mright [22mwhich will place the controls on those respective sides.

       [1mgreenandgrumpy[0m
              Default: no

              Set to [1myes [22mto reduce festivity (i.e. disable santa hat in December.)

       [1mlivemarkers[0m
              Default: yes

              Update chapter markers positions on duration changes, e.g. live streams.  The updates  are  unoptimized  -
              consider disabling it on very low-end systems.

       [1mchapters_osd, playlist_osd[0m
              Default: yes

              Whether  to display the chapters/playlist at the OSD when left-clicking the next/previous OSC buttons, re‚Äê
              spectively.

       [1mchapter_fmt[0m
              Default: [1mChapter: %s[0m

              Template for the chapter-name display when hovering the seekbar.  Use [1mno [22mto  disable  chapter  display  on
              hover. Otherwise it's a lua [1mstring.format [22mtemplate and [1m%s [22mis replaced with the actual name.

       [1municodeminus[0m
              Default: no

              Use a Unicode minus sign instead of an ASCII hyphen when displaying the remaining playback time.

   [1mScript Commands[0m
       The  OSC  script  listens  to  certain  script commands. These commands can bound in [1minput.conf[22m, or sent by other
       scripts.

       [1mosc-message[0m
              Show a message on screen using the OSC. First argument is the message, second the duration in seconds.

       [1mosc-visibility[0m
              Controls visibility mode [1mnever [22m/ [1mauto [22m(on mouse move) / [1malways [22mand also [1mcycle [22mto cycle between the modes

       Example

       You could put this into [1minput.conf [22mto hide the OSC with the [1ma [22mkey and to set auto mode (the default) with [1mb[22m:

          a script-message osc-visibility never
          b script-message osc-visibility auto

       [1mosc-idlescreen[0m
              Controls the visibility of the mpv logo on idle. Valid arguments are [1myes[22m, [1mno[22m, and [1mcycle [22mto toggle  between
              yes and no.

       [1mosc-playlist, osc-chapterlist, osc-tracklist[0m
              Shows a limited view of the respective type of list using the OSC. First argument is duration in seconds.

[1mSTATS[0m
       This  builtin  script displays information and statistics for the currently played file. It is enabled by default
       if mpv was compiled with Lua support.  It can be disabled entirely using the [1m--load-stats-overlay=no [22moption.

   [1mUsage[0m
       The following key bindings are active by default unless something else is already bound to them:
                                       ‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                       ‚îÇ i ‚îÇ Show stats for a fixed duration          ‚îÇ
                                       ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                       ‚îÇ I ‚îÇ Toggle stats (shown until toggled again) ‚îÇ
                                       ‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       While the stats are visible on screen the following key bindings are active,  regardless  of  existing  bindings.
       They allow you to switch between [4mpages[24m of stats:
                                             ‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                             ‚îÇ 1 ‚îÇ Show usual stats             ‚îÇ
                                             ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                             ‚îÇ 2 ‚îÇ Show frame timings (scroll)  ‚îÇ
                                             ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                             ‚îÇ 3 ‚îÇ Input cache stats            ‚îÇ
                                             ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                             ‚îÇ 4 ‚îÇ Active key bindings (scroll) ‚îÇ
                                             ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                             ‚îÇ 0 ‚îÇ Internal stuff (scroll)      ‚îÇ
                                             ‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       On pages which support scroll, these key bindings are also active:
                                               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                               ‚îÇ UP   ‚îÇ Scroll one line up   ‚îÇ
                                               ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                                               ‚îÇ DOWN ‚îÇ Scroll one line down ‚îÇ
                                               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

   [1mConfiguration[0m
       This  script  can  be  customized through a config file [1mscript-opts/stats.conf [22mplaced in mpv's user directory and
       through the [1m--script-opts [22mcommand-line option. The configuration syntax is described in [4mON[24m [4mSCREEN[24m [4mCONTROLLER[24m.

   [1mConfigurable Options[0m
       [1mkey_page_1[0m
              Default: 1

       [1mkey_page_2[0m
              Default: 2

       [1mkey_page_3[0m
              Default: 3

       [1mkey_page_4[0m
              Default: 4

       [1mkey_page_0[0m
              Default: 0

              Key bindings for page switching while stats are displayed.

       [1mkey_scroll_up[0m
              Default: UP

       [1mkey_scroll_down[0m
              Default: DOWN

       [1mscroll_lines[0m
              Default: 1

              Scroll key bindings and number of lines to scroll on pages which support it.

       [1mduration[0m
              Default: 4

              How long the stats are shown in seconds (oneshot).

       [1mredraw_delay[0m
              Default: 1

              How long it takes to refresh the displayed stats in seconds (toggling).

       [1mpersistent_overlay[0m
              Default: no

              When [4mno[24m, other scripts printing text to the screen can overwrite the displayed stats. When [4myes[24m,  displayed
              stats  are persistently shown for the respective duration. This can result in overlapping text when multi‚Äê
              ple scripts decide to print text at the same time.

       [1mplot_perfdata[0m
              Default: yes

              Show graphs for performance data (page 2).

       [1mplot_vsync_ratio[0m
              Default: yes

       [1mplot_vsync_jitter[0m
              Default: yes

              Show graphs for vsync and jitter values (page 1). Only when toggled.

       [1mplot_tonemapping_lut[0m
              Default: no

              Enable tone-mapping LUT visualization automatically. Only when toggled.

       [1mflush_graph_data[0m
              Default: yes

              Clear data buffers used for drawing graphs when toggling.

       [1mfont   [22mDefault: sans-serif

              Font name. Should support as many font weights as possible for optimal visual experience.

       [1mfont_mono[0m
              Default: monospace

              Font name for parts where monospaced characters are necessary to align text. Currently, monospaced  digits
              are sufficient.

       [1mfont_size[0m
              Default: 8

              Font size used to render text.

       [1mfont_color[0m
              Default: FFFFFF

              Font color.

       [1mborder_size[0m
              Default: 0.8

              Size of border drawn around the font.

       [1mborder_color[0m
              Default: 262626

              Color of drawn border.

       [1malpha  [22mDefault: 11

              Transparency for drawn text.

       [1mplot_bg_border_color[0m
              Default: 0000FF

              Border color used for drawing graphs.

       [1mplot_bg_color[0m
              Default: 262626

              Background color used for drawing graphs.

       [1mplot_color[0m
              Default: FFFFFF

              Color used for drawing graphs.

       Note: colors are given as hexadecimal values and use ASS tag order: BBGGRR (blue green red).

   [1mDifferent key bindings[0m
       Additional keys can be configured in [1minput.conf [22mto display the stats:

          e script-binding stats/display-stats
          E script-binding stats/display-stats-toggle

       And to display a certain page directly:

          i script-binding stats/display-page-1
          e script-binding stats/display-page-2

   [1mActive key bindings page[0m
       Lists  the  active  key  bindings  and the commands they're bound to, excluding the interactive keys of the stats
       script itself. See also [1m--input-test [22mfor more detailed view of each binding.

       The keys are grouped automatically using a simple analysis of the command string, and one should not expect docu‚Äê
       mentation-level grouping accuracy, however, it should still be reasonably useful.

       Using [1m--idle --script-opts=stats-bindlist=yes [22mwill print the list to the terminal and quit  immediately.  By  de‚Äê
       fault  long  lines are shortened to 79 chars, and terminal escape sequences are enabled. A different length limit
       can be set by changing [1myes [22mto a number (at least 40), and escape sequences can be disabled by adding [1m- [22mbefore the
       value, e.g. [1m...=-yes [22mor [1m...=-120[22m.

       Like with [1m--input-test[22m, the list includes bindings from [1minput.conf [22mand from user scripts. Use [1m--no-config [22mto list
       only built-in bindings.

   [1mInternal stuff page[0m
       Most entries shown on this page have rather vague meaning. Likely none of this is useful for you.  Don't  attempt
       to use it. Forget its existence.

       Selecting  this  for  the first time will start collecting some internal performance data. That means performance
       will be slightly lower than normal for the rest of the time the player is running (even  if  the  stats  page  is
       closed).   Note  that the stats page itself uses a lot of CPU and even GPU resources, and may have a heavy impact
       on performance.

       The displayed information is accumulated over the redraw delay (shown as [1mpoll-time [22mfield).

       This adds entries for each Lua script. If there are too many scripts running, parts of the list  will  simply  be
       out of the screen, but it can be scrolled.

       If  the underlying platform does not support pthread per thread times, the displayed times will be 0 or something
       random (I suspect that at time of this writing, only Linux provides the correct via pthread APIs for  per  thread
       times).

       Most  entries  are  added  lazily and only during data collection, which is why entries may pop up randomly after
       some time. It's also why the memory usage entries for scripts that have been inactive since  the  start  of  data
       collection are missing.

       Memory usage is approximate and does not reflect internal fragmentation.

       JS scripts memory reporting is disabled by default because collecting the data at the JS side has an overhead and
       will increase memory usage. It can be enabled by setting the [1m--js-memory-report [22moption before starting mpv.

       If  entries  have [1m/time [22mand [1m/cpu [22mvariants, the former gives the real time (monotonic clock), while the latter the
       thread CPU time (only if the corresponding pthread API works and is supported).

[1mCONSOLE[0m
       The console is a REPL for mpv input commands. It is displayed on the video window. It also shows log messages. It
       can be disabled entirely using the [1m--load-osd-console=no [22moption.

   [1mKeybindings[0m
       [1m`      [22mShow the console.

       [1mESC and Ctrl+[[0m
              Hide the console.

       [1mENTER, Ctrl+j and Ctrl+m[0m
              Run the typed command.

       [1mShift+ENTER[0m
              Type a literal newline character.

       [1mLEFT and Ctrl+b[0m
              Move the cursor to the previous character.

       [1mRIGHT and Ctrl+f[0m
              Move the cursor to the next character.

       [1mCtrl+LEFT and Alt+b[0m
              Move the cursor to the beginning of the current word, or if between words, to the beginning of the  previ‚Äê
              ous word.

       [1mCtrl+RIGHT and Alt+f[0m
              Move the cursor to the end of the current word, or if between words, to the end of the next word.

       [1mHOME and Ctrl+a[0m
              Move the cursor to the start of the current line.

       [1mEND and Ctrl+e[0m
              Move the cursor to the end of the current line.

       [1mBACKSPACE and Ctrl+h[0m
              Delete the previous character.

       [1mCtrl+d [22mHide the console if the current line is empty, otherwise delete the next character.

       [1mCtrl+BACKSPACE and Ctrl+w[0m
              Delete text from the cursor to the beginning of the current word, or if between words, to the beginning of
              the previous word.

       [1mCtrl+DEL and Alt+d[0m
              Delete  text  from  the cursor to the end of the current word, or if between words, to the end of the next
              word.

       [1mCtrl+u [22mDelete text from the cursor to the beginning of the current line.

       [1mCtrl+k [22mDelete text from the cursor to the end of the current line.

       [1mCtrl+c [22mClear the current line.

       [1mUP and Ctrl+p[0m
              Move back in the command history.

       [1mDOWN and Ctrl+n[0m
              Move forward in the command history.

       [1mPGUP   [22mGo to the first command in the history.

       [1mPGDN   [22mStop navigating the command history.

       [1mINSERT [22mToggle insert mode.

       [1mCtrl+v [22mPaste text (uses the clipboard on X11 and Wayland).

       [1mShift+INSERT[0m
              Paste text (uses the primary selection on X11 and Wayland).

       [1mTAB and Ctrl+i[0m
              Complete the command or property name at the cursor.

       [1mCtrl+l [22mClear all log messages from the console.

   [1mCommands[0m
       [1mscript-message-to console type <text> [<cursor_pos>][0m
              Show the console and pre-fill it with the provided text, optionally specifying the initial cursor position
              as a positive integer starting from 1.

                 Examples for input.conf

                 [1m% script-message-to console type "seek absolute-percent; keypress ESC" 6[0m
                        Enter a percent position to seek to and close the console.

                 [1mCtrl+o script-message-to console type "loadfile ''; keypress ESC" 11[0m
                        Enter a file or URL to play. Tab completes paths in the filesystem.

   [1mKnown issues[0m
       ‚Ä¢ Pasting text is slow on Windows

       ‚Ä¢ Non-ASCII keyboard input has restrictions

       ‚Ä¢ The cursor keys move between Unicode code-points, not grapheme clusters

   [1mConfiguration[0m
       This script can be customized through a config file [1mscript-opts/console.conf [22mplaced in mpv's user  directory  and
       through the [1m--script-opts [22mcommand-line option. The configuration syntax is described in [4mON[24m [4mSCREEN[24m [4mCONTROLLER[24m.

       Key bindings can be changed in a standard way, see for example stats.lua documentation.

   [1mConfigurable Options[0m
       [1mscale  [22mDefault: 1

              All drawing is scaled by this value, including the text borders and the cursor.

              If  the  VO  backend in use has HiDPI scale reporting implemented, the option value is scaled with the re‚Äê
              ported HiDPI scale.

       [1mfont   [22mDefault: unset (picks a hardcoded font depending on detected platform)

              Set the font used for the REPL and the console.  This has to be a monospaced font for the completion  sug‚Äê
              gestions to be aligned correctly.

       [1mfont_size[0m
              Default: 16

              Set the font size used for the REPL and the console. This will be multiplied by "scale".

       [1mborder_size[0m
              Default: 1

              Set the font border size used for the REPL and the console.

       [1mhistory_dedup[0m
              Default: true

              Remove duplicate entries in history as to only keep the latest one.  multiplied by "scale."

       [1mfont_hw_ratio[0m
              Default: 2.0

              The ratio of font height to font width.  Adjusts table width of completion suggestions.

[1mLUA SCRIPTING[0m
       mpv can load Lua scripts. (See [4mScript[24m [4mlocation[24m.)

       mpv  provides  the  built-in module [1mmp[22m, which contains functions to send commands to the mpv core and to retrieve
       information about playback state, user settings, file information, and so on.

       These scripts can be used to control mpv in a similar way to slave mode.  Technically,  the  Lua  code  uses  the
       client API internally.

   [1mExample[0m
       A script which leaves fullscreen mode when the player is paused:

          function on_pause_change(name, value)
              if value == true then
                  mp.set_property("fullscreen", "no")
              end
          end
          mp.observe_property("pause", "bool", on_pause_change)

   [1mScript location[0m
       Scripts  can  be passed to the [1m--script [22moption, and are automatically loaded from the [1mscripts [22msubdirectory of the
       mpv configuration directory (usually [1m~/.config/mpv/scripts/[22m).

       A script can be a single file. The file extension is used to select the scripting backend to use for it. For Lua,
       it is [1m.lua[22m. If the extension is not recognized, an error is printed. (If an error happens, the extension  is  ei‚Äê
       ther mistyped, or the backend was not compiled into your mpv binary.)

       mpv  internally loads the script's name by stripping the [1m.lua [22mextension and replacing all nonalphanumeric charac‚Äê
       ters with [1m_[22m. E.g., [1mmy-tools.lua [22mbecomes [1mmy_tools[22m. If there are several scripts with the same  name,  it  is  made
       unique by appending a number. This is the name returned by [1mmp.get_script_name()[22m.

       Entries with [1m.disable [22mextension are always ignored.

       If a script is a directory (either if a directory is passed to [1m--script[22m, or any sub-directories in the script di‚Äê
       rectory,  such  as  for example [1m~/.config/mpv/scripts/something/[22m), then the directory represents a single script.
       The player will try to load a file named [1mmain.x[22m, where [1mx [22mis replaced with the file  extension.  For  example,  if
       [1mmain.lua [22mexists, it is loaded with the Lua scripting backend.

       You  must  not put any other files or directories that start with [1mmain. [22minto the script's top level directory. If
       the script directory contains for example both [1mmain.lua [22mand [1mmain.js[22m, only one of them will be loaded  (and  which
       one  depends  on mpv internals that may change any time). Likewise, if there is for example [1mmain.foo[22m, your script
       will break as soon as mpv adds a backend that uses the [1m.foo [22mfile extension.

       mpv also appends the top level directory of the script to the start of Lua's  package  path  so  you  can  import
       scripts from there too. Be aware that this will shadow Lua libraries that use the same package path. (Single file
       scripts  do  not  include  mpv  specific  directories  in  the Lua package path. This was silently changed in mpv
       0.32.0.)

       Using a script directory is the recommended way to package a script that consists of multiple  source  files,  or
       requires other files (you can use [1mmp.get_script_directory() [22mto get the location and e.g. load data files).

       Making  a  script  a git repository, basically a repository which contains a [1mmain.lua [22mfile in the root directory,
       makes scripts easily updateable (without the dangers of auto-updates). Another suggestion is to use  git  submod‚Äê
       ules to share common files or libraries.

   [1mDetails on the script initialization and lifecycle[0m
       Your  script will be loaded by the player at program start from the [1mscripts [22mconfiguration subdirectory, or from a
       path specified with the [1m--script [22moption. Some scripts are loaded internally (like [1m--osc[22m). Each script runs in its
       own thread. Your script is first run "as is", and once that is done, the event loop is entered. This  event  loop
       will  dispatch  events  received by mpv and call your own event handlers which you have registered with [1mmp.regis‚Äê[0m
       [1mter_event[22m, or timers added with [1mmp.add_timeout [22mor similar. Note that since the script  starts  execution  concur‚Äê
       rently with player initialization, some properties may not be populated with meaningful values until the relevant
       subsystems have initialized.

       When  the  player  quits, all scripts will be asked to terminate. This happens via a [1mshutdown [22mevent, which by de‚Äê
       fault will make the event loop return. If your script got into an endless loop, mpv  will  probably  behave  fine
       during playback, but it won't terminate when quitting, because it's waiting on your script.

       Internally, the C code will call the Lua function [1mmp_event_loop [22mafter loading a Lua script. This function is nor‚Äê
       mally  defined by the default prelude loaded before your script (see [1mplayer/lua/defaults.lua [22min the mpv sources).
       The event loop will wait for events and dispatch events registered with [1mmp.register_event[22m. It  will  also  handle
       timers added with [1mmp.add_timeout [22mand similar (by waiting with a timeout).

       Since  mpv  0.6.0,  the player will wait until the script is fully loaded before continuing normal operation. The
       player considers a script as fully loaded as soon as it starts waiting for mpv events (or it exits). In  practice
       this  means  the player will more or less hang until the script returns from the main chunk (and [1mmp_event_loop [22mis
       called), or the script calls [1mmp_event_loop [22mor [1mmp.dispatch_events [22mdirectly. This is done to make it possible for a
       script to fully setup event handlers etc. before playback actually starts. In older mpv versions,  this  happened
       asynchronously. With mpv 0.29.0, this changes slightly, and it merely waits for scripts to be loaded in this man‚Äê
       ner  before  starting  playback  as part of the player initialization phase. Scripts run though initialization in
       parallel. This might change again.

   [1mmp functions[0m
       The [1mmp [22mmodule is preloaded, although it can be loaded manually with [1mrequire 'mp'[22m. It  provides  the  core  client
       API.

       [1mmp.command(string)[0m
              Run the given command. This is similar to the commands used in input.conf.  See [4mList[24m [4mof[24m [4mInput[24m [4mCommands[24m.

              By  default,  this  will  show  something  on the OSD (depending on the command), as if it was used in [1min‚Äê[0m
              [1mput.conf[22m. See [4mInput[24m [4mCommand[24m [4mPrefixes[24m how to influence OSD usage per command.

              Returns [1mtrue [22mon success, or [1mnil, error [22mon error.

       [1mmp.commandv(arg1, arg2, ...)[0m
              Similar to [1mmp.command[22m, but pass each command argument as separate parameter. This has the  advantage  that
              you don't have to care about quoting and escaping in some cases.

              Example:

                 mp.command("loadfile " .. filename .. " append")
                 mp.commandv("loadfile", filename, "append")

              These two commands are equivalent, except that the first version breaks if the filename contains spaces or
              certain special characters.

              Note  that  properties  are [4mnot[24m expanded.  You can use either [1mmp.command[22m, the [1mexpand-properties [22mprefix, or
              the [1mmp.get_property [22mfamily of functions.

              Unlike [1mmp.command[22m, this will not use OSD by default either (except for some OSD-specific commands).

       [1mmp.command_native(table [,def])[0m
              Similar to [1mmp.commandv[22m, but pass the argument list as table. This has the advantage that in at least  some
              cases, arguments can be passed as native types. It also allows you to use named argument.

              If  the  table is an array, each array item is like an argument in [1mmp.commandv() [22m(but can be a native type
              instead of a string).

              If the table contains string keys, it's interpreted as command with  named  arguments.  This  requires  at
              least an entry with the key [1mname [22mto be present, which must be a string, and contains the command name. The
              special entry [1m_flags [22mis optional, and if present, must be an array of [4mInput[24m [4mCommand[24m [4mPrefixes[24m to apply. All
              other entries are interpreted as arguments.

              Returns  a  result  table  on success (usually empty), or [1mdef, error [22mon error. [1mdef [22mis the second parameter
              provided to the function, and is nil if it's missing.

       [1mmp.command_native_async(table [,fn])[0m
              Like [1mmp.command_native()[22m, but the command is ran asynchronously (as far as possible), and upon completion,
              fn is called. fn has three arguments: [1mfn(success, result, error)[22m:

                     [1msuccess[0m
                            Always a Boolean and is true if the command was successful, otherwise false.

                 [1mresult [22mThe result value (can be nil) in case of success, nil otherwise (as returned  by  [1mmp.command_na‚Äê[0m
                        [1mtive()[22m).

                 [1merror  [22mThe error string in case of an error, nil otherwise.

              Returns a table with undefined contents, which can be used as argument for [1mmp.abort_async_command[22m.

              If  starting the command failed for some reason, [1mnil, error [22mis returned, and [1mfn [22mis called indicating fail‚Äê
              ure, using the same error value.

              [1mfn [22mis always called asynchronously, even if the command failed to start.

       [1mmp.abort_async_command(t)[0m
              Abort a [1mmp.command_native_async [22mcall. The argument is the return value of that command (which starts asyn‚Äê
              chronous execution of the command).  Whether this works and how long it takes depends on the  command  and
              the situation. The abort call itself is asynchronous. Does not return anything.

       [1mmp.del_property(name)[0m
              Delete  the given property. See [1mmp.get_property [22mand [4mProperties[24m for more information about properties. Most
              properties cannot be deleted.

              Returns true on success, or [1mnil, error [22mon error.

       [1mmp.get_property(name [,def])[0m
              Return the value of the given property as string. These are the same properties as used in input.conf. See
              [4mProperties[24m for a list of properties. The returned string is formatted similar to  [1m${=name}  [22m(see  [4mProperty[0m
              [4mExpansion[24m).

              Returns  the  string on success, or [1mdef, error [22mon error. [1mdef [22mis the second parameter provided to the func‚Äê
              tion, and is nil if it's missing.

       [1mmp.get_property_osd(name [,def])[0m
              Similar to [1mmp.get_property[22m, but return the property value formatted for OSD. This is the  same  string  as
              printed with [1m${name} [22mwhen used in input.conf.

              Returns  the  string on success, or [1mdef, error [22mon error. [1mdef [22mis the second parameter provided to the func‚Äê
              tion, and is an empty string if it's missing. Unlike [1mget_property()[22m, assigning the return value to a vari‚Äê
              able will always result in a string.

       [1mmp.get_property_bool(name [,def])[0m
              Similar to [1mmp.get_property[22m, but return the property value as Boolean.

              Returns a Boolean on success, or [1mdef, error [22mon error.

       [1mmp.get_property_number(name [,def])[0m
              Similar to [1mmp.get_property[22m, but return the property value as number.

              Note that while Lua does not distinguish between integers and floats, mpv internals do. This function sim‚Äê
              ply request a double float from mpv, and mpv will usually convert integer property values to float.

              Returns a number on success, or [1mdef, error [22mon error.

       [1mmp.get_property_native(name [,def])[0m
              Similar to [1mmp.get_property[22m, but return the property value using the best Lua type for the  property.  Most
              time,  this  will  return a string, Boolean, or number. Some properties (for example [1mchapter-list[22m) are re‚Äê
              turned as tables.

              Returns a value on success, or [1mdef, error [22mon error. Note that [1mnil [22mmight be a possible, valid value too  in
              some corner cases.

       [1mmp.set_property(name, value)[0m
              Set  the given property to the given string value. See [1mmp.get_property [22mand [4mProperties[24m for more information
              about properties.

              Returns true on success, or [1mnil, error [22mon error.

       [1mmp.set_property_bool(name, value)[0m
              Similar to [1mmp.set_property[22m, but set the given property to the given Boolean value.

       [1mmp.set_property_number(name, value)[0m
              Similar to [1mmp.set_property[22m, but set the given property to the given numeric value.

              Note that while Lua does not distinguish between integers and floats, mpv internals do. This function will
              test whether the number can be represented as integer, and if so, it will pass an integer  value  to  mpv,
              otherwise a double float.

       [1mmp.set_property_native(name, value)[0m
              Similar to [1mmp.set_property[22m, but set the given property using its native type.

              Since there are several data types which cannot represented natively in Lua, this might not always work as
              expected. For example, while the Lua wrapper can do some guesswork to decide whether a Lua table is an ar‚Äê
              ray  or  a  map, this would fail with empty tables. Also, there are not many properties for which it makes
              sense to use this, instead of [1mset_property[22m, [1mset_property_bool[22m, [1mset_property_number[22m.   For  these  reasons,
              this function should probably be avoided for now, except for properties that use tables natively.

       [1mmp.get_time()[0m
              Return  the  current  mpv internal time in seconds as a number. This is basically the system time, with an
              arbitrary offset.

       [1mmp.add_key_binding(key, name|fn [,fn [,flags]])[0m
              Register callback to be run on a key binding. The binding will be mapped to the  given  [1mkey[22m,  which  is  a
              string  describing the physical key. This uses the same key names as in input.conf, and also allows combi‚Äê
              nations (e.g. [1mctrl+a[22m). If the key is empty or [1mnil[22m, no physical key is registered, but the user  still  can
              create own bindings (see below).

              After calling this function, key presses will cause the function [1mfn [22mto be called (unless the user remapped
              the key with another binding).

              The  [1mname  [22margument should be a short symbolic string. It allows the user to remap the key binding via in‚Äê
              put.conf using the [1mscript-message [22mcommand, and the name of the key binding (see below for an example). The
              name should be unique across other bindings in the same script - if not, the  previous  binding  with  the
              same name will be overwritten. You can omit the name, in which case a random name is generated internally.
              (Omitting  works  as  follows: either pass [1mnil [22mfor [1mname[22m, or pass the [1mfn [22margument in place of the name. The
              latter is not recommended and is handled for compatibility only.)

              The last argument is used for optional flags. This is a table, which can have the following entries:

                 [1mrepeatable[0m
                        If set to [1mtrue[22m, enables key repeat for this specific binding.

                 [1mcomplex[0m
                        If set to [1mtrue[22m, then [1mfn [22mis called on both key up and down events (as well as key repeat, if  en‚Äê
                        abled),  with  the  first  argument being a table. This table has the following entries (and may
                        contain undocumented ones):

                            [1mevent  [22mSet to one of the strings [1mdown[22m, [1mrepeat[22m, [1mup [22mor [1mpress [22m(the latter if key up/down  can't
                                   be tracked).

                            [1mis_mouse[0m
                                   Boolean Whether the event was caused by a mouse button.

                            [1mkey_name[0m
                                   The  name of they key that triggered this, or [1mnil [22mif invoked artificially. If the key
                                   name is unknown, it's an empty string.

                            [1mkey_text[0m
                                   Text if triggered by a text key, otherwise [1mnil[22m.  See  description  of  [1mscript-binding[0m
                                   command for details (this field is equivalent to the 5th argument).

              Internally,  key  bindings  are  dispatched via the [1mscript-message-to [22mor [1mscript-binding [22minput commands and
              [1mmp.register_script_message[22m.

              Trying to map multiple commands to a key will essentially prefer a random binding, while the  other  bind‚Äê
              ings  are  not called. It is guaranteed that user defined bindings in the central input.conf are preferred
              over bindings added with this function (but see [1mmp.add_forced_key_binding[22m).

              Example:

                 function something_handler()
                     print("the key was pressed")
                 end
                 mp.add_key_binding("x", "something", something_handler)

              This will print the message [1mthe key was pressed [22mwhen [1mx [22mwas pressed.

              The user can remap these key bindings. Then the user has to put the following  into  their  input.conf  to
              remap the command to the [1my [22mkey:

                 y script-binding something

              This will print the message when the key [1my [22mis pressed. ([1mx [22mwill still work, unless the user remaps it.)

              You can also explicitly send a message to a named script only. Assume the above script was using the file‚Äê
              name [1mfooscript.lua[22m:

                 y script-binding fooscript/something

       [1mmp.add_forced_key_binding(...)[0m
              This  works  almost the same as [1mmp.add_key_binding[22m, but registers the key binding in a way that will over‚Äê
              write the user's custom bindings in their input.conf. ([1mmp.add_key_binding [22moverwrites default key  bindings
              only, but not those by the user's input.conf.)

       [1mmp.remove_key_binding(name)[0m
              Remove  a key binding added with [1mmp.add_key_binding [22mor [1mmp.add_forced_key_binding[22m. Use the same name as you
              used when adding the bindings. It's not possible to remove bindings for which you omitted the name.

       [1mmp.register_event(name, fn)[0m
              Call a specific function when an event happens. The event name is a string, and the function fn is  a  Lua
              function value.

              Some events have associated data. This is put into a Lua table and passed as argument to fn. The Lua table
              by  default  contains a [1mname [22mfield, which is a string containing the event name. If the event has an error
              associated, the [1merror [22mfield is set to a string describing the error, on success it's not set.

              If multiple functions are registered for the same event, they are run in  registration  order,  which  the
              first registered function running before all the other ones.

              Returns true if such an event exists, false otherwise.

              See [4mEvents[24m and [4mList[24m [4mof[24m [4mevents[24m for details.

       [1mmp.unregister_event(fn)[0m
              Undo  [1mmp.register_event(..., fn)[22m. This removes all event handlers that are equal to the [1mfn [22mparameter. This
              uses normal Lua [1m== [22mcomparison, so be careful when dealing with closures.

       [1mmp.observe_property(name, type, fn)[0m
              Watch a property for changes. If the property [1mname [22mis changed, then the function [1mfn(name) [22mwill be  called.
              [1mtype  [22mcan be [1mnil[22m, or be set to one of [1mnone[22m, [1mnative[22m, [1mbool[22m, [1mstring[22m, or [1mnumber[22m.  [1mnone [22mis the same as [1mnil[22m. For
              all other values, the new value  of  the  property  will  be  passed  as  second  argument  to  [1mfn[22m,  using
              [1mmp.get_property_<type>  [22mto  retrieve it. This means if [1mtype [22mis for example [1mstring[22m, [1mfn [22mis roughly called as
              in [1mfn(name, mp.get_property_string(name))[22m.

              If possible, change events are coalesced. If a property is changed a bunch of times in  a  row,  only  the
              last change triggers the change function. (The exact behavior depends on timing and other things.)

              If  a  property is unavailable, or on error, the value argument to [1mfn [22mis [1mnil[22m. (The [1mobserve_property() [22mcall
              always succeeds, even if a property does not exist.)

              In some cases the function is not called even if the property changes.  This depends on the property,  and
              it's a valid feature request to ask for better update handling of a specific property.

              If  the  [1mtype [22mis [1mnone [22mor [1mnil[22m, sporadic property change events are possible. This means the change function
              [1mfn [22mcan be called even if the property doesn't actually change.

              You always get an initial change notification. This is meant to initialize the user's state to the current
              value of the property.

       [1mmp.unobserve_property(fn)[0m
              Undo [1mmp.observe_property(..., fn)[22m. This removes all property handlers that are equal to the [1mfn  [22mparameter.
              This uses normal Lua [1m== [22mcomparison, so be careful when dealing with closures.

       [1mmp.add_timeout(seconds, fn [, disabled])[0m
              Call  the given function fn when the given number of seconds has elapsed.  Note that the number of seconds
              can be fractional. For now, the timer's resolution may be as low as 50 ms, although this will be  improved
              in the future.

              If the [1mdisabled [22margument is set to [1mtrue [22mor a truthy value, the timer will wait to be manually started with
              a call to its [1mresume() [22mmethod.

              This is a one-shot timer: it will be removed when it's fired.

              Returns a timer object. See [1mmp.add_periodic_timer [22mfor details.

       [1mmp.add_periodic_timer(seconds, fn [, disabled])[0m
              Call  the  given  function  periodically. This is like [1mmp.add_timeout[22m, but the timer is re-added after the
              function fn is run.

              [1mReturns a timer object. The timer object provides the following methods:[0m

                     [1mstop() [22mDisable the timer. Does nothing if the timer is already disabled.  This  will  remember  the
                            current elapsed time when stopping, so that [1mresume() [22messentially unpauses the timer.

                     [1mkill() [22mDisable the timer. Resets the elapsed time. [1mresume() [22mwill restart the timer.

                     [1mresume()[0m
                            Restart  the  timer.  If the timer was disabled with [1mstop()[22m, this will resume at the time it
                            was stopped. If the timer was disabled with [1mkill()[22m, or if it's a previously  fired  one-shot
                            timer  (added  with [1madd_timeout()[22m), this starts the timer from the beginning, using the ini‚Äê
                            tially configured timeout.

                     [1mis_enabled()[0m
                            Whether the timer is currently enabled  or  was  previously  disabled  (e.g.  by  [1mstop()  [22mor
                            [1mkill()[22m).

                     [1mtimeout (RW)[0m
                            This  field  contains  the  current  timeout  period. This value is not updated as time pro‚Äê
                            gresses. It's only used to calculate when the timer should fire next when the timer expires.

                            If you write this, you can call [1mt:kill() ; t:resume() [22mto reset the current  timeout  to  the
                            new one. ([1mt:stop() [22mwon't use the new timeout.)

                     [1moneshot (RW)[0m
                            Whether the timer is periodic ([1mfalse[22m) or fires just once ([1mtrue[22m). This value is used when the
                            timer expires (but before the timer callback function fn is run).

              Note   that   these   are   methods,  and  you  have  to  call  them  using  [1m:  [22minstead  of  [1m.  [22m(Refer  to
              [4mhttps://www.lua.org/manual/5.2/manual.html#3.4.9[24m .)

              Example:

                 seconds = 0
                 timer = mp.add_periodic_timer(1, function()
                     print("called every second")
                     # stop it after 10 seconds
                     seconds = seconds + 1
                     if seconds >= 10 then
                         timer:kill()
                     end
                 end)

       [1mmp.get_opt(key)[0m
              Return a setting from the [1m--script-opts [22moption. It's up to the user and the script how this  mechanism  is
              used. Currently, all scripts can access this equally, so you should be careful about collisions.

       [1mmp.get_script_name()[0m
              Return the name of the current script. The name is usually made of the filename of the script, with direc‚Äê
              tory  and  file  extension removed. If there are several scripts which would have the same name, it's made
              unique by appending a number. Any nonalphanumeric characters are replaced with [1m_[22m.

                 Example

                        The script [1m/path/to/foo-script.lua [22mbecomes [1mfoo_script[22m.

       [1mmp.get_script_directory()[0m
              Return the directory if this is a script packaged as directory (see [4mScript[24m [4mlocation[24m  for  a  description).
              Return nothing if this is a single file script.

       [1mmp.osd_message(text [,duration])[0m
              Show  an  OSD  message  on the screen. [1mduration [22mis in seconds, and is optional (uses [1m--osd-duration [22mby de‚Äê
              fault).

   [1mAdvanced mp functions[0m
       These also live in the [1mmp [22mmodule, but are documented separately as they are useful only in special situations.

       [1mmp.get_wakeup_pipe()[0m
              Calls [1mmpv_get_wakeup_pipe() [22mand returns the read end of the wakeup pipe. This  is  deprecated,  but  still
              works. (See [1mclient.h [22mfor details.)

       [1mmp.get_next_timeout()[0m
              Return  the relative time in seconds when the next timer ([1mmp.add_timeout [22mand similar) expires. If there is
              no timer, return [1mnil[22m.

       [1mmp.dispatch_events([allow_wait])[0m
              This can be used to run custom event loops. If you want to have direct control what the  Lua  script  does
              (instead of being called by the default event loop), you can set the global variable [1mmp_event_loop [22mto your
              own function running the event loop. From your event loop, you should call [1mmp.dispatch_events() [22mto dequeue
              and dispatch mpv events.

              If  the  [1mallow_wait  [22mparameter is set to [1mtrue[22m, the function will block until the next event is received or
              the next timer expires. Otherwise (and this is the default behavior), it returns as soon as the event loop
              is emptied. It's strongly recommended to use [1mmp.get_next_timeout() [22mand [1mmp.get_wakeup_pipe() [22mif you're  in‚Äê
              terested in properly working notification of new events and working timers.

       [1mmp.register_idle(fn)[0m
              Register  an  event loop idle handler. Idle handlers are called before the script goes to sleep after han‚Äê
              dling all new events. This can be used for example to delay  processing  of  property  change  events:  if
              you're  observing multiple properties at once, you might not want to act on each property change, but only
              when all change notifications have been received.

       [1mmp.unregister_idle(fn)[0m
              Undo [1mmp.register_idle(fn)[22m. This removes all idle handlers that are equal to the [1mfn  [22mparameter.  This  uses
              normal Lua [1m== [22mcomparison, so be careful when dealing with closures.

       [1mmp.enable_messages(level)[0m
              Set  the  minimum log level of which mpv message output to receive. These messages are normally printed to
              the terminal. By calling this function, you can set the minimum log level of messages which should be  re‚Äê
              ceived  with the [1mlog-message [22mevent. See the description of this event for details.  The level is a string,
              see [1mmsg.log [22mfor allowed log levels.

       [1mmp.register_script_message(name, fn)[0m
              This is a helper to dispatch [1mscript-message [22mor [1mscript-message-to  [22minvocations  to  Lua  functions.  [1mfn  [22mis
              called  if [1mscript-message [22mor [1mscript-message-to [22m(with this script as destination) is run with [1mname [22mas first
              parameter. The other parameters are passed to [1mfn[22m.  If a message with the given name is already registered,
              it's overwritten.

              Used by [1mmp.add_key_binding[22m, so be careful about name collisions.

       [1mmp.unregister_script_message(name)[0m
              Undo a previous registration with [1mmp.register_script_message[22m. Does nothing if the [1mname [22mwasn't registered.

       [1mmp.create_osd_overlay(format)[0m
              Create an OSD overlay. This is a very thin wrapper around the [1mosd-overlay [22mcommand. The function returns  a
              table,  which  mostly  contains fields that will be passed to [1mosd-overlay[22m. The [1mformat [22mparameter is used to
              initialize the [1mformat [22mfield. The [1mdata [22mfield contains the text to be used as overlay. For details, see  the
              [1mosd-overlay [22mcommand.

              In addition, it provides the following methods:

              [1mupdate()[0m
                     Commit  the OSD overlay to the screen, or in other words, run the [1mosd-overlay [22mcommand with the cur‚Äê
                     rent fields of the overlay table.  Returns the result of the [1mosd-overlay [22mcommand itself.

              [1mremove()[0m
                     Remove the overlay from the screen. A [1mupdate() [22mcall will add it again.

              Example:

                 ov = mp.create_osd_overlay("ass-events")
                 ov.data = "{\\an5}{\\b1}hello world!"
                 ov:update()

              The advantage of using this wrapper (as opposed to running [1mosd-overlay [22mdirectly) is that the [1mid  [22mfield  is
              allocated automatically.

       [1mmp.get_osd_size()[0m
              Returns  a  tuple of [1mosd_width, osd_height, osd_par[22m. The first two give the size of the OSD in pixels (for
              video outputs like [1m--vo=xv[22m, this may be "scaled" pixels). The third is the display pixel aspect ratio.

              May return invalid/nonsense values if OSD is not initialized yet.

   [1mmp.msg functions[0m
       This module allows outputting messages to the terminal, and can be loaded with [1mrequire 'mp.msg'[22m.

       [1mmsg.log(level, ...)[0m
              The level parameter is the message priority. It's a string and one of [1mfatal[22m, [1merror[22m, [1mwarn[22m, [1minfo[22m, [1mv[22m,  [1mdebug[22m,
              [1mtrace[22m.  The user's settings will determine which of these messages will be visible. Normally, all messages
              are visible, except [1mv[22m, [1mdebug [22mand [1mtrace[22m.

              The parameters after that are all converted to strings. Spaces are inserted to separate  multiple  parame‚Äê
              ters.

              You don't need to add newlines.

       [1mmsg.fatal(...), msg.error(...), msg.warn(...), msg.info(...), msg.verbose(...), msg.debug(...), msg.trace(...)[0m
              All of these are shortcuts and equivalent to the corresponding [1mmsg.log(level, ...) [22mcall.

   [1mmp.options functions[0m
       mpv  comes with a built-in module to manage options from config-files and the command-line. All you have to do is
       to supply a table with default options to the read_options function. The function will overwrite the default val‚Äê
       ues with values found in the config-file and the command-line (in that order).

       [1moptions.read_options(table [, identifier [, on_update]])[0m
              A [1mtable [22mwith key-value pairs. The type of the default values is important for converting the  values  read
              from the config file or command-line back. Do not use [1mnil [22mas a default value!

              The  [1midentifier [22mis used to identify the config-file and the command-line options. These needs to unique to
              avoid collisions with other scripts.  Defaults to [1mmp.get_script_name() [22mif the parameter is [1mnil [22mor missing.

              The [1mon_update [22mparameter enables run-time updates of all matching option values  via  the  [1mscript-opts  [22mop‚Äê
              tion/property.  If  any  of  the  matching  options changes, the values in the [1mtable [22m(which was originally
              passed to the function) are changed, and [1mon_update(list) [22mis called. [1mlist [22mis a table where each updated op‚Äê
              tion has a [1mlist[option_name] = true [22mentry.  There is no initial [1mon_update() [22mcall. This never re-reads  the
              config  file.   [1mscript-opts  [22mis  always applied on the original config file, ignoring previous [1mscript-opts[0m
              values (for example, if an option is removed from [1mscript-opts [22mat runtime, the option will have  the  value
              in  the  config  file).  [1mtable  [22mentries are only written for option values whose values effectively change
              (this is important if the script changes [1mtable [22mentries independently).

       Example implementation:

          local options = {
              optionA = "defaultvalueA",
              optionB = -0.5,
              optionC = true,
          }

          require "mp.options".read_options(options, "myscript")
          print(options.optionA)

       The config file will be stored in [1mscript-opts/identifier.conf [22min mpv's user folder. Comment lines can be  started
       with # and stray spaces are not removed.  Boolean values will be represented with yes/no.

       Example config:

          # comment
          optionA=Hello World
          optionB=9999
          optionC=no

       Command-line options are read from the [1m--script-opts [22mparameter. To avoid collisions, all keys have to be prefixed
       with [1midentifier-[22m.

       Example command-line:

          --script-opts=myscript-optionA=TEST,myscript-optionB=0,myscript-optionC=yes

   [1mmp.utils functions[0m
       This built-in module provides generic helper functions for Lua, and have strictly speaking nothing to do with mpv
       or video/audio playback. They are provided for convenience. Most compensate for Lua's scarce standard library.

       Be warned that any of these functions might disappear any time. They are not strictly part of the guaranteed API.

       [1mutils.getcwd()[0m
              Returns the directory that mpv was launched from. On error, [1mnil, error [22mis returned.

       [1mutils.readdir(path [, filter])[0m
              Enumerate  all  entries at the given path on the filesystem, and return them as array. Each entry is a di‚Äê
              rectory entry (without the path).  The list is unsorted (in whatever order the  operating  system  returns
              it).

              If the [1mfilter [22margument is given, it must be one of the following strings:

                 [1mfiles  [22mList regular files only. This excludes directories, special files (like UNIX device files or FI‚Äê
                        FOs), and dead symlinks. It includes UNIX symlinks to regular files.

                 [1mdirs   [22mList directories only, or symlinks to directories. [1m. [22mand [1m..  [22mare not included.

                 [1mnormal [22mInclude the results of both [1mfiles [22mand [1mdirs[22m. (This is the default.)

                 [1mall    [22mList all entries, even device files, dead symlinks, FIFOs, and the [1m. [22mand [1m.. [22mentries.

              On error, [1mnil, error [22mis returned.

       [1mutils.file_info(path)[0m
              Stats the given path for information and returns a table with the following entries:

                 [1mmode   [22mprotection bits (on Windows, always 755 (octal) for directories and 644 (octal) for files)

                 [1msize   [22msize in bytes

                 [1matime  [22mtime of last access

                 [1mmtime  [22mtime of last modification

                 [1mctime  [22mtime of last metadata change

                 [1mis_file[0m
                        Whether [1mpath [22mis a regular file (boolean)

                 [1mis_dir [22mWhether [1mpath [22mis a directory (boolean)

              [1mmode  [22mand [1msize [22mare integers.  Timestamps ([1matime[22m, [1mmtime [22mand [1mctime[22m) are integer seconds since the Unix epoch
              (Unix time).  The booleans [1mis_file [22mand [1mis_dir [22mare provided as a convenience; they can be and  are  derived
              from [1mmode[22m.

              On error (e.g. path does not exist), [1mnil, error [22mis returned.

       [1mutils.split_path(path)[0m
              Split  a  path into directory component and filename component, and return them. The first return value is
              always the directory. The second return value is the trailing part of the path, the directory entry.

       [1mutils.join_path(p1, p2)[0m
              Return the concatenation of the 2 paths. Tries to be clever. For example, if [1mp2 [22mis an absolute path, [1mp2 [22mis
              returned without change.

       [1mutils.subprocess(t)[0m
              Runs an external process and waits until it exits. Returns process status and the captured output. This is
              a legacy wrapper around calling the [1msubprocess [22mcommand  with  [1mmp.command_native[22m.  It  does  the  following
              things:

              ‚Ä¢ copy the table [1mt[0m

              ‚Ä¢ rename [1mcancellable [22mfield to [1mplayback_only[0m

              ‚Ä¢ rename [1mmax_size [22mto [1mcapture_size[0m

              ‚Ä¢ set [1mcapture_stdout [22mfield to [1mtrue [22mif unset

              ‚Ä¢ set [1mname [22mfield to [1msubprocess[0m

              ‚Ä¢ call [1mmp.command_native(copied_t)[0m

              ‚Ä¢ if the command failed, create a dummy result table

              ‚Ä¢ copy [1merror_string [22mto [1merror [22mfield if the string is non-empty

              ‚Ä¢ return the result table

              It  is  recommended  to use [1mmp.command_native [22mor [1mmp.command_native_async [22mdirectly, instead of calling this
              legacy wrapper. It is for compatibility only.

              See the [1msubprocess [22mdocumentation for semantics and further parameters.

       [1mutils.subprocess_detached(t)[0m
              Runs an external process and detaches it from mpv's control.

              The parameter [1mt [22mis a table. The function reads the following entries:

                 [1margs   [22mArray of strings of the same semantics as the [1margs [22mused in the [1msubprocess [22mfunction.

              The function returns [1mnil[22m.

              This is a legacy wrapper around calling the [1mrun [22mcommand with [1mmp.commandv [22mand other functions.

       [1mutils.getpid()[0m
              Returns the process ID of the running mpv process. This can be used  to  identify  the  calling  mpv  when
              launching (detached) subprocesses.

       [1mutils.get_env_list()[0m
              Returns  the C environment as a list of strings. (Do not confuse this with the Lua "environment", which is
              an unrelated concept.)

       [1mutils.parse_json(str [, trail])[0m
              Parses the given string argument as JSON, and returns it as a Lua table. On  error,  returns  [1mnil,  error[22m.
              (Currently,  [1merror [22mis just a string reading [1merror[22m, because there is no fine-grained error reporting of any
              kind.)

              The returned value uses similar conventions as [1mmp.get_property_native() [22mto distinguish empty  objects  and
              arrays.

              If  the  [1mtrail [22mparameter is [1mtrue [22m(or any value equal to [1mtrue[22m), then trailing non-whitespace text is toler‚Äê
              ated by the function, and the trailing text is returned as 3rd return value. (The 3rd return value is  al‚Äê
              ways there, but with [1mtrail [22mset, no error is raised.)

       [1mutils.format_json(v)[0m
              Format  the  given Lua table (or value) as a JSON string and return it. On error, returns [1mnil, error[22m. (Er‚Äê
              rors usually only happen on value types incompatible with JSON.)

              The argument value uses similar conventions as [1mmp.set_property_native() [22mto distinguish empty  objects  and
              arrays.

       [1mutils.to_string(v)[0m
              Turn  the  given value into a string. Formats tables and their contents. This doesn't do anything special;
              it is only needed because Lua is terrible.

   [1mEvents[0m
       Events are notifications from player core to scripts. You can register an event handler with [1mmp.register_event[22m.

       Note that all scripts (and other parts of the player) receive events equally, and there's no such thing as block‚Äê
       ing other scripts from receiving events.

       Example:

          function my_fn(event)
              print("start of playback!")
          end

          mp.register_event("file-loaded", my_fn)

       For the existing event types, see [4mList[24m [4mof[24m [4mevents[24m.

   [1mExtras[0m
       This documents experimental features, or features that are "too special" to guarantee a stable interface.

       [1mmp.add_hook(type, priority, fn)[0m
              Add a hook callback for [1mtype [22m(a string identifying a certain kind of hook). These hooks allow  the  player
              to  call script functions and wait for their result (normally, the Lua scripting interface is asynchronous
              from the point of view of the player core). [1mpriority [22mis an arbitrary integer that  allows  ordering  among
              hooks of the same kind. Using the value 50 is recommended as neutral default value.

              [1mfn(hook)  [22mis  the  function  that  will be called during execution of the hook. The parameter passed to it
              ([1mhook[22m) is a Lua object that can control further aspects about the currently invoked hook. It provides  the
              following methods:

                 [1mdefer()[0m
                        Returning  from  the  hook function should not automatically continue the hook. Instead, the API
                        user wants to call [1mhook:cont() [22mon its own at a later point in time (before or after the function
                        has returned).

                 [1mcont() [22mContinue the hook. Doesn't need to be called unless [1mdefer() [22mwas called.

              See [4mHooks[24m for currently existing hooks and what they do - only the hook list is interesting; handling hook
              execution is done by the Lua script function automatically.

[1mJAVASCRIPT[0m
       JavaScript support in mpv is near identical to its Lua support. Use this section as reference on differences  and
       availability of APIs, but otherwise you should refer to the Lua documentation for API details and general script‚Äê
       ing in mpv.

   [1mExample[0m
       JavaScript code which leaves fullscreen mode when the player is paused:

          function on_pause_change(name, value) {
              if (value == true)
                  mp.set_property("fullscreen", "no");
          }
          mp.observe_property("pause", "bool", on_pause_change);

   [1mSimilarities with Lua[0m
       mpv  tries  to  load a script file as JavaScript if it has a [1m.js [22mextension, but otherwise, the documented Lua op‚Äê
       tions, script directories, loading, etc apply to JavaScript files too.

       Script initialization and lifecycle is the same as with Lua, and most of the Lua functions  at  the  modules  [1mmp[22m,
       [1mmp.utils[22m,  [1mmp.msg  [22mand  [1mmp.options  [22mare available to JavaScript with identical APIs - including running commands,
       getting/setting properties, registering events/key-bindings/hooks, etc.

   [1mDifferences from Lua[0m
       No need to load modules. [1mmp[22m, [1mmp.utils[22m,  [1mmp.msg [22mand [1mmp.options [22mare preloaded, and you  can  use  e.g.  [1mvar  cwd  =[0m
       [1mmp.utils.getcwd(); [22mwithout prior setup.

       Errors  are  slightly  different.  Where the Lua APIs return [1mnil [22mfor error, the JavaScript ones return [1mundefined[22m.
       Where Lua returns [1msomething, error [22mJavaScript returns only [1msomething [22m- and makes [1merror [22mavailable via  [1mmp.last_er‚Äê[0m
       [1mror()[22m. Note that only some of the functions have this additional [1merror [22mvalue - typically the same ones which have
       it in Lua.

       Standard  APIs  are  preferred.  For instance [1msetTimeout [22mand [1mJSON.stringify [22mare available, but [1mmp.add_timeout [22mand
       [1mmp.utils.format_json [22mare not.

       No standard library. This means that interaction with anything outside of mpv is limited to the  available  APIs,
       typically  via  [1mmp.utils[22m.  However, some file functions were added, and CommonJS [1mrequire [22mis available too - where
       the loaded modules have the same privileges as normal scripts.

   [1mLanguage features - ECMAScript 5[0m
       The scripting backend which mpv currently uses  is  MuJS  -  a  compatible  minimal  ES5  interpreter.  As  such,
       [1mString.substring [22mis implemented for instance, while the common but non-standard [1mString.substr [22mis not. Please con‚Äê
       sult the MuJS pages on language features and platform support - [4mhttps://mujs.com[24m .

   [1mUnsupported Lua APIs and their JS alternatives[0m
       [1mmp.add_timeout(seconds, fn)  [22mJS: [1mid = setTimeout(fn, ms)[0m

       [1mmp.add_periodic_timer(seconds, fn)  [22mJS: [1mid = setInterval(fn, ms)[0m

       [1mutils.parse_json(str [, trail])  [22mJS: [1mJSON.parse(str)[0m

       [1mutils.format_json(v)  [22mJS: [1mJSON.stringify(v)[0m

       [1mutils.to_string(v)  [22msee [1mdump [22mbelow.

       [1mmp.get_next_timeout() [22msee event loop below.

       [1mmp.dispatch_events([allow_wait]) [22msee event loop below.

   [1mScripting APIs - identical to Lua[0m
       (LE)  -  Last-Error, indicates that [1mmp.last_error() [22mcan be used after the call to test for success (empty string)
       or failure (non empty reason string).  Where the Lua APIs use [1mnil [22mto indicate error, JS APIs use [1mundefined[22m.

       [1mmp.command(string) [22m(LE)

       [1mmp.commandv(arg1, arg2, ...) [22m(LE)

       [1mmp.command_native(table [,def]) [22m(LE)

       [1mid = mp.command_native_async(table [,fn]) [22m(LE) Notes: [1mid [22mis true-thy on success, [1merror [22mis empty  string  on  suc‚Äê
       cess.

       [1mmp.abort_async_command(id)[0m

       [1mmp.del_property(name) [22m(LE)

       [1mmp.get_property(name [,def]) [22m(LE)

       [1mmp.get_property_osd(name [,def]) [22m(LE)

       [1mmp.get_property_bool(name [,def]) [22m(LE)

       [1mmp.get_property_number(name [,def]) [22m(LE)

       [1mmp.get_property_native(name [,def]) [22m(LE)

       [1mmp.set_property(name, value) [22m(LE)

       [1mmp.set_property_bool(name, value) [22m(LE)

       [1mmp.set_property_number(name, value) [22m(LE)

       [1mmp.set_property_native(name, value) [22m(LE)

       [1mmp.get_time()[0m

       [1mmp.add_key_binding(key, name|fn [,fn [,flags]])[0m

       [1mmp.add_forced_key_binding(...)[0m

       [1mmp.remove_key_binding(name)[0m

       [1mmp.register_event(name, fn)[0m

       [1mmp.unregister_event(fn)[0m

       [1mmp.observe_property(name, type, fn)[0m

       [1mmp.unobserve_property(fn)[0m

       [1mmp.get_opt(key)[0m

       [1mmp.get_script_name()[0m

       [1mmp.get_script_directory()[0m

       [1mmp.osd_message(text [,duration])[0m

       [1mmp.get_wakeup_pipe()[0m

       [1mmp.register_idle(fn)[0m

       [1mmp.unregister_idle(fn)[0m

       [1mmp.enable_messages(level)[0m

       [1mmp.register_script_message(name, fn)[0m

       [1mmp.unregister_script_message(name)[0m

       [1mmp.create_osd_overlay(format)[0m

       [1mmp.get_osd_size()  [22m(returned object has properties: width, height, aspect)

       [1mmp.msg.log(level, ...)[0m

       [1mmp.msg.fatal(...)[0m

       [1mmp.msg.error(...)[0m

       [1mmp.msg.warn(...)[0m

       [1mmp.msg.info(...)[0m

       [1mmp.msg.verbose(...)[0m

       [1mmp.msg.debug(...)[0m

       [1mmp.msg.trace(...)[0m

       [1mmp.utils.getcwd() [22m(LE)

       [1mmp.utils.readdir(path [, filter]) [22m(LE)

       [1mmp.utils.file_info(path)  [22m(LE)  Note: like lua - this does NOT expand meta-paths like [1m~~/foo [22m(other JS file func‚Äê
       tions do expand meta paths).

       [1mmp.utils.split_path(path)[0m

       [1mmp.utils.join_path(p1, p2)[0m

       [1mmp.utils.subprocess(t)[0m

       [1mmp.utils.subprocess_detached(t)[0m

       [1mmp.utils.get_env_list()[0m

       [1mmp.utils.getpid() [22m(LE)

       [1mmp.add_hook(type, priority, fn(hook))[0m

       [1mmp.options.read_options(obj [, identifier [, on_update]]) [22m(types: string/boolean/number)

   [1mAdditional utilities[0m
       [1mmp.last_error()[0m
              If used after an API call which updates last error, returns an empty string if the API call succeeded,  or
              a non-empty error reason string otherwise.

       [1mError.stack (string)[0m
              When  using [1mtry { ... } catch(e) { ... }[22m, then [1me.stack [22mis the stack trace of the error - if it was created
              using the [1mError(...) [22mconstructor.

       [1mprint (global)[0m
              A convenient alias to [1mmp.msg.info[22m.

       [1mdump (global)[0m
              Like [1mprint [22mbut also expands objects and arrays recursively.

       [1mmp.utils.getenv(name)[0m
              Returns the value of the host environment variable [1mname[22m, or [1mundefined [22mif the variable is not defined.

       [1mmp.utils.get_user_path(path)[0m
              Trivial wrapper of the [1mexpand-path [22mmpv command, returns a string.  [1mread_file[22m, [1mwrite_file[22m, [1mappend_file  [22mand
              [1mrequire [22malready expand the path internally and accept mpv meta-paths like [1m~~desktop/foo[22m.

       [1mmp.utils.read_file(fname [,max])[0m
              Returns  the  content  of file [1mfname [22mas string. If [1mmax [22mis provided and not negative, limit the read to [1mmax[0m
              bytes.

       [1mmp.utils.write_file(fname, str)[0m
              (Over)write file [1mfname [22mwith text content [1mstr[22m. [1mfname [22mmust be prefixed with  [1mfile://  [22mas  simple  protection
              against accidental arguments switch, e.g. [1mmp.utils.write_file("file://~/abc.txt", "hello world")[22m.

       [1mmp.utils.append_file(fname, str)[0m
              Same  as  [1mmp.utils.write_file  [22mif  the  file [1mfname [22mdoes not exist. If it does exist then append instead of
              overwrite.

       Note: [1mread_file[22m, [1mwrite_file [22mand [1mappend_file [22mthrow on errors, allow text content only.

       [1mmp.get_time_ms()[0m
              Same as [1mmp.get_time() [22mbut in ms instead of seconds.

       [1mmp.get_script_file()[0m
              Returns the file name of the current script.

       [1mexit() (global)[0m
              Make the script exit at the end of the current event loop iteration.  Note: please remove added key  bind‚Äê
              ings before calling [1mexit()[22m.

       [1mmp.utils.compile_js(fname, content_str)[0m
              Compiles  the  JS  code [1mcontent_str [22mas file name [1mfname [22m(without loading anything from the filesystem), and
              returns it as a function. Very similar to a [1mFunction [22mconstructor, but shows at stack traces as [1mfname[22m.

       [1mmp.module_paths[0m
              Global modules search paths array for the [1mrequire [22mfunction (see below).

   [1mTimers (global)[0m
       The standard HTML/node.js timers are available:

       [1mid = setTimeout(fn [,duration [,arg1 [,arg2...]]])[0m

       [1mid = setTimeout(code_string [,duration])[0m

       [1mclearTimeout(id)[0m

       [1mid = setInterval(fn [,duration [,arg1 [,arg2...]]])[0m

       [1mid = setInterval(code_string [,duration])[0m

       [1mclearInterval(id)[0m

       [1msetTimeout [22mand [1msetInterval [22mreturn id, and later call [1mfn [22m(or execute [1mcode_string[22m) after [1mduration [22mms. Interval also
       repeat every [1mduration[22m.

       [1mduration [22mhas a minimum and default value of 0, [1mcode_string [22mis a plain string which is evaluated as JS  code,  and
       [1m[,arg1 [,arg2..]] [22mare used as arguments (if provided) when calling back [1mfn[22m.

       The [1mclear...(id) [22mfunctions cancel timer [1mid[22m, and are irreversible.

       Note: timers always call back asynchronously, e.g. [1msetTimeout(fn) [22mwill never call [1mfn [22mbefore returning. [1mfn [22mwill be
       called  either  at the end of this event loop iteration or at a later event loop iteration. This is true also for
       intervals - which also never call back twice at the same event loop iteration.

       Additionally, timers are processed after the event queue is empty, so it's  valid  to  use  [1msetTimeout(fn)  [22mas  a
       one-time idle observer.

   [1mCommonJS modules and require(id)[0m
       CommonJS  Modules  are  a  standard  system  where  scripts can export common functions for use by other scripts.
       Specifically, a module is a script which adds properties (functions, etc) to  its  pre-existing  [1mexports  [22mobject,
       which  another  script  can  access with [1mrequire(module-id)[22m. This runs the module and returns its [1mexports [22mobject.
       Further calls to [1mrequire [22mfor the same module will return its cached [1mexports [22mobject  without  running  the  module
       again.

       Modules  and  [1mrequire  [22mare supported, standard compliant, and generally similar to node.js. However, most node.js
       modules won't run due to missing modules such as [1mfs[22m, [1mprocess[22m, etc, but some node.js modules with  minimal  depen‚Äê
       dencies do work. In general, this is for mpv modules and not a node.js replacement.

       A  [1m.js [22mfile extension is always added to [1mid[22m, e.g. [1mrequire("./foo") [22mwill load the file [1m./foo.js [22mand return its [1mex‚Äê[0m
       [1mports [22mobject.

       An id which starts with [1m./ [22mor [1m../ [22mis relative to the script or module which [1mrequire [22mit. Otherwise it's considered
       a top-level id (CommonJS term).

       Top-level id is evaluated as absolute filesystem path if possible, e.g. [1m/x/y [22mor [1m~/x[22m. Otherwise it's considered  a
       global module id and searched according to [1mmp.module_paths [22min normal array order, e.g. [1mrequire("x") [22mtries to load
       [1mx.js [22mat one of the array paths, and id [1mfoo/x [22mtries to load [1mx.js [22minside dir [1mfoo [22mat one of the paths.

       The  [1mmp.module_paths  [22marray  is empty by default except for scripts which are loaded as a directory where it con‚Äê
       tains one item - [1m<directory>/modules/ [22m.  The array may be updated from a script (or using custom init -  see  be‚Äê
       low) which will affect future calls to [1mrequire [22mfor global module id's which are not already loaded/cached.

       No  [1mglobal  [22mvariable, but a module's [1mthis [22mat its top lexical scope is the global object - also in strict mode. If
       you have a module which needs [1mglobal [22mas the global object, you could do [1mthis.global = this; [22mbefore [1mrequire[22m.

       Functions and variables declared at a module don't pollute the global object.

   [1mCustom initialization[0m
       After mpv initializes the JavaScript environment for a script but before it loads the script - it  tries  to  run
       the  file  [1minit.js  [22mat  the root of the mpv configuration directory. Code at this file can update the environment
       further for all scripts. E.g. if it contains [1mmp.module_paths.push("/foo") [22mthen [1mrequire [22mat all scripts will search
       global module id's also at [1m/foo [22m(do NOT do [1mmp.module_paths = ["/foo"]; [22mbecause this will remove existing paths  -
       like [1m<script-dir>/modules [22mfor scripts which load from a directory).

       The custom-init file is ignored if mpv is invoked with [1m--no-config[22m.

       Before mpv 0.34, the file name was [1m.init.js [22m(with dot) at the same dir.

   [1mThe event loop[0m
       The  event loop poll/dispatch mpv events as long as the queue is not empty, then processes the timers, then waits
       for the next event, and repeats this forever.

       You could put this code at your script to replace the built-in event loop, and also print every event  which  mpv
       sends to your script:

          function mp_event_loop() {
              var wait = 0;
              do {
                  var e = mp.wait_event(wait);
                  dump(e);  // there could be a lot of prints...
                  if (e.event != "none") {
                      mp.dispatch_event(e);
                      wait = 0;
                  } else {
                      wait = mp.process_timers() / 1000;
                      if (wait != 0) {
                          mp.notify_idle_observers();
                          wait = mp.peek_timers_wait() / 1000;
                      }
                  }
              } while (mp.keep_running);
          }

       [1mmp_event_loop  [22mis  a name which mpv tries to call after the script loads.  The internal implementation is similar
       to this (without [1mdump [22mthough..).

       [1me = mp.wait_event(wait) [22mreturns when the next mpv event arrives, or after [1mwait [22mseconds if  positive  and  no  mpv
       events arrived. [1mwait [22mvalue of 0 returns immediately (with [1me.event == "none" [22mif the queue is empty).

       [1mmp.dispatch_event(e)  [22mcalls back the handlers registered for [1me.event[22m, if there are such (event handlers, property
       observers, script messages, etc).

       [1mmp.process_timers() [22mcalls back the already-added, non-canceled due timers, and returns the duration  in  ms  till
       the next due timer (possibly 0), or -1 if there are no pending timers. Must not be called recursively.

       [1mmp.notify_idle_observers()  [22mcalls back the idle observers, which we do when we're about to sleep (wait != 0), but
       the observers may add timers or take non-negligible duration to complete, so we re-calculate [1mwait [22mafterwards.

       [1mmp.peek_timers_wait() [22mreturns the same values as [1mmp.process_timers() [22mbut without doing anything.  Invalid  result
       if called from a timer callback.

       Note:  [1mexit()  [22mis  also  registered  for the [1mshutdown [22mevent, and its implementation is a simple [1mmp.keep_running =[0m
       [1mfalse[22m.

[1mJSON IPC[0m
       mpv can be controlled by external programs using the JSON-based IPC protocol.  It can be  enabled  by  specifying
       the path to a unix socket or a named pipe using the option [1m--input-ipc-server[22m. Clients can connect to this socket
       and send commands to the player or receive events from it.

       [1mWARNING:[0m
          This  is  not intended to be a secure network protocol. It is explicitly insecure: there is no authentication,
          no encryption, and the commands themselves are insecure too. For example, the [1mrun [22mcommand  is  exposed,  which
          can  run arbitrary system commands. The use-case is controlling the player locally. This is not different from
          the MPlayer slave protocol.

   [1mSocat example[0m
       You can use the [1msocat [22mtool to send commands (and receive replies) from the shell. Assuming mpv was started with:

          mpv file.mkv --input-ipc-server=/tmp/mpvsocket

       Then you can control it using socat:

          > echo '{ "command": ["get_property", "playback-time"] }' | socat - /tmp/mpvsocket
          {"data":190.482000,"error":"success"}

       In this case, socat copies data between stdin/stdout and the mpv socket connection.

       See the [1m--idle [22moption how to make mpv start without exiting immediately or playing a file.

       It's also possible to send input.conf style text-only commands:

          > echo 'show-text ${playback-time}' | socat - /tmp/mpvsocket

       But you won't get a reply over the socket. (This particular command shows the playback time on the player's OSD.)

   [1mCommand Prompt example[0m
       Unfortunately, it's not as easy to test the IPC protocol on Windows, since Windows ports of socat (in Cygwin  and
       MSYS2)  don't  understand  named  pipes.  In  the absence of a simple tool to send and receive from bidirectional
       pipes, the [1mecho [22mcommand can be used to send commands, but not receive replies from the command prompt.

       Assuming mpv was started with:

          mpv file.mkv --input-ipc-server=\\.\pipe\mpvsocket

       You can send commands from a command prompt:

          echo show-text ${playback-time} >\\.\pipe\mpvsocket

       To be able to simultaneously read and write from the IPC pipe, like on Linux, it's necessary to write an external
       program that uses overlapped file I/O (or some wrapper like .NET's NamedPipeClientStream.)

       You can open the pipe in PuTTY as "serial" device. This is not very comfortable, but gives a way to test interac‚Äê
       tively without having to write code.

   [1mProtocol[0m
       The protocol uses UTF-8-only JSON as defined by RFC-8259. Unlike standard JSON, "u" escape sequences are not  al‚Äê
       lowed  to  construct  surrogate pairs. To avoid getting conflicts, encode all text characters including and above
       codepoint U+0020 as UTF-8. mpv might output broken UTF-8 in corner cases (see "UTF-8" section below).

       Clients can execute commands on the player by sending JSON messages of the following form:

          { "command": ["command_name", "param1", "param2", ...] }

       where [1mcommand_name [22mis the name of the command to be executed, followed by a list of parameters.  Parameters  must
       be  formatted as native JSON values (integers, strings, booleans, ...). Every message [1mmust [22mbe terminated with [1m\n[22m.
       Additionally, [1m\n [22mmust not appear anywhere inside the message. In practice this  means  that  messages  should  be
       minified before being sent to mpv.

       mpv will then send back a reply indicating whether the command was run correctly, and an additional field holding
       the command-specific return data (it can also be null).

          { "error": "success", "data": null }

       mpv will also send events to clients with JSON messages of the following form:

          { "event": "event_name" }

       where  [1mevent_name  [22mis  the  name  of the event. Additional event-specific fields can also be present. See [4mList[24m [4mof[0m
       [4mevents[24m for a list of all supported events.

       Because events can occur at any time, it may be difficult at times to determine which response  goes  with  which
       command.  Commands  may optionally include a [1mrequest_id [22mwhich, if provided in the command request, will be copied
       verbatim into the response. mpv does not interpret the [1mrequest_id [22min any way; it is solely for the use of the re‚Äê
       quester. The only requirement is that the [1mrequest_id [22mfield must be an integer (a number without fractional  parts
       in  the  range  [1m-2^63..2^63-1[22m). Using other types is deprecated and will currently show a warning. In the future,
       this will raise an error.

       For example, this request:

          { "command": ["get_property", "time-pos"], "request_id": 100 }

       Would generate this response:

          { "error": "success", "data": 1.468135, "request_id": 100 }

       If you don't specify a [1mrequest_id[22m, command replies will set it to 0.

       All commands, replies, and events are separated from each other with a line break character ([1m\n[22m).

       If the first character (after skipping whitespace) is not [1m{[22m, the command will be  interpreted  as  non-JSON  text
       command, as they are used in input.conf (or [1mmpv_command_string() [22min the client API). Additionally, lines starting
       with [1m# [22mand empty lines are ignored.

       Currently, embedded 0 bytes terminate the current line, but you should not rely on this.

   [1mData flow[0m
       Currently,  the mpv-side IPC implementation does not service the socket while a command is executed and the reply
       is written. It is for example not possible that other events, that happened during the execution of the  command,
       are written to the socket before the reply is written.

       This might change in the future. The only guarantee is that replies to IPC messages are sent in sequence.

       Also, since socket I/O is inherently asynchronous, it is possible that you read unrelated event messages from the
       socket, before you read the reply to the previous command you sent. In this case, these events were queued by the
       mpv side before it read and started processing your command message.

       If  the mpv-side IPC implementation switches away from blocking writes and blocking command execution, it may at‚Äê
       tempt to send events at any time.

       You can also use asynchronous commands, which can return in any order, and which do not block IPC protocol inter‚Äê
       action at all while the command is executed in the background.

   [1mAsynchronous commands[0m
       Command can be run asynchronously. This behaves exactly as with normal command execution, except  that  execution
       is  not  blocking. Other commands can be sent while it's executing, and command completion can be arbitrarily re‚Äê
       ordered.

       The [1masync [22mfield controls this. If present, it must be a boolean. If missing, [1mfalse [22mis assumed.

       For example, this initiates an asynchronous command:

          { "command": ["screenshot"], "request_id": 123, "async": true }

       And this is the completion:

          {"request_id":123,"error":"success","data":null}

       By design, you will not get a confirmation that the command was started. If a command is  long  running,  sending
       the message will not lead to any reply until much later when the command finishes.

       Some commands execute synchronously, but these will behave like asynchronous commands that finished execution im‚Äê
       mediately.

       Cancellation of asynchronous commands is available in the libmpv API, but has not yet been implemented in the IPC
       protocol.

   [1mCommands with named arguments[0m
       If  the  [1mcommand  [22mfield  is  a JSON object, named arguments are expected. This is described in the C API [1mmpv_com‚Äê[0m
       [1mmand_node() [22mdocumentation (the [1mMPV_FORMAT_NODE_MAP [22mcase). In some cases, this may make  commands  more  readable,
       while some obscure commands basically require using named arguments.

       Currently, only "proper" commands (as listed by [4mList[24m [4mof[24m [4mInput[24m [4mCommands[24m) support named arguments.

   [1mCommands[0m
       In addition to the commands described in [4mList[24m [4mof[24m [4mInput[24m [4mCommands[24m, a few extra commands can also be used as part of
       the protocol:

       [1mclient_name[0m
              Return the name of the client as string. This is the string [1mipc-N [22mwith N being an integer number.

       [1mget_time_us[0m
              Return  the current mpv internal time in microseconds as a number. This is basically the system time, with
              an arbitrary offset.

       [1mget_property[0m
              Return the value of the given property. The value will be sent in the data field of the replay message.

              Example:

                 { "command": ["get_property", "volume"] }
                 { "data": 50.0, "error": "success" }

       [1mget_property_string[0m
              Like [1mget_property[22m, but the resulting data will always be a string.

              Example:

                 { "command": ["get_property_string", "volume"] }
                 { "data": "50.000000", "error": "success" }

       [1mset_property[0m
              Set the given property to the given value. See [4mProperties[24m for more information about properties.

              Example:

                 { "command": ["set_property", "pause", true] }
                 { "error": "success" }

       [1mset_property_string[0m
              Alias for [1mset_property[22m. Both commands accept native values and strings.

       [1mobserve_property[0m
              Watch a property for changes. If the given property is changed, then an event of type [1mproperty-change [22mwill
              be generated

              Example:

                 { "command": ["observe_property", 1, "volume"] }
                 { "error": "success" }
                 { "event": "property-change", "id": 1, "data": 52.0, "name": "volume" }

              [1mWARNING:[0m
                 If the connection is closed, the IPC client is destroyed internally, and the  observed  properties  are
                 unregistered.  This  happens  for example when sending commands to a socket with separate [1msocat [22minvoca‚Äê
                 tions.  This can make it seem like property observation does not work. You must keep the IPC connection
                 open to make it work.

       [1mobserve_property_string[0m
              Like [1mobserve_property[22m, but the resulting data will always be a string.

              Example:

                 { "command": ["observe_property_string", 1, "volume"] }
                 { "error": "success" }
                 { "event": "property-change", "id": 1, "data": "52.000000", "name": "volume" }

       [1munobserve_property[0m
              Undo [1mobserve_property [22mor [1mobserve_property_string[22m. This requires the numeric id passed to the observed com‚Äê
              mand as argument.

              Example:

                 { "command": ["unobserve_property", 1] }
                 { "error": "success" }

       [1mrequest_log_messages[0m
              Enable output of mpv log messages. They will be received as events. The parameter to this command  is  the
              log-level (see [1mmpv_request_log_messages [22mC API function).

              Log message output is meant for humans only (mostly for debugging).  Attempting to retrieve information by
              parsing  these  messages will just lead to breakages with future mpv releases. Instead, make a feature re‚Äê
              quest, and ask for a proper event that returns the information you need.

       [1menable_event, disable_event[0m
              Enables or disables the named event. Mirrors the [1mmpv_request_event [22mC API function. If the  string  [1mall  [22mis
              used instead of an event name, all events are enabled or disabled.

              By default, most events are enabled, and there is not much use for this command.

       [1mget_version[0m
              Returns the client API version the C API of the remote mpv instance provides.

              See also: [1mDOCS/client-api-changes.rst[22m.

   [1mUTF-8[0m
       Normally,  all strings are in UTF-8. Sometimes it can happen that strings are in some broken encoding (often hap‚Äê
       pens with file tags and such, and filenames on many Unixes are not required to be in UTF-8  either).  This  means
       that mpv sometimes sends invalid JSON. If that is a problem for the client application's parser, it should filter
       the raw data for invalid UTF-8 sequences and perform the desired replacement, before feeding the data to its JSON
       parser.

       mpv will not attempt to construct invalid UTF-8 with broken "u" escape sequences. This includes surrogate pairs.

   [1mJSON extensions[0m
       The following non-standard extensions are supported:

          ‚Ä¢ a list or object item can have a trailing ","

          ‚Ä¢ object syntax accepts "=" in addition of ":"

          ‚Ä¢ object  keys  can  be  unquoted,  if they start with a character in "A-Za-z_" and contain only characters in
            "A-Za-z0-9_"

          ‚Ä¢ byte escapes with "xAB" are allowed (with AB being a 2 digit hex number)

       Example:

          { objkey = "value\x0A" }

       Is equivalent to:

          { "objkey": "value\n" }

   [1mAlternative ways of starting clients[0m
       You can create an anonymous IPC connection without having to set [1m--input-ipc-server[22m. This is achieved  through  a
       mpv pseudo scripting backend that starts processes.

       You  can put [1m.run [22mfile extension in the mpv scripts directory in its  config directory (see the [4mFILES[24m section for
       details), or load them through other means (see [4mScript[24m [4mlocation[24m). These scripts are simply executed with  the  OS
       native  mechanism  (as if you ran them in the shell). They must have a proper shebang and have the executable bit
       set.

       When executed, a socket (the IPC connection) is passed to them through file descriptor inheritance. The file  de‚Äê
       scriptor  is  indicated as the special command line argument [1m--mpv-ipc-fd=N[22m, where [1mN [22mis the numeric file descrip‚Äê
       tor.

       The rest is the same as with a normal [1m--input-ipc-server [22mIPC connection. mpv does not attempt to observe or other
       interact with the started script process.

       This does not work in Windows yet.

[1mCHANGELOG[0m
       There is no real changelog, but you can look at the following things:

       ‚Ä¢ The release changelog, which should contain most user-visible changes, including new features and bug fixes:

         [4mhttps://github.com/mpv-player/mpv/releases[0m

       ‚Ä¢ The git log, which is the "real" changelog

       ‚Ä¢ The file [4mhttps://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes.rst[24m documents changes to the com‚Äê
         mand and user interface, such as options and properties. (It usually documents breaking changes only, additions
         and enhancements are often not listed.)

       ‚Ä¢ C API changes are listed in [4mhttps://github.com/mpv-player/mpv/blob/master/DOCS/client-api-changes.rst[0m

       ‚Ä¢ The file [1mmplayer-changes.rst [22min the [1mDOCS [22msub directory on the git repository, which used to be in place of this
         section. It documents some changes that happened since mplayer2 forked off MPlayer. (Not updated anymore.)

[1mEMBEDDING INTO OTHER PROGRAMS (LIBMPV)[0m
       mpv can be embedded into other programs as video/audio playback backend. The recommended way to do  so  is  using
       libmpv.  See  [1mlibmpv/client.h  [22min  the mpv source code repository. This provides a C API. Bindings for other lan‚Äê
       guages might be available (see wiki).

       Since libmpv merely allows access to underlying mechanisms that can control mpv, further documentation is  spread
       over a few places:

       ‚Ä¢ [4mhttps://github.com/mpv-player/mpv/blob/master/libmpv/client.h[0m

       ‚Ä¢ [4mhttps://mpv.io/manual/master/#options[0m

       ‚Ä¢ [4mhttps://mpv.io/manual/master/#list-of-input-commands[0m

       ‚Ä¢ [4mhttps://mpv.io/manual/master/#properties[0m

       ‚Ä¢ [4mhttps://github.com/mpv-player/mpv-examples/tree/master/libmpv[0m

[1mC PLUGINS[0m
       You can write C plugins for mpv. These use the libmpv API, although they do not use the libmpv library itself.

       They  are enabled by default if compiler supports linking with the [1m-rdynamic [22mflag on Linux/BSD platforms. On Win‚Äê
       dows the are always enabled.

   [1mC plugins location[0m
       C plugins are put into the mpv scripts directory in its config directory (see the  [4mFILES[24m  section  for  details).
       They must have a [1m.so [22mor [1m.dll [22mfile extension. They can also be explicitly loaded with the [1m--script [22moption.

   [1mAPI[0m
       A C plugin must export the following function:

          int mpv_open_cplugin(mpv_handle *handle)

       The  plugin  function  will  be  called  on loading time. This function does not return as long as your plugin is
       loaded (it runs in its own thread). The [1mhandle [22mwill be deallocated as soon as the plugin function returns.

       The return value is interpreted as error status. A value of [1m0 [22mis interpreted as success, while [1m-1 [22msignals an  er‚Äê
       ror. In the latter case, the player prints an uninformative error message that loading failed.

       Return values other than [1m0 [22mand [1m-1 [22mare reserved, and trigger undefined behavior.

       Within  the  plugin function, you can call libmpv API functions. The [1mhandle [22mis created by [1mmpv_create_client() [22m(or
       actually an internal equivalent), and belongs to you. You can call [1mmpv_wait_event() [22mto wait for things happening,
       and so on.

       Note that the player might block until your plugin calls [1mmpv_wait_event() [22mfor the first time. This  gives  you  a
       chance to install initial hooks etc.  before playback begins.

       The details are quite similar to Lua scripts.

   [1mLinkage to libmpv[0m
       The  current  implementation  requires that your plugins are [1mnot [22mlinked against libmpv. What your plugins use are
       not symbols from a libmpv binary, but symbols from the mpv host binary.

       On Windows to make symbols from the host binary available, you have to define MPV_CPLUGIN_DYNAMIC_SYM  when  com‚Äê
       piling cplugin. This will load symbols dynamically, before calling [1mmpv_open_cplugin()[22m.

   [1mExamples[0m
       See:

       ‚Ä¢ [4mhttps://github.com/mpv-player/mpv-examples/tree/master/cplugins[0m

[1mENVIRONMENT VARIABLES[0m
       There are a number of environment variables that can be used to control the behavior of mpv.

       [1mHOME, XDG_CONFIG_HOME[0m
              Used to determine mpv config directory. If [1mXDG_CONFIG_HOME [22mis not set, [1m$HOME/.config/mpv [22mis used.

              [1m$HOME/.mpv [22mis always added to the list of config search paths with a lower priority.

       [1mMPV_HOME[0m
              Directory  where  mpv looks for user settings. Overrides [1mHOME[22m, and mpv will try to load the config file as
              [1m$MPV_HOME/mpv.conf[22m.

       [1mMPV_VERBOSE (see also -v and --msg-level)[0m
              Set the initial verbosity level across all message modules (default: 0).  This is an integer, and the  re‚Äê
              sulting verbosity corresponds to the number of [1m--v [22moptions passed to the command line.

       [1mMPV_LEAK_REPORT[0m
              If  set  to  [1m1[22m, enable internal talloc leak reporting. If set to another value, disable leak reporting. If
              unset, use the default, which normally is [1m0[22m. If mpv was built with [1m--enable-ta-leak-report[22m, the default is
              [1m1[22m. If leak reporting was disabled at compile time ([1mNDEBUG [22min custom [1mCFLAGS[22m), this environment variable  is
              ignored.

       [1mLADSPA_PATH[0m
              Specifies the search path for LADSPA plugins. If it is unset, fully qualified path names must be used.

       [1mDISPLAY[0m
              Standard X11 display name to use.

       [1mFFmpeg/Libav:[0m
              This library accesses various environment variables. However, they are not centrally documented, and docu‚Äê
              menting them is not our job. Therefore, this list is incomplete.

              Notable environment variables:

              [1mhttp_proxy[0m
                     URL to proxy for [1mhttp:// [22mand [1mhttps:// [22mURLs.

              [1mno_proxy[0m
                     List  of  domain patterns for which no proxy should be used.  List entries are separated by [1m,[22m. Pat‚Äê
                     terns can include [1m*[22m.

       [1mlibdvdcss:[0m

              [1mDVDCSS_CACHE[0m
                     Specify a directory in which to store title key values. This will speed  up  descrambling  of  DVDs
                     which are in the cache. The [1mDVDCSS_CACHE [22mdirectory is created if it does not exist, and a subdirec‚Äê
                     tory is created named after the DVD's title or manufacturing date. If [1mDVDCSS_CACHE [22mis not set or is
                     empty,  libdvdcss  will  use the default value which is [1m${HOME}/.dvdcss/ [22munder Unix and the roaming
                     application data directory ([1m%APPDATA%[22m) under Windows. The special value "off" disables caching.

              [1mDVDCSS_METHOD[0m
                     Sets the authentication and decryption method that libdvdcss will use to read scrambled discs.  Can
                     be one of [1mtitle[22m, [1mkey [22mor [1mdisc[22m.

                     [1mkey    [22mis  the default method. libdvdcss will use a set of calculated player keys to try to get the
                            disc key. This can fail if the drive does not recognize any of the player keys.

                     [1mdisc   [22mis a fallback method when key has failed. Instead of using player keys, libdvdcss will crack
                            the disc key using a brute force algorithm. This process is CPU intensive and requires 64 MB
                            of memory to store temporary data.

                     [1mtitle  [22mis the fallback when all other methods have failed. It does not rely on a key exchange  with
                            the  DVD  drive,  but rather uses a crypto attack to guess the title key. On rare cases this
                            may fail because there is not enough encrypted data on the disc to perform a statistical at‚Äê
                            tack, but on the other hand it is the only way to decrypt a DVD stored on a hard disc, or  a
                            DVD with the wrong region on an RPC2 drive.

              [1mDVDCSS_RAW_DEVICE[0m
                     Specify  the raw device to use. Exact usage will depend on your operating system, the Linux utility
                     to set up raw devices is raw(8) for instance. Please note that on most operating systems,  using  a
                     raw  device  requires  highly  aligned buffers: Linux requires a 2048 bytes alignment (which is the
                     size of a DVD sector).

              [1mDVDCSS_VERBOSE[0m
                     Sets the libdvdcss verbosity level.

                     [1m0      [22mOutputs no messages at all.

                     [1m1      [22mOutputs error messages to stderr.

                     [1m2      [22mOutputs error messages and debug messages to stderr.

              [1mDVDREAD_NOKEYS[0m
                     Skip retrieving all keys on startup. Currently disabled.

              [1mHOME   [22mFIXME: Document this.

[1mEXIT CODES[0m
       Normally [1mmpv [22mreturns 0 as exit code after finishing playback successfully.  If errors happen, the following  exit
       codes can be returned:

          [1m1      [22mError initializing mpv. This is also returned if unknown options are passed to mpv.

          [1m2      [22mThe  file  passed  to  mpv couldn't be played. This is somewhat fuzzy: currently, playback of a file is
                 considered to be successful if initialization was mostly successful, even if playback fails immediately
                 after initialization.

          [1m3      [22mThere were some files that could be played, and some files which couldn't (using the definition of suc‚Äê
                 cess from above).

          [1m4      [22mQuit due to a signal, Ctrl+c in a VO window (by default), or from the default quit key bindings in  en‚Äê
                 coding mode.

       Note  that  quitting  the player manually will always lead to exit code 0, overriding the exit code that would be
       returned normally. Also, the [1mquit [22minput command can take an exit code: in this case, that exit code is returned.

[1mFILES[0m
       Note that this section assumes Linux/BSD. On other platforms the paths may be different.  For  Windows-specifics,
       see [4mFILES[24m [4mON[24m [4mWINDOWS[24m section.

       [1m/usr/local/etc/mpv/mpv.conf[0m
              mpv  system-wide settings (depends on [1m--prefix [22mpassed to configure - mpv in default configuration will use
              [1m/usr/local/etc/mpv/ [22mas config directory, while most Linux distributions will set it to [1m/etc/mpv/[22m).

       [1m~/.cache/mpv[0m
              The standard cache directory. Certain options within mpv may cause it to write cache files to  disk.  This
              can be overridden by environment variables, in ascending order:

              [1m1      [22mIf [1m$XDG_CACHE_HOME [22mis set, then the derived cache directory will be [1m$XDG_CACHE_HOME/mpv[22m.

              [1m2      [22mIf [1m$MPV_HOME [22mis set, then the derived cache directory will be [1m$MPV_HOME[22m.

              If the directory does not exist, mpv will try to create it automatically.

       [1m~/.config/mpv[0m
              The standard configuration directory. This can be overridden by environment variables, in ascending order:

              [1m1      [22mIf [1m$XDG_CONFIG_HOME [22mis set, then the derived configuration directory will be [1m$XDG_CONFIG_HOME/mpv[22m.

              [1m2      [22mIf [1m$MPV_HOME [22mis set, then the derived configuration directory will be [1m$MPV_HOME[22m.

              If  this directory, nor the original configuration directory (see below) do not exist, mpv tries to create
              this directory automatically.

       [1m~/.mpv/[0m
              The original (pre 0.5.0) configuration directory. It will continue to be read if present. If  this  direc‚Äê
              tory  is present and the standard configuration directory is not present, then cache files and watch later
              config files will also be written to this directory.

              If both this directory and the standard configuration directory are present, configuration  will  be  read
              from  both  with the standard configuration directory content taking precedence. However, you should fully
              migrate to the standard directory and a warning will be shown in this situation.

       [1m~/.config/mpv/mpv.conf[0m
              mpv user settings (see [4mCONFIGURATION[24m [4mFILES[24m section)

       [1m~/.config/mpv/input.conf[0m
              key bindings (see [4mINPUT.CONF[24m section)

       [1m~/.config/mpv/fonts.conf[0m
              Fontconfig fonts.conf that is customized for mpv. You should include system fonts.conf in this file or mpv
              would not know about fonts that you already have in the system.

              Only available when libass is built with fontconfig.

       [1m~/.config/mpv/subfont.ttf[0m
              fallback subtitle font

       [1m~/.config/mpv/fonts/[0m
              Default location for [1m--sub-fonts-dir [22m(see [4mSubtitles[24m) and [1m--osd-fonts-dir [22m(see [4mOSD[24m).

       [1m~/.config/mpv/scripts/[0m
              All files in this directory are loaded as if they were passed to the [1m--script [22moption. They are  loaded  in
              alphabetical order.

              The [1m--load-scripts=no [22moption disables loading these files.

              See [4mScript[24m [4mlocation[24m for details.

       [1m~/.local/state/mpv/watch_later/[0m
              Contains  temporary  config  files needed for resuming playback of files with the watch later feature. See
              for example the [1mQ [22mkey binding, or the [1mquit-watch-later [22minput command.

              This can be overridden by environment variables, in ascending order:

              [1m1      [22mIf   [1m$XDG_STATE_HOME   [22mis   set,   then   the   derived   watch    later    directory    will    be
                     [1m$XDG_STATE_HOME/mpv/watch_later[22m.

              [1m2      [22mIf [1m$MPV_HOME [22mis set, then the derived watch later directory will be [1m$MPV_HOME/watch_later[22m.

              Each  file  is  a small config file which is loaded if the corresponding media file is loaded. It contains
              the playback position and some (not necessarily all) settings that were changed during playback. The file‚Äê
              names are hashed from the full paths of the media files. It's in general not possible to extract the media
              filename from this hash. However, you can set the [1m--write-filename-in-watch-later-config [22moption,  and  the
              player will add the media filename to the contents of the resume config file.

       [1m~/.config/mpv/script-opts/osc.conf[0m
              This is loaded by the OSC script. See the [4mON[24m [4mSCREEN[24m [4mCONTROLLER[24m docs for details.

              Other  files in this directory are specific to the corresponding scripts as well, and the mpv core doesn't
              touch them.

[1mFILES ON WINDOWS[0m
       On win32 (if compiled with MinGW, but not Cygwin), the default config file locations are different. They are gen‚Äê
       erally located under [1m%APPDATA%/mpv/[22m.  For example, the path to mpv.conf is [1m%APPDATA%/mpv/mpv.conf[22m, which maps  to
       a system and user-specific path, for example
          [1mC:\users\USERNAME\AppData\Roaming\mpv\mpv.conf[0m

       You can find the exact path by running [1mecho %APPDATA%\mpv\mpv.conf [22min cmd.exe.

       Other config files (such as [1minput.conf[22m) are in the same directory. See the [4mFILES[24m section above.

       The cache directory is located at [1m%LOCALAPPDATA%/mpv/cache[22m.

       The watch_later directory is located at [1m%LOCALAPPDATA%/mpv/watch_later[22m.

       The environment variable [1m$MPV_HOME [22mcompletely overrides these, like on UNIX.

       If  a  directory  named [1mportable_config [22mnext to the mpv.exe exists, all config will be loaded from this directory
       only. Watch later config files and cache files are written to this directory as well.  (This  exists  on  Windows
       only  and is redundant with [1m$MPV_HOME[22m. However, since Windows is very scripting unfriendly, a wrapper script just
       setting [1m$MPV_HOME[22m, like you could do it on other systems, won't work. [1mportable_config [22mis provided for convenience
       to get around this restriction.)

       Config files located in the same directory as [1mmpv.exe [22mare loaded with  lower  priority.  Some  config  files  are
       loaded  only  once,  which  means that e.g. of 2 [1minput.conf [22mfiles located in two config directories, only the one
       from the directory with higher priority will be loaded.

       A third config directory with the lowest priority is the directory named [1mmpv [22min the same  directory  as  [1mmpv.exe[22m.
       This  used  to  be the directory with the highest priority, but is now discouraged to use and might be removed in
       the future.

       Note that mpv likes to mix [1m/ [22mand [1m\ [22mpath separators for simplicity.  kernel32.dll accepts this, but  cmd.exe  does
       not.

[1mFILES ON MACOS[0m
       On  macOS  the  watch  later directory is located at [1m~/.config/mpv/watch_later/ [22mand the cache directory is set to
       [1m~/Library/Caches/io.mpv/[22m. These directories can't be overwritten by enviroment variables.  Everything else is the
       same as [4mFILES[24m.

[1mCOPYRIGHT[0m
       GPLv2+

                                                                                                                  [4mMPV[24m(1)
